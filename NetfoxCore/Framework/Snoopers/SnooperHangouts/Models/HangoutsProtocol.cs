// Copyright (c) 2017 Jan Pluskal, Viliam Letavay
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HangoutsProtocol.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code
using pb = Google.Protobuf;
using pbc = Google.Protobuf.Collections;
using pbr = Google.Protobuf.Reflection;

namespace Netfox.Snoopers.SnooperHangouts.Models {

  /// <summary>Holder for reflection information generated from HangoutsProtocol.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class HangoutsProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for HangoutsProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HangoutsProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZIYW5nb3V0c1Byb3RvY29sLnByb3RvIlwKE0RvTm90RGlzdHVyYlNldHRp",
            "bmcSFgoOZG9fbm90X2Rpc3R1cmIYASABKAgSHAoUZXhwaXJhdGlvbl90aW1l",
            "c3RhbXAYAiABKAQSDwoHdmVyc2lvbhgDIAEoBCJCChROb3RpZmljYXRpb25T",
            "ZXR0aW5ncxIqCgxkbmRfc2V0dGluZ3MYASABKAsyFC5Eb05vdERpc3R1cmJT",
            "ZXR0aW5nIhwKDkNvbnZlcnNhdGlvbklkEgoKAmlkGAEgASgJIjEKDVBhcnRp",
            "Y2lwYW50SWQSDwoHZ2FpYV9pZBgBIAEoCRIPCgdjaGF0X2lkGAIgASgJIj8K",
            "DERldmljZVN0YXR1cxIOCgZtb2JpbGUYASABKAgSDwoHZGVza3RvcBgCIAEo",
            "CBIOCgZ0YWJsZXQYAyABKAgiegoIUHJlc2VuY2USEQoJcmVhY2hhYmxlGAEg",
            "ASgIEhEKCWF2YWlsYWJsZRgCIAEoCBIkCg1kZXZpY2Vfc3RhdHVzGAYgASgL",
            "Mg0uRGV2aWNlU3RhdHVzEiIKDG1vb2Rfc2V0dGluZxgJIAEoCzIMLk1vb2RT",
            "ZXR0aW5nIk4KDlByZXNlbmNlUmVzdWx0Eh8KB3VzZXJfaWQYASABKAsyDi5Q",
            "YXJ0aWNpcGFudElkEhsKCHByZXNlbmNlGAIgASgLMgkuUHJlc2VuY2UiNwoQ",
            "Q2xpZW50SWRlbnRpZmllchIQCghyZXNvdXJjZRgBIAEoCRIRCgloZWFkZXJf",
            "aWQYAiABKAkiZQoTQ2xpZW50UHJlc2VuY2VTdGF0ZRIlCgppZGVudGlmaWVy",
            "GAEgASgLMhEuQ2xpZW50SWRlbnRpZmllchInCgVzdGF0ZRgCIAEoDjIYLkNs",
            "aWVudFByZXNlbmNlU3RhdGVUeXBlIn4KDlVzZXJFdmVudFN0YXRlEh8KB3Vz",
            "ZXJfaWQYASABKAsyDi5QYXJ0aWNpcGFudElkEhsKE2NsaWVudF9nZW5lcmF0",
            "ZWRfaWQYAiABKAkSLgoSbm90aWZpY2F0aW9uX2xldmVsGAMgASgOMhIuTm90",
            "aWZpY2F0aW9uTGV2ZWwiVAoKRm9ybWF0dGluZxIMCgRib2xkGAEgASgIEg4K",
            "Bml0YWxpYxgCIAEoCBIVCg1zdHJpa2V0aHJvdWdoGAMgASgIEhEKCXVuZGVy",
            "bGluZRgEIAEoCCIfCghMaW5rRGF0YRITCgtsaW5rX3RhcmdldBgBIAEoCSJy",
            "CgdTZWdtZW50EhoKBHR5cGUYASABKA4yDC5TZWdtZW50VHlwZRIMCgR0ZXh0",
            "GAIgASgJEh8KCmZvcm1hdHRpbmcYAyABKAsyCy5Gb3JtYXR0aW5nEhwKCWxp",
            "bmtfZGF0YRgEIAEoCzIJLkxpbmtEYXRhIokDCglQbHVzUGhvdG8SJwoJdGh1",
            "bWJuYWlsGAEgASgLMhQuUGx1c1Bob3RvLlRodW1ibmFpbBIbChNvd25lcl9v",
            "YmZ1c2NhdGVkX2lkGAIgASgJEhAKCGFsYnVtX2lkGAMgASgJEhAKCHBob3Rv",
            "X2lkGAQgASgJEgsKA3VybBgGIAEoCRIcChRvcmlnaW5hbF9jb250ZW50X3Vy",
            "bBgKIAEoCRIoCgptZWRpYV90eXBlGA0gASgOMhQuUGx1c1Bob3RvLk1lZGlh",
            "VHlwZRIRCglzdHJlYW1faWQYDiADKAkaUAoJVGh1bWJuYWlsEgsKA3VybBgB",
            "IAEoCRIRCglpbWFnZV91cmwYBCABKAkSEAoId2lkdGhfcHgYCiABKAQSEQoJ",
            "aGVpZ2h0X3B4GAsgASgEIlgKCU1lZGlhVHlwZRIWChJNRURJQV9UWVBFX1VO",
            "S05PV04QABIUChBNRURJQV9UWVBFX1BIT1RPEAESHQoZTUVESUFfVFlQRV9B",
            "TklNQVRFRF9QSE9UTxAEIoEBCgVQbGFjZRILCgN1cmwYASABKAkSDAoEbmFt",
            "ZRgDIAEoCRI5ChRyZXByZXNlbnRhdGl2ZV9pbWFnZRi5ASABKAsyGi5QbGFj",
            "ZS5SZXByZXNlbnRhdGl2ZUltYWdlGiIKE1JlcHJlc2VudGF0aXZlSW1hZ2US",
            "CwoDdXJsGAIgASgJIm0KCUVtYmVkSXRlbRIXCgR0eXBlGAEgAygOMgkuSXRl",
            "bVR5cGUSCgoCaWQYAiABKAkSIQoKcGx1c19waG90bxiVgZcNIAEoCzIKLlBs",
            "dXNQaG90bxIYCgVwbGFjZRjoz4oRIAEoCzIGLlBsYWNlIiwKCkF0dGFjaG1l",
            "bnQSHgoKZW1iZWRfaXRlbRgBIAEoCzIKLkVtYmVkSXRlbSJMCg5NZXNzYWdl",
            "Q29udGVudBIZCgdzZWdtZW50GAEgAygLMgguU2VnbWVudBIfCgphdHRhY2ht",
            "ZW50GAIgAygLMgsuQXR0YWNobWVudCIuCg9FdmVudEFubm90YXRpb24SDAoE",
            "dHlwZRgBIAEoBRINCgV2YWx1ZRgCIAEoCSJdCgtDaGF0TWVzc2FnZRIkCgph",
            "bm5vdGF0aW9uGAIgAygLMhAuRXZlbnRBbm5vdGF0aW9uEigKD21lc3NhZ2Vf",
            "Y29udGVudBgDIAEoCzIPLk1lc3NhZ2VDb250ZW50ImAKEE1lbWJlcnNoaXBD",
            "aGFuZ2USIwoEdHlwZRgBIAEoDjIVLk1lbWJlcnNoaXBDaGFuZ2VUeXBlEicK",
            "D3BhcnRpY2lwYW50X2lkcxgDIAMoCzIOLlBhcnRpY2lwYW50SWQiOAoSQ29u",
            "dmVyc2F0aW9uUmVuYW1lEhAKCG5ld19uYW1lGAEgASgJEhAKCG9sZF9uYW1l",
            "GAIgASgJIl0KDEhhbmdvdXRFdmVudBIlCgpldmVudF90eXBlGAEgASgOMhEu",
            "SGFuZ291dEV2ZW50VHlwZRImCg5wYXJ0aWNpcGFudF9pZBgCIAMoCzIOLlBh",
            "cnRpY2lwYW50SWQixQEKD09UUk1vZGlmaWNhdGlvbhIrCg5vbGRfb3RyX3N0",
            "YXR1cxgBIAEoDjITLk9mZlRoZVJlY29yZFN0YXR1cxIrCg5uZXdfb3RyX3N0",
            "YXR1cxgCIAEoDjITLk9mZlRoZVJlY29yZFN0YXR1cxIrCg5vbGRfb3RyX3Rv",
            "Z2dsZRgDIAEoDjITLk9mZlRoZVJlY29yZFRvZ2dsZRIrCg5uZXdfb3RyX3Rv",
            "Z2dsZRgEIAEoDjITLk9mZlRoZVJlY29yZFRvZ2dsZSJFCgxIYXNoTW9kaWZp",
            "ZXISEQoJdXBkYXRlX2lkGAEgASgJEhEKCWhhc2hfZGlmZhgCIAEoBBIPCgd2",
            "ZXJzaW9uGAQgASgEIpoFCgVFdmVudBIoCg9jb252ZXJzYXRpb25faWQYASAB",
            "KAsyDy5Db252ZXJzYXRpb25JZBIhCglzZW5kZXJfaWQYAiABKAsyDi5QYXJ0",
            "aWNpcGFudElkEhEKCXRpbWVzdGFtcBgDIAEoBBIpChBzZWxmX2V2ZW50X3N0",
            "YXRlGAQgASgLMg8uVXNlckV2ZW50U3RhdGUSIAoLc291cmNlX3R5cGUYBiAB",
            "KA4yCy5Tb3VyY2VUeXBlEiIKDGNoYXRfbWVzc2FnZRgHIAEoCzIMLkNoYXRN",
            "ZXNzYWdlEiwKEW1lbWJlcnNoaXBfY2hhbmdlGAkgASgLMhEuTWVtYmVyc2hp",
            "cENoYW5nZRIwChNjb252ZXJzYXRpb25fcmVuYW1lGAogASgLMhMuQ29udmVy",
            "c2F0aW9uUmVuYW1lEiQKDWhhbmdvdXRfZXZlbnQYCyABKAsyDS5IYW5nb3V0",
            "RXZlbnQSEAoIZXZlbnRfaWQYDCABKAkSHAoUZXhwaXJhdGlvbl90aW1lc3Rh",
            "bXAYDSABKAQSKgoQb3RyX21vZGlmaWNhdGlvbhgOIAEoCzIQLk9UUk1vZGlm",
            "aWNhdGlvbhIfChdhZHZhbmNlc19zb3J0X3RpbWVzdGFtcBgPIAEoCBInCgpv",
            "dHJfc3RhdHVzGBAgASgOMhMuT2ZmVGhlUmVjb3JkU3RhdHVzEhEKCXBlcnNp",
            "c3RlZBgRIAEoCBIkCgttZWRpdW1fdHlwZRgUIAEoCzIPLkRlbGl2ZXJ5TWVk",
            "aXVtEh4KCmV2ZW50X3R5cGUYFyABKA4yCi5FdmVudFR5cGUSFQoNZXZlbnRf",
            "dmVyc2lvbhgYIAEoBBIkCg1oYXNoX21vZGlmaWVyGBogASgLMg0uSGFzaE1v",
            "ZGlmaWVyIlYKDVVzZXJSZWFkU3RhdGUSJgoOcGFydGljaXBhbnRfaWQYASAB",
            "KAsyDi5QYXJ0aWNpcGFudElkEh0KFWxhdGVzdF9yZWFkX3RpbWVzdGFtcBgC",
            "IAEoBCJeCg5EZWxpdmVyeU1lZGl1bRIoCgttZWRpdW1fdHlwZRgBIAEoDjIT",
            "LkRlbGl2ZXJ5TWVkaXVtVHlwZRIiCgxwaG9uZV9udW1iZXIYAiABKAsyDC5Q",
            "aG9uZU51bWJlciJZChREZWxpdmVyeU1lZGl1bU9wdGlvbhIoCg9kZWxpdmVy",
            "eV9tZWRpdW0YASABKAsyDy5EZWxpdmVyeU1lZGl1bRIXCg9jdXJyZW50X2Rl",
            "ZmF1bHQYAiABKAgiqAMKFVVzZXJDb252ZXJzYXRpb25TdGF0ZRIbChNjbGll",
            "bnRfZ2VuZXJhdGVkX2lkGAIgASgJEicKD3NlbGZfcmVhZF9zdGF0ZRgHIAEo",
            "CzIOLlVzZXJSZWFkU3RhdGUSIwoGc3RhdHVzGAggASgOMhMuQ29udmVyc2F0",
            "aW9uU3RhdHVzEi4KEm5vdGlmaWNhdGlvbl9sZXZlbBgJIAEoDjISLk5vdGlm",
            "aWNhdGlvbkxldmVsEh8KBHZpZXcYCiADKA4yES5Db252ZXJzYXRpb25WaWV3",
            "EiIKCmludml0ZXJfaWQYCyABKAsyDi5QYXJ0aWNpcGFudElkEhgKEGludml0",
            "ZV90aW1lc3RhbXAYDCABKAQSFgoOc29ydF90aW1lc3RhbXAYDSABKAQSGAoQ",
            "YWN0aXZlX3RpbWVzdGFtcBgOIAEoBBIsCg9pbnZpdGVfYWZmaW5pdHkYDyAB",
            "KA4yEy5JbnZpdGF0aW9uQWZmaW5pdHkSNQoWZGVsaXZlcnlfbWVkaXVtX29w",
            "dGlvbhgRIAMoCzIVLkRlbGl2ZXJ5TWVkaXVtT3B0aW9uItwBChtDb252ZXJz",
            "YXRpb25QYXJ0aWNpcGFudERhdGESGgoCaWQYASABKAsyDi5QYXJ0aWNpcGFu",
            "dElkEhUKDWZhbGxiYWNrX25hbWUYAiABKAkSLAoRaW52aXRhdGlvbl9zdGF0",
            "dXMYAyABKA4yES5JbnZpdGF0aW9uU3RhdHVzEioKEHBhcnRpY2lwYW50X3R5",
            "cGUYBSABKA4yEC5QYXJ0aWNpcGFudFR5cGUSMAoVbmV3X2ludml0YXRpb25f",
            "c3RhdHVzGAYgASgOMhEuSW52aXRhdGlvblN0YXR1cyKPBAoMQ29udmVyc2F0",
            "aW9uEigKD2NvbnZlcnNhdGlvbl9pZBgBIAEoCzIPLkNvbnZlcnNhdGlvbklk",
            "Eh8KBHR5cGUYAiABKA4yES5Db252ZXJzYXRpb25UeXBlEgwKBG5hbWUYAyAB",
            "KAkSNwoXc2VsZl9jb252ZXJzYXRpb25fc3RhdGUYBCABKAsyFi5Vc2VyQ29u",
            "dmVyc2F0aW9uU3RhdGUSIgoKcmVhZF9zdGF0ZRgIIAMoCzIOLlVzZXJSZWFk",
            "U3RhdGUSGgoSaGFzX2FjdGl2ZV9oYW5nb3V0GAkgASgIEicKCm90cl9zdGF0",
            "dXMYCiABKA4yEy5PZmZUaGVSZWNvcmRTdGF0dXMSJwoKb3RyX3RvZ2dsZRgL",
            "IAEoDjITLk9mZlRoZVJlY29yZFRvZ2dsZRImCh5jb252ZXJzYXRpb25faGlz",
            "dG9yeV9zdXBwb3J0ZWQYDCABKAgSKwoTY3VycmVudF9wYXJ0aWNpcGFudBgN",
            "IAMoCzIOLlBhcnRpY2lwYW50SWQSNgoQcGFydGljaXBhbnRfZGF0YRgOIAMo",
            "CzIcLkNvbnZlcnNhdGlvblBhcnRpY2lwYW50RGF0YRIiCgxuZXR3b3JrX3R5",
            "cGUYEiADKA4yDC5OZXR3b3JrVHlwZRIqChNmb3JjZV9oaXN0b3J5X3N0YXRl",
            "GBMgASgOMg0uRm9yY2VIaXN0b3J5IhwKCUVhc3RlckVnZxIPCgdtZXNzYWdl",
            "GAEgASgJImAKEEJsb2NrU3RhdGVDaGFuZ2USJgoOcGFydGljaXBhbnRfaWQY",
            "ASABKAsyDi5QYXJ0aWNpcGFudElkEiQKD25ld19ibG9ja19zdGF0ZRgCIAEo",
            "DjILLkJsb2NrU3RhdGUibAoFUGhvdG8SEAoIcGhvdG9faWQYASABKAkSJQod",
            "ZGVsZXRlX2FsYnVtbGVzc19zb3VyY2VfcGhvdG8YAiABKAgSDwoHdXNlcl9p",
            "ZBgDIAEoCRIZChFpc19jdXN0b21fdXNlcl9pZBgEIAEoCCImCg1FeGlzdGlu",
            "Z01lZGlhEhUKBXBob3RvGAEgASgLMgYuUGhvdG8i0AEKEkV2ZW50UmVxdWVz",
            "dEhlYWRlchIoCg9jb252ZXJzYXRpb25faWQYASABKAsyDy5Db252ZXJzYXRp",
            "b25JZBIbChNjbGllbnRfZ2VuZXJhdGVkX2lkGAIgASgEEikKDGV4cGVjdGVk",
            "X290chgDIAEoDjITLk9mZlRoZVJlY29yZFN0YXR1cxIoCg9kZWxpdmVyeV9t",
            "ZWRpdW0YBCABKAsyDy5EZWxpdmVyeU1lZGl1bRIeCgpldmVudF90eXBlGAUg",
            "ASgOMgouRXZlbnRUeXBlIrkBCg1DbGllbnRWZXJzaW9uEhwKCWNsaWVudF9p",
            "ZBgBIAEoDjIJLkNsaWVudElkEiQKCmJ1aWxkX3R5cGUYAiABKA4yEC5DbGll",
            "bnRCdWlsZFR5cGUSFQoNbWFqb3JfdmVyc2lvbhgDIAEoCRIZChF2ZXJzaW9u",
            "X3RpbWVzdGFtcBgEIAEoBBIZChFkZXZpY2Vfb3NfdmVyc2lvbhgFIAEoCRIX",
            "Cg9kZXZpY2VfaGFyZHdhcmUYBiABKAkifAoNUmVxdWVzdEhlYWRlchImCg5j",
            "bGllbnRfdmVyc2lvbhgBIAEoCzIOLkNsaWVudFZlcnNpb24SLAoRY2xpZW50",
            "X2lkZW50aWZpZXIYAiABKAsyES5DbGllbnRJZGVudGlmaWVyEhUKDWxhbmd1",
            "YWdlX2NvZGUYBCABKAkilgEKDlJlc3BvbnNlSGVhZGVyEh8KBnN0YXR1cxgB",
            "IAEoDjIPLlJlc3BvbnNlU3RhdHVzEhkKEWVycm9yX2Rlc2NyaXB0aW9uGAIg",
            "ASgJEhEKCWRlYnVnX3VybBgDIAEoCRIYChByZXF1ZXN0X3RyYWNlX2lkGAQg",
            "ASgJEhsKE2N1cnJlbnRfc2VydmVyX3RpbWUYBSABKAQizwIKBkVudGl0eRIa",
            "CgJpZBgJIAEoCzIOLlBhcnRpY2lwYW50SWQSGwoIcHJlc2VuY2UYCCABKAsy",
            "CS5QcmVzZW5jZRIlCgpwcm9wZXJ0aWVzGAogASgLMhEuRW50aXR5UHJvcGVy",
            "dGllcxIlCgtlbnRpdHlfdHlwZRgNIAEoDjIQLlBhcnRpY2lwYW50VHlwZRI4",
            "ChZoYWRfcGFzdF9oYW5nb3V0X3N0YXRlGBAgASgOMhguRW50aXR5LlBhc3RI",
            "YW5nb3V0U3RhdGUigwEKEFBhc3RIYW5nb3V0U3RhdGUSHgoaUEFTVF9IQU5H",
            "T1VUX1NUQVRFX1VOS05PV04QABInCiNQQVNUX0hBTkdPVVRfU1RBVEVfSEFE",
            "X1BBU1RfSEFOR09VVBABEiYKIlBBU1RfSEFOR09VVF9TVEFURV9OT19QQVNU",
            "X0hBTkdPVVQQAiL/AQoQRW50aXR5UHJvcGVydGllcxIaCgR0eXBlGAEgASgO",
            "MgwuUHJvZmlsZVR5cGUSFAoMZGlzcGxheV9uYW1lGAIgASgJEhIKCmZpcnN0",
            "X25hbWUYAyABKAkSEQoJcGhvdG9fdXJsGAQgASgJEg0KBWVtYWlsGAUgAygJ",
            "Eg0KBXBob25lGAYgAygJEhcKD2luX3VzZXJzX2RvbWFpbhgKIAEoCBIXCgZn",
            "ZW5kZXIYCyABKA4yBy5HZW5kZXISKQoQcGhvdG9fdXJsX3N0YXR1cxgMIAEo",
            "DjIPLlBob3RvVXJsU3RhdHVzEhcKD2Nhbm9uaWNhbF9lbWFpbBgPIAEoCSK0",
            "AQoRQ29udmVyc2F0aW9uU3RhdGUSKAoPY29udmVyc2F0aW9uX2lkGAEgASgL",
            "Mg8uQ29udmVyc2F0aW9uSWQSIwoMY29udmVyc2F0aW9uGAIgASgLMg0uQ29u",
            "dmVyc2F0aW9uEhUKBWV2ZW50GAMgAygLMgYuRXZlbnQSOQoYZXZlbnRfY29u",
            "dGludWF0aW9uX3Rva2VuGAUgASgLMhcuRXZlbnRDb250aW51YXRpb25Ub2tl",
            "biJnChZFdmVudENvbnRpbnVhdGlvblRva2VuEhAKCGV2ZW50X2lkGAEgASgJ",
            "EiIKGnN0b3JhZ2VfY29udGludWF0aW9uX3Rva2VuGAIgASgMEhcKD2V2ZW50",
            "X3RpbWVzdGFtcBgDIAEoBCIjChBFbnRpdHlMb29rdXBTcGVjEg8KB2dhaWFf",
            "aWQYASABKAkiWAoQQ29uZmlndXJhdGlvbkJpdBI1ChZjb25maWd1cmF0aW9u",
            "X2JpdF90eXBlGAEgASgOMhUuQ29uZmlndXJhdGlvbkJpdFR5cGUSDQoFdmFs",
            "dWUYAiABKAgiVwoRUmljaFByZXNlbmNlU3RhdGUSQgofZ2V0X3JpY2hfcHJl",
            "c2VuY2VfZW5hYmxlZF9zdGF0ZRgDIAMoCzIZLlJpY2hQcmVzZW5jZUVuYWJs",
            "ZWRTdGF0ZSJMChhSaWNoUHJlc2VuY2VFbmFibGVkU3RhdGUSHwoEdHlwZRgB",
            "IAEoDjIRLlJpY2hQcmVzZW5jZVR5cGUSDwoHZW5hYmxlZBgCIAEoCCIoChFE",
            "ZXNrdG9wT2ZmU2V0dGluZxITCgtkZXNrdG9wX29mZhgBIAEoCCI3Cg9EZXNr",
            "dG9wT2ZmU3RhdGUSEwoLZGVza3RvcF9vZmYYASABKAgSDwoHdmVyc2lvbhgC",
            "IAEoBCI6CgpEbmRTZXR0aW5nEhYKDmRvX25vdF9kaXN0dXJiGAEgASgIEhQK",
            "DHRpbWVvdXRfc2VjcxgCIAEoBCJUChRQcmVzZW5jZVN0YXRlU2V0dGluZxIU",
            "Cgx0aW1lb3V0X3NlY3MYASABKAQSJgoEdHlwZRgCIAEoDjIYLkNsaWVudFBy",
            "ZXNlbmNlU3RhdGVUeXBlIjEKC01vb2RNZXNzYWdlEiIKDG1vb2RfY29udGVu",
            "dBgBIAEoCzIMLk1vb2RDb250ZW50IigKC01vb2RDb250ZW50EhkKB3NlZ21l",
            "bnQYASADKAsyCC5TZWdtZW50IjEKC01vb2RTZXR0aW5nEiIKDG1vb2RfbWVz",
            "c2FnZRgBIAEoCzIMLk1vb2RNZXNzYWdlIi8KCU1vb2RTdGF0ZRIiCgxtb29k",
            "X3NldHRpbmcYBCABKAsyDC5Nb29kU2V0dGluZyJ3CgxEZWxldGVBY3Rpb24S",
            "HwoXZGVsZXRlX2FjdGlvbl90aW1lc3RhbXAYASABKAQSJAocZGVsZXRlX3Vw",
            "cGVyX2JvdW5kX3RpbWVzdGFtcBgCIAEoBBIgCgtkZWxldGVfdHlwZRgDIAEo",
            "DjILLkRlbGV0ZVR5cGUiMwoJSW52aXRlZUlEEg8KB2dhaWFfaWQYASABKAkS",
            "FQoNZmFsbGJhY2tfbmFtZRgEIAEoCSI0CgdDb3VudHJ5EhMKC3JlZ2lvbl9j",
            "b2RlGAEgASgJEhQKDGNvdW50cnlfY29kZRgCIAEoBCJuChNEZXNrdG9wU291",
            "bmRTZXR0aW5nEigKE2Rlc2t0b3Bfc291bmRfc3RhdGUYASABKA4yCy5Tb3Vu",
            "ZFN0YXRlEi0KGGRlc2t0b3BfcmluZ19zb3VuZF9zdGF0ZRgCIAEoDjILLlNv",
            "dW5kU3RhdGUiWgoJUGhvbmVEYXRhEhUKBXBob25lGAEgAygLMgYuUGhvbmUS",
            "NgoXY2FsbGVyX2lkX3NldHRpbmdzX21hc2sYAyABKA4yFS5DYWxsZXJJZFNl",
            "dHRpbmdzTWFzayLcAQoFUGhvbmUSIgoMcGhvbmVfbnVtYmVyGAEgASgLMgwu",
            "UGhvbmVOdW1iZXISFAoMZ29vZ2xlX3ZvaWNlGAIgASgIEjUKE3ZlcmlmaWNh",
            "dGlvbl9zdGF0dXMYAyABKA4yGC5QaG9uZVZlcmlmaWNhdGlvblN0YXR1cxIU",
            "CgxkaXNjb3ZlcmFibGUYBCABKAgSOwoWZGlzY292ZXJhYmlsaXR5X3N0YXR1",
            "cxgFIAEoDjIbLlBob25lRGlzY292ZXJhYmlsaXR5U3RhdHVzEg8KB3ByaW1h",
            "cnkYBiABKAgisQEKCEkxOG5EYXRhEhcKD25hdGlvbmFsX251bWJlchgBIAEo",
            "CRIcChRpbnRlcm5hdGlvbmFsX251bWJlchgCIAEoCRIUCgxjb3VudHJ5X2Nv",
            "ZGUYAyABKAQSEwoLcmVnaW9uX2NvZGUYBCABKAkSEAoIaXNfdmFsaWQYBSAB",
            "KAgSMQoRdmFsaWRhdGlvbl9yZXN1bHQYBiABKA4yFi5QaG9uZVZhbGlkYXRp",
            "b25SZXN1bHQiOQoLUGhvbmVOdW1iZXISDAoEZTE2NBgBIAEoCRIcCglpMThu",
            "X2RhdGEYAiABKAsyCS5JMThuRGF0YSI+ChlTdWdnZXN0ZWRDb250YWN0R3Jv",
            "dXBIYXNoEhMKC21heF9yZXN1bHRzGAEgASgEEgwKBGhhc2gYAiABKAwiWQoQ",
            "U3VnZ2VzdGVkQ29udGFjdBIXCgZlbnRpdHkYASABKAsyBy5FbnRpdHkSLAoR",
            "aW52aXRhdGlvbl9zdGF0dXMYAiABKA4yES5JbnZpdGF0aW9uU3RhdHVzIl8K",
            "FVN1Z2dlc3RlZENvbnRhY3RHcm91cBIUCgxoYXNoX21hdGNoZWQYASABKAgS",
            "DAoEaGFzaBgCIAEoDBIiCgdjb250YWN0GAMgAygLMhEuU3VnZ2VzdGVkQ29u",
            "dGFjdCKyCAoLU3RhdGVVcGRhdGUSLwoTc3RhdGVfdXBkYXRlX2hlYWRlchgB",
            "IAEoCzISLlN0YXRlVXBkYXRlSGVhZGVyEiMKDGNvbnZlcnNhdGlvbhgNIAEo",
            "CzINLkNvbnZlcnNhdGlvbhI+Chljb252ZXJzYXRpb25fbm90aWZpY2F0aW9u",
            "GAIgASgLMhkuQ29udmVyc2F0aW9uTm90aWZpY2F0aW9uSAASMAoSZXZlbnRf",
            "bm90aWZpY2F0aW9uGAMgASgLMhIuRXZlbnROb3RpZmljYXRpb25IABIzChJm",
            "b2N1c19ub3RpZmljYXRpb24YBCABKAsyFS5TZXRGb2N1c05vdGlmaWNhdGlv",
            "bkgAEjUKE3R5cGluZ19ub3RpZmljYXRpb24YBSABKAsyFi5TZXRUeXBpbmdO",
            "b3RpZmljYXRpb25IABJYCh9ub3RpZmljYXRpb25fbGV2ZWxfbm90aWZpY2F0",
            "aW9uGAYgASgLMi0uU2V0Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uTGV2ZWxO",
            "b3RpZmljYXRpb25IABJCChxyZXBseV90b19pbnZpdGVfbm90aWZpY2F0aW9u",
            "GAcgASgLMhouUmVwbHlUb0ludml0ZU5vdGlmaWNhdGlvbkgAEjgKFndhdGVy",
            "bWFya19ub3RpZmljYXRpb24YCCABKAsyFi5XYXRlcm1hcmtOb3RpZmljYXRp",
            "b25IABI6ChF2aWV3X21vZGlmaWNhdGlvbhgLIAEoCzIdLkNvbnZlcnNhdGlv",
            "blZpZXdNb2RpZmljYXRpb25IABI5ChdlYXN0ZXJfZWdnX25vdGlmaWNhdGlv",
            "bhgMIAEoCzIWLkVhc3RlckVnZ05vdGlmaWNhdGlvbkgAEj8KGnNlbGZfcHJl",
            "c2VuY2Vfbm90aWZpY2F0aW9uGA4gASgLMhkuU2VsZlByZXNlbmNlTm90aWZp",
            "Y2F0aW9uSAASOAoTZGVsZXRlX25vdGlmaWNhdGlvbhgPIAEoCzIZLkRlbGV0",
            "ZUFjdGlvbk5vdGlmaWNhdGlvbkgAEjYKFXByZXNlbmNlX25vdGlmaWNhdGlv",
            "bhgQIAEoCzIVLlByZXNlbmNlTm90aWZpY2F0aW9uSAASMAoSYmxvY2tfbm90",
            "aWZpY2F0aW9uGBEgASgLMhIuQmxvY2tOb3RpZmljYXRpb25IABJQCiFub3Rp",
            "ZmljYXRpb25fc2V0dGluZ19ub3RpZmljYXRpb24YEyABKAsyIy5TZXROb3Rp",
            "ZmljYXRpb25TZXR0aW5nTm90aWZpY2F0aW9uSAASWQoocmljaF9wcmVzZW5j",
            "ZV9lbmFibGVkX3N0YXRlX25vdGlmaWNhdGlvbhgUIAEoCzIlLlJpY2hQcmVz",
            "ZW5jZUVuYWJsZWRTdGF0ZU5vdGlmaWNhdGlvbkgAQg4KDHN0YXRlX3VwZGF0",
            "ZSKxAQoRU3RhdGVVcGRhdGVIZWFkZXISLwoTYWN0aXZlX2NsaWVudF9zdGF0",
            "ZRgBIAEoDjISLkFjdGl2ZUNsaWVudFN0YXRlEhgKEHJlcXVlc3RfdHJhY2Vf",
            "aWQYAyABKAkSNAoVbm90aWZpY2F0aW9uX3NldHRpbmdzGAQgASgLMhUuTm90",
            "aWZpY2F0aW9uU2V0dGluZ3MSGwoTY3VycmVudF9zZXJ2ZXJfdGltZRgFIAEo",
            "BCIxCgtCYXRjaFVwZGF0ZRIiCgxzdGF0ZV91cGRhdGUYASADKAsyDC5TdGF0",
            "ZVVwZGF0ZSI/ChhDb252ZXJzYXRpb25Ob3RpZmljYXRpb24SIwoMY29udmVy",
            "c2F0aW9uGAEgASgLMg0uQ29udmVyc2F0aW9uIioKEUV2ZW50Tm90aWZpY2F0",
            "aW9uEhUKBWV2ZW50GAEgASgLMgYuRXZlbnQirgEKFFNldEZvY3VzTm90aWZp",
            "Y2F0aW9uEigKD2NvbnZlcnNhdGlvbl9pZBgBIAEoCzIPLkNvbnZlcnNhdGlv",
            "bklkEiEKCXNlbmRlcl9pZBgCIAEoCzIOLlBhcnRpY2lwYW50SWQSEQoJdGlt",
            "ZXN0YW1wGAMgASgEEhgKBHR5cGUYBCABKA4yCi5Gb2N1c1R5cGUSHAoGZGV2",
            "aWNlGAUgASgOMgwuRm9jdXNEZXZpY2UikgEKFVNldFR5cGluZ05vdGlmaWNh",
            "dGlvbhIoCg9jb252ZXJzYXRpb25faWQYASABKAsyDy5Db252ZXJzYXRpb25J",
            "ZBIhCglzZW5kZXJfaWQYAiABKAsyDi5QYXJ0aWNpcGFudElkEhEKCXRpbWVz",
            "dGFtcBgDIAEoBBIZCgR0eXBlGAQgASgOMgsuVHlwaW5nVHlwZSKOAQosU2V0",
            "Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uTGV2ZWxOb3RpZmljYXRpb24SKAoP",
            "Y29udmVyc2F0aW9uX2lkGAEgASgLMg8uQ29udmVyc2F0aW9uSWQSIQoFbGV2",
            "ZWwYAiABKA4yEi5Ob3RpZmljYXRpb25MZXZlbBIRCgl0aW1lc3RhbXAYBCAB",
            "KAQiZwoZUmVwbHlUb0ludml0ZU5vdGlmaWNhdGlvbhIoCg9jb252ZXJzYXRp",
            "b25faWQYASABKAsyDy5Db252ZXJzYXRpb25JZBIgCgR0eXBlGAIgASgOMhIu",
            "UmVwbHlUb0ludml0ZVR5cGUigwEKFVdhdGVybWFya05vdGlmaWNhdGlvbhIh",
            "CglzZW5kZXJfaWQYASABKAsyDi5QYXJ0aWNpcGFudElkEigKD2NvbnZlcnNh",
            "dGlvbl9pZBgCIAEoCzIPLkNvbnZlcnNhdGlvbklkEh0KFWxhdGVzdF9yZWFk",
            "X3RpbWVzdGFtcBgDIAEoBCKSAQocQ29udmVyc2F0aW9uVmlld01vZGlmaWNh",
            "dGlvbhIoCg9jb252ZXJzYXRpb25faWQYASABKAsyDy5Db252ZXJzYXRpb25J",
            "ZBIjCghvbGRfdmlldxgCIAEoDjIRLkNvbnZlcnNhdGlvblZpZXcSIwoIbmV3",
            "X3ZpZXcYAyABKA4yES5Db252ZXJzYXRpb25WaWV3IoQBChVFYXN0ZXJFZ2dO",
            "b3RpZmljYXRpb24SIQoJc2VuZGVyX2lkGAEgASgLMg4uUGFydGljaXBhbnRJ",
            "ZBIoCg9jb252ZXJzYXRpb25faWQYAiABKAsyDy5Db252ZXJzYXRpb25JZBIe",
            "CgplYXN0ZXJfZWdnGAMgASgLMgouRWFzdGVyRWdnIoMCChhTZWxmUHJlc2Vu",
            "Y2VOb3RpZmljYXRpb24SMwoVY2xpZW50X3ByZXNlbmNlX3N0YXRlGAEgASgL",
            "MhQuQ2xpZW50UHJlc2VuY2VTdGF0ZRI0ChZkb19ub3RfZGlzdHVyYl9zZXR0",
            "aW5nGAMgASgLMhQuRG9Ob3REaXN0dXJiU2V0dGluZxIvChNkZXNrdG9wX29m",
            "Zl9zZXR0aW5nGAQgASgLMhIuRGVza3RvcE9mZlNldHRpbmcSKwoRZGVza3Rv",
            "cF9vZmZfc3RhdGUYBSABKAsyEC5EZXNrdG9wT2ZmU3RhdGUSHgoKbW9vZF9z",
            "dGF0ZRgGIAEoCzIKLk1vb2RTdGF0ZSJqChhEZWxldGVBY3Rpb25Ob3RpZmlj",
            "YXRpb24SKAoPY29udmVyc2F0aW9uX2lkGAEgASgLMg8uQ29udmVyc2F0aW9u",
            "SWQSJAoNZGVsZXRlX2FjdGlvbhgCIAEoCzINLkRlbGV0ZUFjdGlvbiI5ChRQ",
            "cmVzZW5jZU5vdGlmaWNhdGlvbhIhCghwcmVzZW5jZRgBIAMoCzIPLlByZXNl",
            "bmNlUmVzdWx0IkIKEUJsb2NrTm90aWZpY2F0aW9uEi0KEmJsb2NrX3N0YXRl",
            "X2NoYW5nZRgBIAMoCzIRLkJsb2NrU3RhdGVDaGFuZ2UiWQoiU2V0Tm90aWZp",
            "Y2F0aW9uU2V0dGluZ05vdGlmaWNhdGlvbhIzChVkZXNrdG9wX3NvdW5kX3Nl",
            "dHRpbmcYAiABKAsyFC5EZXNrdG9wU291bmRTZXR0aW5nImYKJFJpY2hQcmVz",
            "ZW5jZUVuYWJsZWRTdGF0ZU5vdGlmaWNhdGlvbhI+ChtyaWNoX3ByZXNlbmNl",
            "X2VuYWJsZWRfc3RhdGUYASADKAsyGS5SaWNoUHJlc2VuY2VFbmFibGVkU3Rh",
            "dGUiPAoQQ29udmVyc2F0aW9uU3BlYxIoCg9jb252ZXJzYXRpb25faWQYASAB",
            "KAsyDy5Db252ZXJzYXRpb25JZCJIChFPZmZuZXR3b3JrQWRkcmVzcxIkCgR0",
            "eXBlGAEgASgOMhYuT2ZmbmV0d29ya0FkZHJlc3NUeXBlEg0KBWVtYWlsGAMg",
            "ASgJIosBCg5BZGRVc2VyUmVxdWVzdBImCg5yZXF1ZXN0X2hlYWRlchgBIAEo",
            "CzIOLlJlcXVlc3RIZWFkZXISHgoKaW52aXRlZV9pZBgDIAMoCzIKLkludml0",
            "ZWVJRBIxChRldmVudF9yZXF1ZXN0X2hlYWRlchgFIAEoCzITLkV2ZW50UmVx",
            "dWVzdEhlYWRlciJaCg9BZGRVc2VyUmVzcG9uc2USKAoPcmVzcG9uc2VfaGVh",
            "ZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISHQoNY3JlYXRlZF9ldmVudBgF",
            "IAEoCzIGLkV2ZW50Iq8BChlDcmVhdGVDb252ZXJzYXRpb25SZXF1ZXN0EiYK",
            "DnJlcXVlc3RfaGVhZGVyGAEgASgLMg4uUmVxdWVzdEhlYWRlchIfCgR0eXBl",
            "GAIgASgOMhEuQ29udmVyc2F0aW9uVHlwZRIbChNjbGllbnRfZ2VuZXJhdGVk",
            "X2lkGAMgASgEEgwKBG5hbWUYBCABKAkSHgoKaW52aXRlZV9pZBgFIAMoCzIK",
            "Lkludml0ZWVJRCKNAQoaQ3JlYXRlQ29udmVyc2F0aW9uUmVzcG9uc2USKAoP",
            "cmVzcG9uc2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISIwoMY29u",
            "dmVyc2F0aW9uGAIgASgLMg0uQ29udmVyc2F0aW9uEiAKGG5ld19jb252ZXJz",
            "YXRpb25fY3JlYXRlZBgHIAEoCCKTAQoZRGVsZXRlQ29udmVyc2F0aW9uUmVx",
            "dWVzdBImCg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXIS",
            "KAoPY29udmVyc2F0aW9uX2lkGAIgASgLMg8uQ29udmVyc2F0aW9uSWQSJAoc",
            "ZGVsZXRlX3VwcGVyX2JvdW5kX3RpbWVzdGFtcBgDIAEoBCJsChpEZWxldGVD",
            "b252ZXJzYXRpb25SZXNwb25zZRIoCg9yZXNwb25zZV9oZWFkZXIYASABKAsy",
            "Dy5SZXNwb25zZUhlYWRlchIkCg1kZWxldGVfYWN0aW9uGAIgASgLMg0uRGVs",
            "ZXRlQWN0aW9uIoQBChBFYXN0ZXJFZ2dSZXF1ZXN0EiYKDnJlcXVlc3RfaGVh",
            "ZGVyGAEgASgLMg4uUmVxdWVzdEhlYWRlchIoCg9jb252ZXJzYXRpb25faWQY",
            "AiABKAsyDy5Db252ZXJzYXRpb25JZBIeCgplYXN0ZXJfZWdnGAMgASgLMgou",
            "RWFzdGVyRWdnIlAKEUVhc3RlckVnZ1Jlc3BvbnNlEigKD3Jlc3BvbnNlX2hl",
            "YWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVyEhEKCXRpbWVzdGFtcBgCIAEo",
            "BCLlAQoWR2V0Q29udmVyc2F0aW9uUmVxdWVzdBImCg5yZXF1ZXN0X2hlYWRl",
            "chgBIAEoCzIOLlJlcXVlc3RIZWFkZXISLAoRY29udmVyc2F0aW9uX3NwZWMY",
            "AiABKAsyES5Db252ZXJzYXRpb25TcGVjEhUKDWluY2x1ZGVfZXZlbnQYBCAB",
            "KAgSIwobbWF4X2V2ZW50c19wZXJfY29udmVyc2F0aW9uGAYgASgEEjkKGGV2",
            "ZW50X2NvbnRpbnVhdGlvbl90b2tlbhgHIAEoCzIXLkV2ZW50Q29udGludWF0",
            "aW9uVG9rZW4icwoXR2V0Q29udmVyc2F0aW9uUmVzcG9uc2USKAoPcmVzcG9u",
            "c2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISLgoSY29udmVyc2F0",
            "aW9uX3N0YXRlGAIgASgLMhIuQ29udmVyc2F0aW9uU3RhdGUibAoUR2V0RW50",
            "aXR5QnlJZFJlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1",
            "ZXN0SGVhZGVyEiwKEWJhdGNoX2xvb2t1cF9zcGVjGAMgAygLMhEuRW50aXR5",
            "TG9va3VwU3BlYyJaChVHZXRFbnRpdHlCeUlkUmVzcG9uc2USKAoPcmVzcG9u",
            "c2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISFwoGZW50aXR5GAIg",
            "AygLMgcuRW50aXR5IpUDChtHZXRTdWdnZXN0ZWRFbnRpdGllc1JlcXVlc3QS",
            "JgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyEi0KCWZh",
            "dm9yaXRlcxgIIAEoCzIaLlN1Z2dlc3RlZENvbnRhY3RHcm91cEhhc2gSPQoZ",
            "Y29udGFjdHNfeW91X2hhbmdvdXRfd2l0aBgJIAEoCzIaLlN1Z2dlc3RlZENv",
            "bnRhY3RHcm91cEhhc2gSPgoab3RoZXJfY29udGFjdHNfb25faGFuZ291dHMY",
            "CiABKAsyGi5TdWdnZXN0ZWRDb250YWN0R3JvdXBIYXNoEjIKDm90aGVyX2Nv",
            "bnRhY3RzGAsgASgLMhouU3VnZ2VzdGVkQ29udGFjdEdyb3VwSGFzaBI2ChJk",
            "aXNtaXNzZWRfY29udGFjdHMYDCABKAsyGi5TdWdnZXN0ZWRDb250YWN0R3Jv",
            "dXBIYXNoEjQKEHBpbm5lZF9mYXZvcml0ZXMYDSABKAsyGi5TdWdnZXN0ZWRD",
            "b250YWN0R3JvdXBIYXNoIpkDChxHZXRTdWdnZXN0ZWRFbnRpdGllc1Jlc3Bv",
            "bnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVy",
            "EhcKBmVudGl0eRgCIAMoCzIHLkVudGl0eRIpCglmYXZvcml0ZXMYBCABKAsy",
            "Fi5TdWdnZXN0ZWRDb250YWN0R3JvdXASOQoZY29udGFjdHNfeW91X2hhbmdv",
            "dXRfd2l0aBgFIAEoCzIWLlN1Z2dlc3RlZENvbnRhY3RHcm91cBI6ChpvdGhl",
            "cl9jb250YWN0c19vbl9oYW5nb3V0cxgGIAEoCzIWLlN1Z2dlc3RlZENvbnRh",
            "Y3RHcm91cBIuCg5vdGhlcl9jb250YWN0cxgHIAEoCzIWLlN1Z2dlc3RlZENv",
            "bnRhY3RHcm91cBIyChJkaXNtaXNzZWRfY29udGFjdHMYCCABKAsyFi5TdWdn",
            "ZXN0ZWRDb250YWN0R3JvdXASMAoQcGlubmVkX2Zhdm9yaXRlcxgJIAEoCzIW",
            "LlN1Z2dlc3RlZENvbnRhY3RHcm91cCI8ChJHZXRTZWxmSW5mb1JlcXVlc3QS",
            "JgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyIu0DChNH",
            "ZXRTZWxmSW5mb1Jlc3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIP",
            "LlJlc3BvbnNlSGVhZGVyEhwKC3NlbGZfZW50aXR5GAIgASgLMgcuRW50aXR5",
            "EhYKDmlzX2tub3duX21pbm9yGAMgASgIEicKCWRuZF9zdGF0ZRgFIAEoCzIU",
            "LkRvTm90RGlzdHVyYlNldHRpbmcSLwoTZGVza3RvcF9vZmZfc2V0dGluZxgG",
            "IAEoCzISLkRlc2t0b3BPZmZTZXR0aW5nEh4KCnBob25lX2RhdGEYByABKAsy",
            "Ci5QaG9uZURhdGESLAoRY29uZmlndXJhdGlvbl9iaXQYCCADKAsyES5Db25m",
            "aWd1cmF0aW9uQml0EisKEWRlc2t0b3Bfb2ZmX3N0YXRlGAkgASgLMhAuRGVz",
            "a3RvcE9mZlN0YXRlEhgKEGdvb2dsZV9wbHVzX3VzZXIYCiABKAgSMwoVZGVz",
            "a3RvcF9zb3VuZF9zZXR0aW5nGAsgASgLMhQuRGVza3RvcFNvdW5kU2V0dGlu",
            "ZxIvChNyaWNoX3ByZXNlbmNlX3N0YXRlGAwgASgLMhIuUmljaFByZXNlbmNl",
            "U3RhdGUSIQoPZGVmYXVsdF9jb3VudHJ5GBMgASgLMgguQ291bnRyeSKGAQoU",
            "UXVlcnlQcmVzZW5jZVJlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsy",
            "Di5SZXF1ZXN0SGVhZGVyEiYKDnBhcnRpY2lwYW50X2lkGAIgAygLMg4uUGFy",
            "dGljaXBhbnRJZBIeCgpmaWVsZF9tYXNrGAMgAygOMgouRmllbGRNYXNrImsK",
            "FVF1ZXJ5UHJlc2VuY2VSZXNwb25zZRIoCg9yZXNwb25zZV9oZWFkZXIYASAB",
            "KAsyDy5SZXNwb25zZUhlYWRlchIoCg9wcmVzZW5jZV9yZXN1bHQYAiADKAsy",
            "Dy5QcmVzZW5jZVJlc3VsdCJuChFSZW1vdmVVc2VyUmVxdWVzdBImCg5yZXF1",
            "ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXISMQoUZXZlbnRfcmVx",
            "dWVzdF9oZWFkZXIYBSABKAsyEy5FdmVudFJlcXVlc3RIZWFkZXIiXQoSUmVt",
            "b3ZlVXNlclJlc3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJl",
            "c3BvbnNlSGVhZGVyEh0KDWNyZWF0ZWRfZXZlbnQYBCABKAsyBi5FdmVudCKI",
            "AQoZUmVuYW1lQ29udmVyc2F0aW9uUmVxdWVzdBImCg5yZXF1ZXN0X2hlYWRl",
            "chgBIAEoCzIOLlJlcXVlc3RIZWFkZXISEAoIbmV3X25hbWUYAyABKAkSMQoU",
            "ZXZlbnRfcmVxdWVzdF9oZWFkZXIYBSABKAsyEy5FdmVudFJlcXVlc3RIZWFk",
            "ZXIiZQoaUmVuYW1lQ29udmVyc2F0aW9uUmVzcG9uc2USKAoPcmVzcG9uc2Vf",
            "aGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISHQoNY3JlYXRlZF9ldmVu",
            "dBgEIAEoCzIGLkV2ZW50ImEKFVNlYXJjaEVudGl0aWVzUmVxdWVzdBImCg5y",
            "ZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXISDQoFcXVlcnkY",
            "AyABKAkSEQoJbWF4X2NvdW50GAQgASgEIlsKFlNlYXJjaEVudGl0aWVzUmVz",
            "cG9uc2USKAoPcmVzcG9uc2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFk",
            "ZXISFwoGZW50aXR5GAIgAygLMgcuRW50aXR5IusBChZTZW5kQ2hhdE1lc3Nh",
            "Z2VSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgLMg4uUmVxdWVzdEhl",
            "YWRlchIkCgphbm5vdGF0aW9uGAUgAygLMhAuRXZlbnRBbm5vdGF0aW9uEigK",
            "D21lc3NhZ2VfY29udGVudBgGIAEoCzIPLk1lc3NhZ2VDb250ZW50EiYKDmV4",
            "aXN0aW5nX21lZGlhGAcgASgLMg4uRXhpc3RpbmdNZWRpYRIxChRldmVudF9y",
            "ZXF1ZXN0X2hlYWRlchgIIAEoCzITLkV2ZW50UmVxdWVzdEhlYWRlciJiChdT",
            "ZW5kQ2hhdE1lc3NhZ2VSZXNwb25zZRIoCg9yZXNwb25zZV9oZWFkZXIYASAB",
            "KAsyDy5SZXNwb25zZUhlYWRlchIdCg1jcmVhdGVkX2V2ZW50GAYgASgLMgYu",
            "RXZlbnQidgofU2VuZE9mZm5ldHdvcmtJbnZpdGF0aW9uUmVxdWVzdBImCg5y",
            "ZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXISKwoPaW52aXRl",
            "ZV9hZGRyZXNzGAIgASgLMhIuT2ZmbmV0d29ya0FkZHJlc3MiTAogU2VuZE9m",
            "Zm5ldHdvcmtJbnZpdGF0aW9uUmVzcG9uc2USKAoPcmVzcG9uc2VfaGVhZGVy",
            "GAEgASgLMg8uUmVzcG9uc2VIZWFkZXIiewoWU2V0QWN0aXZlQ2xpZW50UmVx",
            "dWVzdBImCg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXIS",
            "EQoJaXNfYWN0aXZlGAIgASgIEhAKCGZ1bGxfamlkGAMgASgJEhQKDHRpbWVv",
            "dXRfc2VjcxgEIAEoBCJDChdTZXRBY3RpdmVDbGllbnRSZXNwb25zZRIoCg9y",
            "ZXNwb25zZV9oZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRlciJFChtTZXRD",
            "b252ZXJzYXRpb25MZXZlbFJlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASAB",
            "KAsyDi5SZXF1ZXN0SGVhZGVyIkgKHFNldENvbnZlcnNhdGlvbkxldmVsUmVz",
            "cG9uc2USKAoPcmVzcG9uc2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFk",
            "ZXIingEKJ1NldENvbnZlcnNhdGlvbk5vdGlmaWNhdGlvbkxldmVsUmVxdWVz",
            "dBImCg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXISKAoP",
            "Y29udmVyc2F0aW9uX2lkGAIgASgLMg8uQ29udmVyc2F0aW9uSWQSIQoFbGV2",
            "ZWwYAyABKA4yEi5Ob3RpZmljYXRpb25MZXZlbCJnCihTZXRDb252ZXJzYXRp",
            "b25Ob3RpZmljYXRpb25MZXZlbFJlc3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRl",
            "chgBIAEoCzIPLlJlc3BvbnNlSGVhZGVyEhEKCXRpbWVzdGFtcBgCIAEoBCKT",
            "AQoPU2V0Rm9jdXNSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgLMg4u",
            "UmVxdWVzdEhlYWRlchIoCg9jb252ZXJzYXRpb25faWQYAiABKAsyDy5Db252",
            "ZXJzYXRpb25JZBIYCgR0eXBlGAMgASgOMgouRm9jdXNUeXBlEhQKDHRpbWVv",
            "dXRfc2VjcxgEIAEoDSJPChBTZXRGb2N1c1Jlc3BvbnNlEigKD3Jlc3BvbnNl",
            "X2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVyEhEKCXRpbWVzdGFtcBgC",
            "IAEoBCLqAQoSU2V0UHJlc2VuY2VSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVy",
            "GAEgASgLMg4uUmVxdWVzdEhlYWRlchI1ChZwcmVzZW5jZV9zdGF0ZV9zZXR0",
            "aW5nGAIgASgLMhUuUHJlc2VuY2VTdGF0ZVNldHRpbmcSIAoLZG5kX3NldHRp",
            "bmcYAyABKAsyCy5EbmRTZXR0aW5nEi8KE2Rlc2t0b3Bfb2ZmX3NldHRpbmcY",
            "BSABKAsyEi5EZXNrdG9wT2ZmU2V0dGluZxIiCgxtb29kX3NldHRpbmcYCCAB",
            "KAsyDC5Nb29kU2V0dGluZyI/ChNTZXRQcmVzZW5jZVJlc3BvbnNlEigKD3Jl",
            "c3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVyIn8KEFNldFR5",
            "cGluZ1JlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0",
            "SGVhZGVyEigKD2NvbnZlcnNhdGlvbl9pZBgCIAEoCzIPLkNvbnZlcnNhdGlv",
            "bklkEhkKBHR5cGUYAyABKA4yCy5UeXBpbmdUeXBlIlAKEVNldFR5cGluZ1Jl",
            "c3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVh",
            "ZGVyEhEKCXRpbWVzdGFtcBgCIAEoBCJ/ChdTeW5jQWxsTmV3RXZlbnRzUmVx",
            "dWVzdBImCg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXIS",
            "GwoTbGFzdF9zeW5jX3RpbWVzdGFtcBgCIAEoBBIfChdtYXhfcmVzcG9uc2Vf",
            "c2l6ZV9ieXRlcxgIIAEoBCKMAQoYU3luY0FsbE5ld0V2ZW50c1Jlc3BvbnNl",
            "EigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVyEhYK",
            "DnN5bmNfdGltZXN0YW1wGAIgASgEEi4KEmNvbnZlcnNhdGlvbl9zdGF0ZRgD",
            "IAMoCzISLkNvbnZlcnNhdGlvblN0YXRlIqoBCh5TeW5jUmVjZW50Q29udmVy",
            "c2F0aW9uc1JlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1",
            "ZXN0SGVhZGVyEhkKEW1heF9jb252ZXJzYXRpb25zGAMgASgEEiMKG21heF9l",
            "dmVudHNfcGVyX2NvbnZlcnNhdGlvbhgEIAEoBBIgCgtzeW5jX2ZpbHRlchgF",
            "IAMoDjILLlN5bmNGaWx0ZXIikwEKH1N5bmNSZWNlbnRDb252ZXJzYXRpb25z",
            "UmVzcG9uc2USKAoPcmVzcG9uc2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VI",
            "ZWFkZXISFgoOc3luY190aW1lc3RhbXAYAiABKAQSLgoSY29udmVyc2F0aW9u",
            "X3N0YXRlGAMgAygLMhIuQ29udmVyc2F0aW9uU3RhdGUihwEKFlVwZGF0ZVdh",
            "dGVybWFya1JlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1",
            "ZXN0SGVhZGVyEigKD2NvbnZlcnNhdGlvbl9pZBgCIAEoCzIPLkNvbnZlcnNh",
            "dGlvbklkEhsKE2xhc3RfcmVhZF90aW1lc3RhbXAYAyABKAQiQwoXVXBkYXRl",
            "V2F0ZXJtYXJrUmVzcG9uc2USKAoPcmVzcG9uc2VfaGVhZGVyGAEgASgLMg8u",
            "UmVzcG9uc2VIZWFkZXIqfwoRQWN0aXZlQ2xpZW50U3RhdGUSIQodQUNUSVZF",
            "X0NMSUVOVF9TVEFURV9OT19BQ1RJVkUQABIhCh1BQ1RJVkVfQ0xJRU5UX1NU",
            "QVRFX0lTX0FDVElWRRABEiQKIEFDVElWRV9DTElFTlRfU1RBVEVfT1RIRVJf",
            "QUNUSVZFEAIqVQoJRm9jdXNUeXBlEhYKEkZPQ1VTX1RZUEVfVU5LTk9XThAA",
            "EhYKEkZPQ1VTX1RZUEVfRk9DVVNFRBABEhgKFEZPQ1VTX1RZUEVfVU5GT0NV",
            "U0VEEAIqXwoLRm9jdXNEZXZpY2USHAoYRk9DVVNfREVWSUNFX1VOU1BFQ0lG",
            "SUVEEAASGAoURk9DVVNfREVWSUNFX0RFU0tUT1AQFBIYChNGT0NVU19ERVZJ",
            "Q0VfTU9CSUxFEKwCKm8KClR5cGluZ1R5cGUSFwoTVFlQSU5HX1RZUEVfVU5L",
            "Tk9XThAAEhcKE1RZUElOR19UWVBFX1NUQVJURUQQARIWChJUWVBJTkdfVFlQ",
            "RV9QQVVTRUQQAhIXChNUWVBJTkdfVFlQRV9TVE9QUEVEEAMqrgEKF0NsaWVu",
            "dFByZXNlbmNlU3RhdGVUeXBlEiEKHUNMSUVOVF9QUkVTRU5DRV9TVEFURV9V",
            "TktOT1dOEAASHgoaQ0xJRU5UX1BSRVNFTkNFX1NUQVRFX05PTkUQARImCiJD",
            "TElFTlRfUFJFU0VOQ0VfU1RBVEVfREVTS1RPUF9JRExFEB4SKAokQ0xJRU5U",
            "X1BSRVNFTkNFX1NUQVRFX0RFU0tUT1BfQUNUSVZFECgqbgoRTm90aWZpY2F0",
            "aW9uTGV2ZWwSHgoaTk9USUZJQ0FUSU9OX0xFVkVMX1VOS05PV04QABIcChhO",
            "T1RJRklDQVRJT05fTEVWRUxfUVVJRVQQChIbChdOT1RJRklDQVRJT05fTEVW",
            "RUxfUklORxAeKlgKC1NlZ21lbnRUeXBlEhUKEVNFR01FTlRfVFlQRV9URVhU",
            "EAASGwoXU0VHTUVOVF9UWVBFX0xJTkVfQlJFQUsQARIVChFTRUdNRU5UX1RZ",
            "UEVfTElOSxACKmkKCEl0ZW1UeXBlEhMKD0lURU1fVFlQRV9USElORxAAEhkK",
            "FElURU1fVFlQRV9QTFVTX1BIT1RPEPkBEhQKD0lURU1fVFlQRV9QTEFDRRDP",
            "AhIXChJJVEVNX1RZUEVfUExBQ0VfVjIQ1AIqfQoUTWVtYmVyc2hpcENoYW5n",
            "ZVR5cGUSIgoeTUVNQkVSU0hJUF9DSEFOR0VfVFlQRV9VTktOT1dOEAASHwob",
            "TUVNQkVSU0hJUF9DSEFOR0VfVFlQRV9KT0lOEAESIAocTUVNQkVSU0hJUF9D",
            "SEFOR0VfVFlQRV9MRUFWRRACKusBChBIYW5nb3V0RXZlbnRUeXBlEh4KGkhB",
            "TkdPVVRfRVZFTlRfVFlQRV9VTktOT1dOEAASHAoYSEFOR09VVF9FVkVOVF9U",
            "WVBFX1NUQVJUEAESGgoWSEFOR09VVF9FVkVOVF9UWVBFX0VORBACEhsKF0hB",
            "TkdPVVRfRVZFTlRfVFlQRV9KT0lOEAMSHAoYSEFOR09VVF9FVkVOVF9UWVBF",
            "X0xFQVZFEAQSIgoeSEFOR09VVF9FVkVOVF9UWVBFX0NPTUlOR19TT09OEAUS",
            "HgoaSEFOR09VVF9FVkVOVF9UWVBFX09OR09JTkcQBip+ChJPZmZUaGVSZWNv",
            "cmRUb2dnbGUSIQodT0ZGX1RIRV9SRUNPUkRfVE9HR0xFX1VOS05PV04QABIh",
            "Ch1PRkZfVEhFX1JFQ09SRF9UT0dHTEVfRU5BQkxFRBABEiIKHk9GRl9USEVf",
            "UkVDT1JEX1RPR0dMRV9ESVNBQkxFRBACKooBChJPZmZUaGVSZWNvcmRTdGF0",
            "dXMSIQodT0ZGX1RIRV9SRUNPUkRfU1RBVFVTX1VOS05PV04QABIoCiRPRkZf",
            "VEhFX1JFQ09SRF9TVEFUVVNfT0ZGX1RIRV9SRUNPUkQQARInCiNPRkZfVEhF",
            "X1JFQ09SRF9TVEFUVVNfT05fVEhFX1JFQ09SRBACKiUKClNvdXJjZVR5cGUS",
            "FwoTU09VUkNFX1RZUEVfVU5LTk9XThAAKvMCCglFdmVudFR5cGUSFgoSRVZF",
            "TlRfVFlQRV9VTktOT1dOEAASIwofRVZFTlRfVFlQRV9SRUdVTEFSX0NIQVRf",
            "TUVTU0FHRRABEhIKDkVWRU5UX1RZUEVfU01TEAISGAoURVZFTlRfVFlQRV9W",
            "T0lDRU1BSUwQAxIXChNFVkVOVF9UWVBFX0FERF9VU0VSEAQSGgoWRVZFTlRf",
            "VFlQRV9SRU1PVkVfVVNFUhAFEiIKHkVWRU5UX1RZUEVfQ09OVkVSU0FUSU9O",
            "X1JFTkFNRRAGEhYKEkVWRU5UX1RZUEVfSEFOR09VVBAHEhkKFUVWRU5UX1RZ",
            "UEVfUEhPTkVfQ0FMTBAIEh8KG0VWRU5UX1RZUEVfT1RSX01PRElGSUNBVElP",
            "ThAJEhwKGEVWRU5UX1RZUEVfUExBTl9NVVRBVElPThAKEhIKDkVWRU5UX1RZ",
            "UEVfTU1TEAsSHAoYRVZFTlRfVFlQRV9ERVBSRUNBVEVEXzEyEAwqcAoQQ29u",
            "dmVyc2F0aW9uVHlwZRIdChlDT05WRVJTQVRJT05fVFlQRV9VTktOT1dOEAAS",
            "IAocQ09OVkVSU0FUSU9OX1RZUEVfT05FX1RPX09ORRABEhsKF0NPTlZFUlNB",
            "VElPTl9UWVBFX0dST1VQEAIqlAEKEkNvbnZlcnNhdGlvblN0YXR1cxIfChtD",
            "T05WRVJTQVRJT05fU1RBVFVTX1VOS05PV04QABIfChtDT05WRVJTQVRJT05f",
            "U1RBVFVTX0lOVklURUQQARIeChpDT05WRVJTQVRJT05fU1RBVFVTX0FDVElW",
            "RRACEhwKGENPTlZFUlNBVElPTl9TVEFUVVNfTEVGVBADKm4KEENvbnZlcnNh",
            "dGlvblZpZXcSHQoZQ09OVkVSU0FUSU9OX1ZJRVdfVU5LTk9XThAAEhsKF0NP",
            "TlZFUlNBVElPTl9WSUVXX0lOQk9YEAESHgoaQ09OVkVSU0FUSU9OX1ZJRVdf",
            "QVJDSElWRUQQAiqNAQoSRGVsaXZlcnlNZWRpdW1UeXBlEhsKF0RFTElWRVJZ",
            "X01FRElVTV9VTktOT1dOEAASGQoVREVMSVZFUllfTUVESVVNX0JBQkVMEAES",
            "IAocREVMSVZFUllfTUVESVVNX0dPT0dMRV9WT0lDRRACEh0KGURFTElWRVJZ",
            "X01FRElVTV9MT0NBTF9TTVMQAypkChJJbnZpdGF0aW9uQWZmaW5pdHkSGwoX",
            "SU5WSVRFX0FGRklOSVRZX1VOS05PV04QABIYChRJTlZJVEVfQUZGSU5JVFlf",
            "SElHSBABEhcKE0lOVklURV9BRkZJTklUWV9MT1cQAiptCg9QYXJ0aWNpcGFu",
            "dFR5cGUSHAoYUEFSVElDSVBBTlRfVFlQRV9VTktOT1dOEAASGQoVUEFSVElD",
            "SVBBTlRfVFlQRV9HQUlBEAISIQodUEFSVElDSVBBTlRfVFlQRV9HT09HTEVf",
            "Vk9JQ0UQAypwChBJbnZpdGF0aW9uU3RhdHVzEh0KGUlOVklUQVRJT05fU1RB",
            "VFVTX1VOS05PV04QABIdChlJTlZJVEFUSU9OX1NUQVRVU19QRU5ESU5HEAES",
            "HgoaSU5WSVRBVElPTl9TVEFUVVNfQUNDRVBURUQQAio/CgxGb3JjZUhpc3Rv",
            "cnkSGQoVRk9SQ0VfSElTVE9SWV9VTktOT1dOEAASFAoQRk9SQ0VfSElTVE9S",
            "WV9OTxABKl4KC05ldHdvcmtUeXBlEhgKFE5FVFdPUktfVFlQRV9VTktOT1dO",
            "EAASFgoSTkVUV09SS19UWVBFX0JBQkVMEAESHQoZTkVUV09SS19UWVBFX0dP",
            "T0dMRV9WT0lDRRACKlUKCkJsb2NrU3RhdGUSFwoTQkxPQ0tfU1RBVEVfVU5L",
            "Tk9XThAAEhUKEUJMT0NLX1NUQVRFX0JMT0NLEAESFwoTQkxPQ0tfU1RBVEVf",
            "VU5CTE9DSxACKngKEVJlcGx5VG9JbnZpdGVUeXBlEiAKHFJFUExZX1RPX0lO",
            "VklURV9UWVBFX1VOS05PV04QABIfChtSRVBMWV9UT19JTlZJVEVfVFlQRV9B",
            "Q0NFUFQQARIgChxSRVBMWV9UT19JTlZJVEVfVFlQRV9ERUNMSU5FEAIqrgEK",
            "CENsaWVudElkEhUKEUNMSUVOVF9JRF9VTktOT1dOEAASFQoRQ0xJRU5UX0lE",
            "X0FORFJPSUQQARIRCg1DTElFTlRfSURfSU9TEAISFAoQQ0xJRU5UX0lEX0NI",
            "Uk9NRRADEhcKE0NMSUVOVF9JRF9XRUJfR1BMVVMQBRIXChNDTElFTlRfSURf",
            "V0VCX0dNQUlMEAYSGQoVQ0xJRU5UX0lEX1VMVFJBVklPTEVUEA0qZwoPQ2xp",
            "ZW50QnVpbGRUeXBlEhYKEkJVSUxEX1RZUEVfVU5LTk9XThAAEh0KGUJVSUxE",
            "X1RZUEVfUFJPRFVDVElPTl9XRUIQARIdChlCVUlMRF9UWVBFX1BST0RVQ1RJ",
            "T05fQVBQEAMqkAEKDlJlc3BvbnNlU3RhdHVzEhsKF1JFU1BPTlNFX1NUQVRV",
            "U19VTktOT1dOEAASFgoSUkVTUE9OU0VfU1RBVFVTX09LEAESJAogUkVTUE9O",
            "U0VfU1RBVFVTX1VORVhQRUNURURfRVJST1IQAxIjCh9SRVNQT05TRV9TVEFU",
            "VVNfSU5WQUxJRF9SRVFVRVNUEAQqcQoOUGhvdG9VcmxTdGF0dXMSHAoYUEhP",
            "VE9fVVJMX1NUQVRVU19VTktOT1dOEAASIAocUEhPVE9fVVJMX1NUQVRVU19Q",
            "TEFDRUhPTERFUhABEh8KG1BIT1RPX1VSTF9TVEFUVVNfVVNFUl9QSE9UTxAC",
            "KkAKBkdlbmRlchISCg5HRU5ERVJfVU5LTk9XThAAEg8KC0dFTkRFUl9NQUxF",
            "EAESEQoNR0VOREVSX0ZFTUFMRRACKj4KC1Byb2ZpbGVUeXBlEhUKEVBST0ZJ",
            "TEVfVFlQRV9OT05FEAASGAoUUFJPRklMRV9UWVBFX0VTX1VTRVIQASqtCwoU",
            "Q29uZmlndXJhdGlvbkJpdFR5cGUSIgoeQ09ORklHVVJBVElPTl9CSVRfVFlQ",
            "RV9VTktOT1dOEAASJAogQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dO",
            "XzEQARIkCiBDT05GSUdVUkFUSU9OX0JJVF9UWVBFX1VOS05PV05fMhACEiQK",
            "IENPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8zEAMSJAogQ09ORklH",
            "VVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzQQBBIkCiBDT05GSUdVUkFUSU9O",
            "X0JJVF9UWVBFX1VOS05PV05fNRAFEiQKIENPTkZJR1VSQVRJT05fQklUX1RZ",
            "UEVfVU5LTk9XTl82EAYSJAogQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktO",
            "T1dOXzcQBxIkCiBDT05GSUdVUkFUSU9OX0JJVF9UWVBFX1VOS05PV05fOBAI",
            "EiQKIENPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl85EAkSJQohQ09O",
            "RklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzEwEAoSJQohQ09ORklHVVJB",
            "VElPTl9CSVRfVFlQRV9VTktOT1dOXzExEAsSJQohQ09ORklHVVJBVElPTl9C",
            "SVRfVFlQRV9VTktOT1dOXzEyEAwSJQohQ09ORklHVVJBVElPTl9CSVRfVFlQ",
            "RV9VTktOT1dOXzEzEA0SJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktO",
            "T1dOXzE0EA4SJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzE1",
            "EA8SJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzE2EBASJQoh",
            "Q09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzE3EBESJQohQ09ORklH",
            "VVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzE4EBISJQohQ09ORklHVVJBVElP",
            "Tl9CSVRfVFlQRV9VTktOT1dOXzE5EBMSJQohQ09ORklHVVJBVElPTl9CSVRf",
            "VFlQRV9VTktOT1dOXzIwEBQSJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9V",
            "TktOT1dOXzIxEBUSJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dO",
            "XzIyEBYSJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzIzEBcS",
            "JQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzI0EBgSJQohQ09O",
            "RklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzI1EBkSJQohQ09ORklHVVJB",
            "VElPTl9CSVRfVFlQRV9VTktOT1dOXzI2EBoSJQohQ09ORklHVVJBVElPTl9C",
            "SVRfVFlQRV9VTktOT1dOXzI3EBsSJQohQ09ORklHVVJBVElPTl9CSVRfVFlQ",
            "RV9VTktOT1dOXzI4EBwSJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktO",
            "T1dOXzI5EB0SJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzMw",
            "EB4SJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzMxEB8SJQoh",
            "Q09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzMyECASJQohQ09ORklH",
            "VVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzMzECESJQohQ09ORklHVVJBVElP",
            "Tl9CSVRfVFlQRV9VTktOT1dOXzM0ECISJQohQ09ORklHVVJBVElPTl9CSVRf",
            "VFlQRV9VTktOT1dOXzM1ECMSJQohQ09ORklHVVJBVElPTl9CSVRfVFlQRV9V",
            "TktOT1dOXzM2ECQq/wEKEFJpY2hQcmVzZW5jZVR5cGUSHgoaUklDSF9QUkVT",
            "RU5DRV9UWVBFX1VOS05PV04QABIkCiBSSUNIX1BSRVNFTkNFX1RZUEVfSU5f",
            "Q0FMTF9TVEFURRABEiAKHFJJQ0hfUFJFU0VOQ0VfVFlQRV9VTktOT1dOXzMQ",
            "AxIgChxSSUNIX1BSRVNFTkNFX1RZUEVfVU5LTk9XTl80EAQSIAocUklDSF9Q",
            "UkVTRU5DRV9UWVBFX1VOS05PV05fNRAFEh0KGVJJQ0hfUFJFU0VOQ0VfVFlQ",
            "RV9ERVZJQ0UQAhIgChxSSUNIX1BSRVNFTkNFX1RZUEVfTEFTVF9TRUVOEAYq",
            "bgoJRmllbGRNYXNrEhYKEkZJRUxEX01BU0tfVU5LTk9XThAAEhgKFEZJRUxE",
            "X01BU0tfUkVBQ0hBQkxFEAESGAoURklFTERfTUFTS19BVkFJTEFCTEUQAhIV",
            "ChFGSUVMRF9NQVNLX0RFVklDRRAHKkIKCkRlbGV0ZVR5cGUSFwoTREVMRVRF",
            "X1RZUEVfVU5LTk9XThAAEhsKF0RFTEVURV9UWVBFX1VQUEVSX0JPVU5EEAEq",
            "VgoKU3luY0ZpbHRlchIXChNTWU5DX0ZJTFRFUl9VTktOT1dOEAASFQoRU1lO",
            "Q19GSUxURVJfSU5CT1gQARIYChRTWU5DX0ZJTFRFUl9BUkNISVZFRBACKk4K",
            "ClNvdW5kU3RhdGUSFwoTU09VTkRfU1RBVEVfVU5LTk9XThAAEhIKDlNPVU5E",
            "X1NUQVRFX09OEAESEwoPU09VTkRfU1RBVEVfT0ZGEAIqYQoUQ2FsbGVySWRT",
            "ZXR0aW5nc01hc2sSIwofQ0FMTEVSX0lEX1NFVFRJTkdTX01BU0tfVU5LTk9X",
            "ThAAEiQKIENBTExFUl9JRF9TRVRUSU5HU19NQVNLX1BST1ZJREVEEAEqaAoX",
            "UGhvbmVWZXJpZmljYXRpb25TdGF0dXMSJQohUEhPTkVfVkVSSUZJQ0FUSU9O",
            "X1NUQVRVU19VTktOT1dOEAASJgoiUEhPTkVfVkVSSUZJQ0FUSU9OX1NUQVRV",
            "U19WRVJJRklFRBABKoYBChpQaG9uZURpc2NvdmVyYWJpbGl0eVN0YXR1cxIo",
            "CiRQSE9ORV9ESVNDT1ZFUkFCSUxJVFlfU1RBVFVTX1VOS05PV04QABI+CjpQ",
            "SE9ORV9ESVNDT1ZFUkFCSUxJVFlfU1RBVFVTX09QVEVEX0lOX0JVVF9OT1Rf",
            "RElTQ09WRVJBQkxFEAIqQAoVUGhvbmVWYWxpZGF0aW9uUmVzdWx0EicKI1BI",
            "T05FX1ZBTElEQVRJT05fUkVTVUxUX0lTX1BPU1NJQkxFEAAqXwoVT2ZmbmV0",
            "d29ya0FkZHJlc3NUeXBlEiMKH09GRk5FVFdPUktfQUREUkVTU19UWVBFX1VO",
            "S05PV04QABIhCh1PRkZORVRXT1JLX0FERFJFU1NfVFlQRV9FTUFJTBABQjGq",
            "Ai5OZXRmb3guQmFja2VuZC5Tbm9vcGVycy5Tbm9vcGVySGFuZ291dHMuTW9k",
            "ZWxzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.FocusType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.TypingType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ItemType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SourceType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EventType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.NetworkType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.BlockState), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ClientId), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Gender), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.FieldMask), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SyncFilter), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SoundState), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult), typeof(global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting), global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting.Parser, new[]{ "DoNotDisturb", "ExpirationTimestamp", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.NotificationSettings), global::Netfox.Snoopers.SnooperHangouts.Models.NotificationSettings.Parser, new[]{ "DndSettings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId), global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId), global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId.Parser, new[]{ "GaiaId", "ChatId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeviceStatus), global::Netfox.Snoopers.SnooperHangouts.Models.DeviceStatus.Parser, new[]{ "Mobile", "Desktop", "Tablet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Presence), global::Netfox.Snoopers.SnooperHangouts.Models.Presence.Parser, new[]{ "Reachable", "Available", "DeviceStatus", "MoodSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult), global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult.Parser, new[]{ "UserId", "Presence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier), global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier.Parser, new[]{ "Resource", "HeaderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceState), global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceState.Parser, new[]{ "Identifier", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.UserEventState), global::Netfox.Snoopers.SnooperHangouts.Models.UserEventState.Parser, new[]{ "UserId", "ClientGeneratedId", "NotificationLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Formatting), global::Netfox.Snoopers.SnooperHangouts.Models.Formatting.Parser, new[]{ "Bold", "Italic", "Strikethrough", "Underline" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.LinkData), global::Netfox.Snoopers.SnooperHangouts.Models.LinkData.Parser, new[]{ "LinkTarget" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Segment), global::Netfox.Snoopers.SnooperHangouts.Models.Segment.Parser, new[]{ "Type", "Text", "Formatting", "LinkData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto), global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Parser, new[]{ "Thumbnail", "OwnerObfuscatedId", "AlbumId", "PhotoId", "Url", "OriginalContentUrl", "MediaType", "StreamId" }, null, new[]{ typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.Thumbnail), global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.Thumbnail.Parser, new[]{ "Url", "ImageUrl", "WidthPx", "HeightPx" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Place), global::Netfox.Snoopers.SnooperHangouts.Models.Place.Parser, new[]{ "Url", "Name", "RepresentativeImage" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Place.Types.RepresentativeImage), global::Netfox.Snoopers.SnooperHangouts.Models.Place.Types.RepresentativeImage.Parser, new[]{ "Url" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EmbedItem), global::Netfox.Snoopers.SnooperHangouts.Models.EmbedItem.Parser, new[]{ "Type", "Id", "PlusPhoto", "Place" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Attachment), global::Netfox.Snoopers.SnooperHangouts.Models.Attachment.Parser, new[]{ "EmbedItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent), global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent.Parser, new[]{ "Segment", "Attachment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation), global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation.Parser, new[]{ "Type", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ChatMessage), global::Netfox.Snoopers.SnooperHangouts.Models.ChatMessage.Parser, new[]{ "Annotation", "MessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChange), global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChange.Parser, new[]{ "Type", "ParticipantIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationRename), global::Netfox.Snoopers.SnooperHangouts.Models.ConversationRename.Parser, new[]{ "NewName", "OldName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEvent), global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEvent.Parser, new[]{ "EventType", "ParticipantId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.OTRModification), global::Netfox.Snoopers.SnooperHangouts.Models.OTRModification.Parser, new[]{ "OldOtrStatus", "NewOtrStatus", "OldOtrToggle", "NewOtrToggle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.HashModifier), global::Netfox.Snoopers.SnooperHangouts.Models.HashModifier.Parser, new[]{ "UpdateId", "HashDiff", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Event), global::Netfox.Snoopers.SnooperHangouts.Models.Event.Parser, new[]{ "ConversationId", "SenderId", "Timestamp", "SelfEventState", "SourceType", "ChatMessage", "MembershipChange", "ConversationRename", "HangoutEvent", "EventId", "ExpirationTimestamp", "OtrModification", "AdvancesSortTimestamp", "OtrStatus", "Persisted", "MediumType", "EventType", "EventVersion", "HashModifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState), global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState.Parser, new[]{ "ParticipantId", "LatestReadTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium), global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium.Parser, new[]{ "MediumType", "PhoneNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumOption), global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumOption.Parser, new[]{ "DeliveryMedium", "CurrentDefault" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.UserConversationState), global::Netfox.Snoopers.SnooperHangouts.Models.UserConversationState.Parser, new[]{ "ClientGeneratedId", "SelfReadState", "Status", "NotificationLevel", "View", "InviterId", "InviteTimestamp", "SortTimestamp", "ActiveTimestamp", "InviteAffinity", "DeliveryMediumOption" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationParticipantData), global::Netfox.Snoopers.SnooperHangouts.Models.ConversationParticipantData.Parser, new[]{ "Id", "FallbackName", "InvitationStatus", "ParticipantType", "NewInvitationStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Conversation), global::Netfox.Snoopers.SnooperHangouts.Models.Conversation.Parser, new[]{ "ConversationId", "Type", "Name", "SelfConversationState", "ReadState", "HasActiveHangout", "OtrStatus", "OtrToggle", "ConversationHistorySupported", "CurrentParticipant", "ParticipantData", "NetworkType", "ForceHistoryState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg), global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.BlockStateChange), global::Netfox.Snoopers.SnooperHangouts.Models.BlockStateChange.Parser, new[]{ "ParticipantId", "NewBlockState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Photo), global::Netfox.Snoopers.SnooperHangouts.Models.Photo.Parser, new[]{ "PhotoId", "DeleteAlbumlessSourcePhoto", "UserId", "IsCustomUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ExistingMedia), global::Netfox.Snoopers.SnooperHangouts.Models.ExistingMedia.Parser, new[]{ "Photo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader), global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader.Parser, new[]{ "ConversationId", "ClientGeneratedId", "ExpectedOtr", "DeliveryMedium", "EventType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ClientVersion), global::Netfox.Snoopers.SnooperHangouts.Models.ClientVersion.Parser, new[]{ "ClientId", "BuildType", "MajorVersion", "VersionTimestamp", "DeviceOsVersion", "DeviceHardware" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader), global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader.Parser, new[]{ "ClientVersion", "ClientIdentifier", "LanguageCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader), global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader.Parser, new[]{ "Status", "ErrorDescription", "DebugUrl", "RequestTraceId", "CurrentServerTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Entity), global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Parser, new[]{ "Id", "Presence", "Properties", "EntityType", "HadPastHangoutState" }, null, new[]{ typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EntityProperties), global::Netfox.Snoopers.SnooperHangouts.Models.EntityProperties.Parser, new[]{ "Type", "DisplayName", "FirstName", "PhotoUrl", "Email", "Phone", "InUsersDomain", "Gender", "PhotoUrlStatus", "CanonicalEmail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState), global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState.Parser, new[]{ "ConversationId", "Conversation", "Event", "EventContinuationToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken), global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken.Parser, new[]{ "EventId", "StorageContinuationToken", "EventTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EntityLookupSpec), global::Netfox.Snoopers.SnooperHangouts.Models.EntityLookupSpec.Parser, new[]{ "GaiaId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBit), global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBit.Parser, new[]{ "ConfigurationBitType", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceState), global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceState.Parser, new[]{ "GetRichPresenceEnabledState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState), global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState.Parser, new[]{ "Type", "Enabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting), global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting.Parser, new[]{ "DesktopOff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState), global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState.Parser, new[]{ "DesktopOff", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DndSetting), global::Netfox.Snoopers.SnooperHangouts.Models.DndSetting.Parser, new[]{ "DoNotDisturb", "TimeoutSecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PresenceStateSetting), global::Netfox.Snoopers.SnooperHangouts.Models.PresenceStateSetting.Parser, new[]{ "TimeoutSecs", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.MoodMessage), global::Netfox.Snoopers.SnooperHangouts.Models.MoodMessage.Parser, new[]{ "MoodContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.MoodContent), global::Netfox.Snoopers.SnooperHangouts.Models.MoodContent.Parser, new[]{ "Segment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting), global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting.Parser, new[]{ "MoodMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.MoodState), global::Netfox.Snoopers.SnooperHangouts.Models.MoodState.Parser, new[]{ "MoodSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction), global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction.Parser, new[]{ "DeleteActionTimestamp", "DeleteUpperBoundTimestamp", "DeleteType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID), global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID.Parser, new[]{ "GaiaId", "FallbackName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Country), global::Netfox.Snoopers.SnooperHangouts.Models.Country.Parser, new[]{ "RegionCode", "CountryCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting), global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting.Parser, new[]{ "DesktopSoundState", "DesktopRingSoundState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PhoneData), global::Netfox.Snoopers.SnooperHangouts.Models.PhoneData.Parser, new[]{ "Phone", "CallerIdSettingsMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.Phone), global::Netfox.Snoopers.SnooperHangouts.Models.Phone.Parser, new[]{ "PhoneNumber", "GoogleVoice", "VerificationStatus", "Discoverable", "DiscoverabilityStatus", "Primary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.I18nData), global::Netfox.Snoopers.SnooperHangouts.Models.I18nData.Parser, new[]{ "NationalNumber", "InternationalNumber", "CountryCode", "RegionCode", "IsValid", "ValidationResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber), global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber.Parser, new[]{ "E164", "I18NData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash), global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash.Parser, new[]{ "MaxResults", "Hash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContact), global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContact.Parser, new[]{ "Entity", "InvitationStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup), global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup.Parser, new[]{ "HashMatched", "Hash", "Contact" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdate), global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdate.Parser, new[]{ "StateUpdateHeader", "Conversation", "ConversationNotification", "EventNotification", "FocusNotification", "TypingNotification", "NotificationLevelNotification", "ReplyToInviteNotification", "WatermarkNotification", "ViewModification", "EasterEggNotification", "SelfPresenceNotification", "DeleteNotification", "PresenceNotification", "BlockNotification", "NotificationSettingNotification", "RichPresenceEnabledStateNotification" }, new[]{ "StateUpdate" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdateHeader), global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdateHeader.Parser, new[]{ "ActiveClientState", "RequestTraceId", "NotificationSettings", "CurrentServerTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.BatchUpdate), global::Netfox.Snoopers.SnooperHangouts.Models.BatchUpdate.Parser, new[]{ "StateUpdate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationNotification), global::Netfox.Snoopers.SnooperHangouts.Models.ConversationNotification.Parser, new[]{ "Conversation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EventNotification), global::Netfox.Snoopers.SnooperHangouts.Models.EventNotification.Parser, new[]{ "Event" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusNotification), global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusNotification.Parser, new[]{ "ConversationId", "SenderId", "Timestamp", "Type", "Device" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingNotification), global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingNotification.Parser, new[]{ "ConversationId", "SenderId", "Timestamp", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelNotification), global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelNotification.Parser, new[]{ "ConversationId", "Level", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteNotification), global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteNotification.Parser, new[]{ "ConversationId", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.WatermarkNotification), global::Netfox.Snoopers.SnooperHangouts.Models.WatermarkNotification.Parser, new[]{ "SenderId", "ConversationId", "LatestReadTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationViewModification), global::Netfox.Snoopers.SnooperHangouts.Models.ConversationViewModification.Parser, new[]{ "ConversationId", "OldView", "NewView" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggNotification), global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggNotification.Parser, new[]{ "SenderId", "ConversationId", "EasterEgg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SelfPresenceNotification), global::Netfox.Snoopers.SnooperHangouts.Models.SelfPresenceNotification.Parser, new[]{ "ClientPresenceState", "DoNotDisturbSetting", "DesktopOffSetting", "DesktopOffState", "MoodState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeleteActionNotification), global::Netfox.Snoopers.SnooperHangouts.Models.DeleteActionNotification.Parser, new[]{ "ConversationId", "DeleteAction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.PresenceNotification), global::Netfox.Snoopers.SnooperHangouts.Models.PresenceNotification.Parser, new[]{ "Presence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.BlockNotification), global::Netfox.Snoopers.SnooperHangouts.Models.BlockNotification.Parser, new[]{ "BlockStateChange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetNotificationSettingNotification), global::Netfox.Snoopers.SnooperHangouts.Models.SetNotificationSettingNotification.Parser, new[]{ "DesktopSoundSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledStateNotification), global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledStateNotification.Parser, new[]{ "RichPresenceEnabledState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.ConversationSpec), global::Netfox.Snoopers.SnooperHangouts.Models.ConversationSpec.Parser, new[]{ "ConversationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddress), global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddress.Parser, new[]{ "Type", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.AddUserRequest), global::Netfox.Snoopers.SnooperHangouts.Models.AddUserRequest.Parser, new[]{ "RequestHeader", "InviteeId", "EventRequestHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.AddUserResponse), global::Netfox.Snoopers.SnooperHangouts.Models.AddUserResponse.Parser, new[]{ "ResponseHeader", "CreatedEvent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.CreateConversationRequest), global::Netfox.Snoopers.SnooperHangouts.Models.CreateConversationRequest.Parser, new[]{ "RequestHeader", "Type", "ClientGeneratedId", "Name", "InviteeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.CreateConversationResponse), global::Netfox.Snoopers.SnooperHangouts.Models.CreateConversationResponse.Parser, new[]{ "ResponseHeader", "Conversation", "NewConversationCreated" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeleteConversationRequest), global::Netfox.Snoopers.SnooperHangouts.Models.DeleteConversationRequest.Parser, new[]{ "RequestHeader", "ConversationId", "DeleteUpperBoundTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.DeleteConversationResponse), global::Netfox.Snoopers.SnooperHangouts.Models.DeleteConversationResponse.Parser, new[]{ "ResponseHeader", "DeleteAction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggRequest), global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggRequest.Parser, new[]{ "RequestHeader", "ConversationId", "EasterEgg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggResponse), global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggResponse.Parser, new[]{ "ResponseHeader", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetConversationRequest), global::Netfox.Snoopers.SnooperHangouts.Models.GetConversationRequest.Parser, new[]{ "RequestHeader", "ConversationSpec", "IncludeEvent", "MaxEventsPerConversation", "EventContinuationToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetConversationResponse), global::Netfox.Snoopers.SnooperHangouts.Models.GetConversationResponse.Parser, new[]{ "ResponseHeader", "ConversationState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetEntityByIdRequest), global::Netfox.Snoopers.SnooperHangouts.Models.GetEntityByIdRequest.Parser, new[]{ "RequestHeader", "BatchLookupSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetEntityByIdResponse), global::Netfox.Snoopers.SnooperHangouts.Models.GetEntityByIdResponse.Parser, new[]{ "ResponseHeader", "Entity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetSuggestedEntitiesRequest), global::Netfox.Snoopers.SnooperHangouts.Models.GetSuggestedEntitiesRequest.Parser, new[]{ "RequestHeader", "Favorites", "ContactsYouHangoutWith", "OtherContactsOnHangouts", "OtherContacts", "DismissedContacts", "PinnedFavorites" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetSuggestedEntitiesResponse), global::Netfox.Snoopers.SnooperHangouts.Models.GetSuggestedEntitiesResponse.Parser, new[]{ "ResponseHeader", "Entity", "Favorites", "ContactsYouHangoutWith", "OtherContactsOnHangouts", "OtherContacts", "DismissedContacts", "PinnedFavorites" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetSelfInfoRequest), global::Netfox.Snoopers.SnooperHangouts.Models.GetSelfInfoRequest.Parser, new[]{ "RequestHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.GetSelfInfoResponse), global::Netfox.Snoopers.SnooperHangouts.Models.GetSelfInfoResponse.Parser, new[]{ "ResponseHeader", "SelfEntity", "IsKnownMinor", "DndState", "DesktopOffSetting", "PhoneData", "ConfigurationBit", "DesktopOffState", "GooglePlusUser", "DesktopSoundSetting", "RichPresenceState", "DefaultCountry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.QueryPresenceRequest), global::Netfox.Snoopers.SnooperHangouts.Models.QueryPresenceRequest.Parser, new[]{ "RequestHeader", "ParticipantId", "FieldMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.QueryPresenceResponse), global::Netfox.Snoopers.SnooperHangouts.Models.QueryPresenceResponse.Parser, new[]{ "ResponseHeader", "PresenceResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RemoveUserRequest), global::Netfox.Snoopers.SnooperHangouts.Models.RemoveUserRequest.Parser, new[]{ "RequestHeader", "EventRequestHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RemoveUserResponse), global::Netfox.Snoopers.SnooperHangouts.Models.RemoveUserResponse.Parser, new[]{ "ResponseHeader", "CreatedEvent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RenameConversationRequest), global::Netfox.Snoopers.SnooperHangouts.Models.RenameConversationRequest.Parser, new[]{ "RequestHeader", "NewName", "EventRequestHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.RenameConversationResponse), global::Netfox.Snoopers.SnooperHangouts.Models.RenameConversationResponse.Parser, new[]{ "ResponseHeader", "CreatedEvent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SearchEntitiesRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SearchEntitiesRequest.Parser, new[]{ "RequestHeader", "Query", "MaxCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SearchEntitiesResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SearchEntitiesResponse.Parser, new[]{ "ResponseHeader", "Entity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SendChatMessageRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SendChatMessageRequest.Parser, new[]{ "RequestHeader", "Annotation", "MessageContent", "ExistingMedia", "EventRequestHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SendChatMessageResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SendChatMessageResponse.Parser, new[]{ "ResponseHeader", "CreatedEvent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SendOffnetworkInvitationRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SendOffnetworkInvitationRequest.Parser, new[]{ "RequestHeader", "InviteeAddress" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SendOffnetworkInvitationResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SendOffnetworkInvitationResponse.Parser, new[]{ "ResponseHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetActiveClientRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SetActiveClientRequest.Parser, new[]{ "RequestHeader", "IsActive", "FullJid", "TimeoutSecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetActiveClientResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SetActiveClientResponse.Parser, new[]{ "ResponseHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationLevelRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationLevelRequest.Parser, new[]{ "RequestHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationLevelResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationLevelResponse.Parser, new[]{ "ResponseHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelRequest.Parser, new[]{ "RequestHeader", "ConversationId", "Level" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelResponse.Parser, new[]{ "ResponseHeader", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusRequest.Parser, new[]{ "RequestHeader", "ConversationId", "Type", "TimeoutSecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusResponse.Parser, new[]{ "ResponseHeader", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetPresenceRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SetPresenceRequest.Parser, new[]{ "RequestHeader", "PresenceStateSetting", "DndSetting", "DesktopOffSetting", "MoodSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetPresenceResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SetPresenceResponse.Parser, new[]{ "ResponseHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingRequest.Parser, new[]{ "RequestHeader", "ConversationId", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingResponse.Parser, new[]{ "ResponseHeader", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SyncAllNewEventsRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SyncAllNewEventsRequest.Parser, new[]{ "RequestHeader", "LastSyncTimestamp", "MaxResponseSizeBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SyncAllNewEventsResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SyncAllNewEventsResponse.Parser, new[]{ "ResponseHeader", "SyncTimestamp", "ConversationState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SyncRecentConversationsRequest), global::Netfox.Snoopers.SnooperHangouts.Models.SyncRecentConversationsRequest.Parser, new[]{ "RequestHeader", "MaxConversations", "MaxEventsPerConversation", "SyncFilter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.SyncRecentConversationsResponse), global::Netfox.Snoopers.SnooperHangouts.Models.SyncRecentConversationsResponse.Parser, new[]{ "ResponseHeader", "SyncTimestamp", "ConversationState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.UpdateWatermarkRequest), global::Netfox.Snoopers.SnooperHangouts.Models.UpdateWatermarkRequest.Parser, new[]{ "RequestHeader", "ConversationId", "LastReadTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Netfox.Snoopers.SnooperHangouts.Models.UpdateWatermarkResponse), global::Netfox.Snoopers.SnooperHangouts.Models.UpdateWatermarkResponse.Parser, new[]{ "ResponseHeader" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///  Describes which Hangouts client is active.
  /// </summary>
  public enum ActiveClientState {
    /// <summary>
    ///  No client is active.
    /// </summary>
    ACTIVE_CLIENT_STATE_NO_ACTIVE = 0,
    /// <summary>
    ///  This is the active client.
    /// </summary>
    ACTIVE_CLIENT_STATE_IS_ACTIVE = 1,
    /// <summary>
    ///  Other client is active.
    /// </summary>
    ACTIVE_CLIENT_STATE_OTHER_ACTIVE = 2,
  }

  public enum FocusType {
    FOCUS_TYPE_UNKNOWN = 0,
    FOCUS_TYPE_FOCUSED = 1,
    FOCUS_TYPE_UNFOCUSED = 2,
  }

  public enum FocusDevice {
    FOCUS_DEVICE_UNSPECIFIED = 0,
    FOCUS_DEVICE_DESKTOP = 20,
    FOCUS_DEVICE_MOBILE = 300,
  }

  public enum TypingType {
    TYPING_TYPE_UNKNOWN = 0,
    /// <summary>
    ///  Started typing.
    /// </summary>
    TYPING_TYPE_STARTED = 1,
    /// <summary>
    ///  Stopped typing with inputted text.
    /// </summary>
    TYPING_TYPE_PAUSED = 2,
    /// <summary>
    ///  Stopped typing with no inputted text.
    /// </summary>
    TYPING_TYPE_STOPPED = 3,
  }

  public enum ClientPresenceStateType {
    CLIENT_PRESENCE_STATE_UNKNOWN = 0,
    CLIENT_PRESENCE_STATE_NONE = 1,
    CLIENT_PRESENCE_STATE_DESKTOP_IDLE = 30,
    CLIENT_PRESENCE_STATE_DESKTOP_ACTIVE = 40,
  }

  public enum NotificationLevel {
    NOTIFICATION_LEVEL_UNKNOWN = 0,
    /// <summary>
    ///  Notifications are disabled.
    /// </summary>
    NOTIFICATION_LEVEL_QUIET = 10,
    /// <summary>
    ///  Notifications are enabled.
    /// </summary>
    NOTIFICATION_LEVEL_RING = 30,
  }

  public enum SegmentType {
    /// <summary>
    ///  Segment is text.
    /// </summary>
    SEGMENT_TYPE_TEXT = 0,
    /// <summary>
    ///  Segment is a line break.
    /// </summary>
    SEGMENT_TYPE_LINE_BREAK = 1,
    /// <summary>
    ///  Segment is hyperlinked text.
    /// </summary>
    SEGMENT_TYPE_LINK = 2,
  }

  /// <summary>
  ///  A type of embedded item.
  /// </summary>
  public enum ItemType {
    ITEM_TYPE_THING = 0,
    /// <summary>
    ///  Google Plus photo.
    /// </summary>
    ITEM_TYPE_PLUS_PHOTO = 249,
    ITEM_TYPE_PLACE = 335,
    /// <summary>
    ///  Google Map place.
    /// </summary>
    ITEM_TYPE_PLACE_V2 = 340,
  }

  public enum MembershipChangeType {
    MEMBERSHIP_CHANGE_TYPE_UNKNOWN = 0,
    MEMBERSHIP_CHANGE_TYPE_JOIN = 1,
    MEMBERSHIP_CHANGE_TYPE_LEAVE = 2,
  }

  public enum HangoutEventType {
    HANGOUT_EVENT_TYPE_UNKNOWN = 0,
    HANGOUT_EVENT_TYPE_START = 1,
    HANGOUT_EVENT_TYPE_END = 2,
    HANGOUT_EVENT_TYPE_JOIN = 3,
    HANGOUT_EVENT_TYPE_LEAVE = 4,
    HANGOUT_EVENT_TYPE_COMING_SOON = 5,
    HANGOUT_EVENT_TYPE_ONGOING = 6,
  }

  /// <summary>
  ///  Whether the OTR toggle is available to the user.
  /// </summary>
  public enum OffTheRecordToggle {
    OFF_THE_RECORD_TOGGLE_UNKNOWN = 0,
    OFF_THE_RECORD_TOGGLE_ENABLED = 1,
    OFF_THE_RECORD_TOGGLE_DISABLED = 2,
  }

  public enum OffTheRecordStatus {
    OFF_THE_RECORD_STATUS_UNKNOWN = 0,
    /// <summary>
    ///  Conversation is off-the-record (history disabled).
    /// </summary>
    OFF_THE_RECORD_STATUS_OFF_THE_RECORD = 1,
    /// <summary>
    ///  Conversation is on-the-record (history enabled).
    /// </summary>
    OFF_THE_RECORD_STATUS_ON_THE_RECORD = 2,
  }

  public enum SourceType {
    SOURCE_TYPE_UNKNOWN = 0,
  }

  public enum EventType {
    EVENT_TYPE_UNKNOWN = 0,
    EVENT_TYPE_REGULAR_CHAT_MESSAGE = 1,
    EVENT_TYPE_SMS = 2,
    EVENT_TYPE_VOICEMAIL = 3,
    EVENT_TYPE_ADD_USER = 4,
    EVENT_TYPE_REMOVE_USER = 5,
    EVENT_TYPE_CONVERSATION_RENAME = 6,
    EVENT_TYPE_HANGOUT = 7,
    EVENT_TYPE_PHONE_CALL = 8,
    EVENT_TYPE_OTR_MODIFICATION = 9,
    EVENT_TYPE_PLAN_MUTATION = 10,
    EVENT_TYPE_MMS = 11,
    EVENT_TYPE_DEPRECATED_12 = 12,
  }

  public enum ConversationType {
    CONVERSATION_TYPE_UNKNOWN = 0,
    /// <summary>
    ///  Conversation is one-to-one (only 2 participants).
    /// </summary>
    CONVERSATION_TYPE_ONE_TO_ONE = 1,
    /// <summary>
    ///  Conversation is group (any number of participants).
    /// </summary>
    CONVERSATION_TYPE_GROUP = 2,
  }

  public enum ConversationStatus {
    CONVERSATION_STATUS_UNKNOWN = 0,
    /// <summary>
    ///  User is invited to conversation.
    /// </summary>
    CONVERSATION_STATUS_INVITED = 1,
    /// <summary>
    ///  User is participating in conversation.
    /// </summary>
    CONVERSATION_STATUS_ACTIVE = 2,
    /// <summary>
    ///  User has left conversation.
    /// </summary>
    CONVERSATION_STATUS_LEFT = 3,
  }

  public enum ConversationView {
    CONVERSATION_VIEW_UNKNOWN = 0,
    /// <summary>
    ///  Conversation is in inbox.
    /// </summary>
    CONVERSATION_VIEW_INBOX = 1,
    /// <summary>
    ///  Conversation has been archived.
    /// </summary>
    CONVERSATION_VIEW_ARCHIVED = 2,
  }

  public enum DeliveryMediumType {
    DELIVERY_MEDIUM_UNKNOWN = 0,
    DELIVERY_MEDIUM_BABEL = 1,
    DELIVERY_MEDIUM_GOOGLE_VOICE = 2,
    DELIVERY_MEDIUM_LOCAL_SMS = 3,
  }

  public enum InvitationAffinity {
    INVITE_AFFINITY_UNKNOWN = 0,
    INVITE_AFFINITY_HIGH = 1,
    INVITE_AFFINITY_LOW = 2,
  }

  public enum ParticipantType {
    PARTICIPANT_TYPE_UNKNOWN = 0,
    PARTICIPANT_TYPE_GAIA = 2,
    PARTICIPANT_TYPE_GOOGLE_VOICE = 3,
  }

  public enum InvitationStatus {
    INVITATION_STATUS_UNKNOWN = 0,
    INVITATION_STATUS_PENDING = 1,
    INVITATION_STATUS_ACCEPTED = 2,
  }

  public enum ForceHistory {
    FORCE_HISTORY_UNKNOWN = 0,
    FORCE_HISTORY_NO = 1,
  }

  public enum NetworkType {
    NETWORK_TYPE_UNKNOWN = 0,
    NETWORK_TYPE_BABEL = 1,
    NETWORK_TYPE_GOOGLE_VOICE = 2,
  }

  public enum BlockState {
    BLOCK_STATE_UNKNOWN = 0,
    BLOCK_STATE_BLOCK = 1,
    BLOCK_STATE_UNBLOCK = 2,
  }

  public enum ReplyToInviteType {
    REPLY_TO_INVITE_TYPE_UNKNOWN = 0,
    REPLY_TO_INVITE_TYPE_ACCEPT = 1,
    REPLY_TO_INVITE_TYPE_DECLINE = 2,
  }

  /// <summary>
  ///  Identifies the client.
  /// </summary>
  public enum ClientId {
    CLIENT_ID_UNKNOWN = 0,
    /// <summary>
    ///  Hangouts app for Android.
    /// </summary>
    CLIENT_ID_ANDROID = 1,
    /// <summary>
    ///  Hangouts app for iOS.
    /// </summary>
    CLIENT_ID_IOS = 2,
    /// <summary>
    ///  Hangouts Chrome extension.
    /// </summary>
    CLIENT_ID_CHROME = 3,
    /// <summary>
    ///  Hangouts web interface in Google Plus.
    /// </summary>
    CLIENT_ID_WEB_GPLUS = 5,
    /// <summary>
    ///  Hangouts web interface in Gmail.
    /// </summary>
    CLIENT_ID_WEB_GMAIL = 6,
    /// <summary>
    ///  Hangouts Chrome app ("ultraviolet").
    /// </summary>
    CLIENT_ID_ULTRAVIOLET = 13,
  }

  /// <summary>
  ///  Build type of the client.
  /// </summary>
  public enum ClientBuildType {
    BUILD_TYPE_UNKNOWN = 0,
    /// <summary>
    ///  Web app.
    /// </summary>
    BUILD_TYPE_PRODUCTION_WEB = 1,
    /// <summary>
    ///  Native app.
    /// </summary>
    BUILD_TYPE_PRODUCTION_APP = 3,
  }

  /// <summary>
  ///  Status of the response from the server to the client.
  /// </summary>
  public enum ResponseStatus {
    RESPONSE_STATUS_UNKNOWN = 0,
    RESPONSE_STATUS_OK = 1,
    RESPONSE_STATUS_UNEXPECTED_ERROR = 3,
    RESPONSE_STATUS_INVALID_REQUEST = 4,
  }

  /// <summary>
  ///  Status of EntityProperties.photo_url.
  /// </summary>
  public enum PhotoUrlStatus {
    PHOTO_URL_STATUS_UNKNOWN = 0,
    /// <summary>
    ///  URL is a placeholder.
    /// </summary>
    PHOTO_URL_STATUS_PLACEHOLDER = 1,
    /// <summary>
    ///  URL is a photo set by the user.
    /// </summary>
    PHOTO_URL_STATUS_USER_PHOTO = 2,
  }

  public enum Gender {
    GENDER_UNKNOWN = 0,
    GENDER_MALE = 1,
    GENDER_FEMALE = 2,
  }

  public enum ProfileType {
    PROFILE_TYPE_NONE = 0,
    PROFILE_TYPE_ES_USER = 1,
  }

  /// <summary>
  ///  A type of binary configuration option.
  /// </summary>
  public enum ConfigurationBitType {
    CONFIGURATION_BIT_TYPE_UNKNOWN = 0,
    CONFIGURATION_BIT_TYPE_UNKNOWN_1 = 1,
    CONFIGURATION_BIT_TYPE_UNKNOWN_2 = 2,
    CONFIGURATION_BIT_TYPE_UNKNOWN_3 = 3,
    CONFIGURATION_BIT_TYPE_UNKNOWN_4 = 4,
    CONFIGURATION_BIT_TYPE_UNKNOWN_5 = 5,
    CONFIGURATION_BIT_TYPE_UNKNOWN_6 = 6,
    CONFIGURATION_BIT_TYPE_UNKNOWN_7 = 7,
    CONFIGURATION_BIT_TYPE_UNKNOWN_8 = 8,
    CONFIGURATION_BIT_TYPE_UNKNOWN_9 = 9,
    CONFIGURATION_BIT_TYPE_UNKNOWN_10 = 10,
    CONFIGURATION_BIT_TYPE_UNKNOWN_11 = 11,
    CONFIGURATION_BIT_TYPE_UNKNOWN_12 = 12,
    CONFIGURATION_BIT_TYPE_UNKNOWN_13 = 13,
    CONFIGURATION_BIT_TYPE_UNKNOWN_14 = 14,
    CONFIGURATION_BIT_TYPE_UNKNOWN_15 = 15,
    CONFIGURATION_BIT_TYPE_UNKNOWN_16 = 16,
    CONFIGURATION_BIT_TYPE_UNKNOWN_17 = 17,
    CONFIGURATION_BIT_TYPE_UNKNOWN_18 = 18,
    CONFIGURATION_BIT_TYPE_UNKNOWN_19 = 19,
    CONFIGURATION_BIT_TYPE_UNKNOWN_20 = 20,
    CONFIGURATION_BIT_TYPE_UNKNOWN_21 = 21,
    CONFIGURATION_BIT_TYPE_UNKNOWN_22 = 22,
    CONFIGURATION_BIT_TYPE_UNKNOWN_23 = 23,
    CONFIGURATION_BIT_TYPE_UNKNOWN_24 = 24,
    CONFIGURATION_BIT_TYPE_UNKNOWN_25 = 25,
    CONFIGURATION_BIT_TYPE_UNKNOWN_26 = 26,
    CONFIGURATION_BIT_TYPE_UNKNOWN_27 = 27,
    CONFIGURATION_BIT_TYPE_UNKNOWN_28 = 28,
    CONFIGURATION_BIT_TYPE_UNKNOWN_29 = 29,
    CONFIGURATION_BIT_TYPE_UNKNOWN_30 = 30,
    CONFIGURATION_BIT_TYPE_UNKNOWN_31 = 31,
    CONFIGURATION_BIT_TYPE_UNKNOWN_32 = 32,
    CONFIGURATION_BIT_TYPE_UNKNOWN_33 = 33,
    CONFIGURATION_BIT_TYPE_UNKNOWN_34 = 34,
    CONFIGURATION_BIT_TYPE_UNKNOWN_35 = 35,
    CONFIGURATION_BIT_TYPE_UNKNOWN_36 = 36,
  }

  public enum RichPresenceType {
    RICH_PRESENCE_TYPE_UNKNOWN = 0,
    RICH_PRESENCE_TYPE_IN_CALL_STATE = 1,
    RICH_PRESENCE_TYPE_UNKNOWN_3 = 3,
    RICH_PRESENCE_TYPE_UNKNOWN_4 = 4,
    RICH_PRESENCE_TYPE_UNKNOWN_5 = 5,
    RICH_PRESENCE_TYPE_DEVICE = 2,
    RICH_PRESENCE_TYPE_LAST_SEEN = 6,
  }

  public enum FieldMask {
    FIELD_MASK_UNKNOWN = 0,
    FIELD_MASK_REACHABLE = 1,
    FIELD_MASK_AVAILABLE = 2,
    FIELD_MASK_DEVICE = 7,
  }

  public enum DeleteType {
    DELETE_TYPE_UNKNOWN = 0,
    DELETE_TYPE_UPPER_BOUND = 1,
  }

  public enum SyncFilter {
    SYNC_FILTER_UNKNOWN = 0,
    SYNC_FILTER_INBOX = 1,
    SYNC_FILTER_ARCHIVED = 2,
  }

  public enum SoundState {
    SOUND_STATE_UNKNOWN = 0,
    SOUND_STATE_ON = 1,
    SOUND_STATE_OFF = 2,
  }

  public enum CallerIdSettingsMask {
    CALLER_ID_SETTINGS_MASK_UNKNOWN = 0,
    CALLER_ID_SETTINGS_MASK_PROVIDED = 1,
  }

  public enum PhoneVerificationStatus {
    PHONE_VERIFICATION_STATUS_UNKNOWN = 0,
    PHONE_VERIFICATION_STATUS_VERIFIED = 1,
  }

  public enum PhoneDiscoverabilityStatus {
    PHONE_DISCOVERABILITY_STATUS_UNKNOWN = 0,
    PHONE_DISCOVERABILITY_STATUS_OPTED_IN_BUT_NOT_DISCOVERABLE = 2,
  }

  public enum PhoneValidationResult {
    PHONE_VALIDATION_RESULT_IS_POSSIBLE = 0,
  }

  public enum OffnetworkAddressType {
    OFFNETWORK_ADDRESS_TYPE_UNKNOWN = 0,
    OFFNETWORK_ADDRESS_TYPE_EMAIL = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  ///  The state of do-not-disturb mode. Not to be confused with DndSetting, which
  ///  is used to change the state of do-not-disturb mode.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DoNotDisturbSetting : pb::IMessage<DoNotDisturbSetting> {
    private static readonly pb::MessageParser<DoNotDisturbSetting> _parser = new pb::MessageParser<DoNotDisturbSetting>(() => new DoNotDisturbSetting());
    public static pb::MessageParser<DoNotDisturbSetting> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DoNotDisturbSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DoNotDisturbSetting(DoNotDisturbSetting other) : this() {
      doNotDisturb_ = other.doNotDisturb_;
      expirationTimestamp_ = other.expirationTimestamp_;
      version_ = other.version_;
    }

    public DoNotDisturbSetting Clone() {
      return new DoNotDisturbSetting(this);
    }

    /// <summary>Field number for the "do_not_disturb" field.</summary>
    public const int DoNotDisturbFieldNumber = 1;
    private bool doNotDisturb_;
    /// <summary>
    ///  Whether do-not-disturb mode is enabled.
    /// </summary>
    public bool DoNotDisturb {
      get { return doNotDisturb_; }
      set {
        doNotDisturb_ = value;
      }
    }

    /// <summary>Field number for the "expiration_timestamp" field.</summary>
    public const int ExpirationTimestampFieldNumber = 2;
    private ulong expirationTimestamp_;
    /// <summary>
    ///  Timestamp when do-not-disturb mode expires.
    /// </summary>
    public ulong ExpirationTimestamp {
      get { return expirationTimestamp_; }
      set {
        expirationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private ulong version_;
    /// <summary>
    ///  Timestamp when this setting was applied. Not present when this message
    ///  comes from a notification.
    /// </summary>
    public ulong Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DoNotDisturbSetting);
    }

    public bool Equals(DoNotDisturbSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DoNotDisturb != other.DoNotDisturb) return false;
      if (ExpirationTimestamp != other.ExpirationTimestamp) return false;
      if (Version != other.Version) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (DoNotDisturb != false) hash ^= DoNotDisturb.GetHashCode();
      if (ExpirationTimestamp != 0UL) hash ^= ExpirationTimestamp.GetHashCode();
      if (Version != 0UL) hash ^= Version.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (DoNotDisturb != false) {
        output.WriteRawTag(8);
        output.WriteBool(DoNotDisturb);
      }
      if (ExpirationTimestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ExpirationTimestamp);
      }
      if (Version != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Version);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (DoNotDisturb != false) {
        size += 1 + 1;
      }
      if (ExpirationTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpirationTimestamp);
      }
      if (Version != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Version);
      }
      return size;
    }

    public void MergeFrom(DoNotDisturbSetting other) {
      if (other == null) {
        return;
      }
      if (other.DoNotDisturb != false) {
        DoNotDisturb = other.DoNotDisturb;
      }
      if (other.ExpirationTimestamp != 0UL) {
        ExpirationTimestamp = other.ExpirationTimestamp;
      }
      if (other.Version != 0UL) {
        Version = other.Version;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DoNotDisturb = input.ReadBool();
            break;
          }
          case 16: {
            ExpirationTimestamp = input.ReadUInt64();
            break;
          }
          case 24: {
            Version = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NotificationSettings : pb::IMessage<NotificationSettings> {
    private static readonly pb::MessageParser<NotificationSettings> _parser = new pb::MessageParser<NotificationSettings>(() => new NotificationSettings());
    public static pb::MessageParser<NotificationSettings> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public NotificationSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    public NotificationSettings(NotificationSettings other) : this() {
      DndSettings = other.dndSettings_ != null ? other.DndSettings.Clone() : null;
    }

    public NotificationSettings Clone() {
      return new NotificationSettings(this);
    }

    /// <summary>Field number for the "dnd_settings" field.</summary>
    public const int DndSettingsFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting dndSettings_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting DndSettings {
      get { return dndSettings_; }
      set {
        dndSettings_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as NotificationSettings);
    }

    public bool Equals(NotificationSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DndSettings, other.DndSettings)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (dndSettings_ != null) hash ^= DndSettings.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (dndSettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DndSettings);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (dndSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DndSettings);
      }
      return size;
    }

    public void MergeFrom(NotificationSettings other) {
      if (other == null) {
        return;
      }
      if (other.dndSettings_ != null) {
        if (dndSettings_ == null) {
          dndSettings_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting();
        }
        DndSettings.MergeFrom(other.DndSettings);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dndSettings_ == null) {
              dndSettings_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting();
            }
            input.ReadMessage(dndSettings_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Identifies a conversation.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationId : pb::IMessage<ConversationId> {
    private static readonly pb::MessageParser<ConversationId> _parser = new pb::MessageParser<ConversationId>(() => new ConversationId());
    public static pb::MessageParser<ConversationId> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConversationId() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConversationId(ConversationId other) : this() {
      id_ = other.id_;
    }

    public ConversationId Clone() {
      return new ConversationId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///  Unique identifier for a conversation.
    /// </summary>
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConversationId);
    }

    public bool Equals(ConversationId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      return size;
    }

    public void MergeFrom(ConversationId other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Identifies a user.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParticipantId : pb::IMessage<ParticipantId> {
    private static readonly pb::MessageParser<ParticipantId> _parser = new pb::MessageParser<ParticipantId>(() => new ParticipantId());
    public static pb::MessageParser<ParticipantId> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ParticipantId() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ParticipantId(ParticipantId other) : this() {
      gaiaId_ = other.gaiaId_;
      chatId_ = other.chatId_;
    }

    public ParticipantId Clone() {
      return new ParticipantId(this);
    }

    /// <summary>Field number for the "gaia_id" field.</summary>
    public const int GaiaIdFieldNumber = 1;
    private string gaiaId_ = "";
    /// <summary>
    ///  Unique identifier for a user's Google account.
    /// </summary>
    public string GaiaId {
      get { return gaiaId_; }
      set {
        gaiaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chat_id" field.</summary>
    public const int ChatIdFieldNumber = 2;
    private string chatId_ = "";
    /// <summary>
    ///  Seems to always be the same as gaia_id.
    /// </summary>
    public string ChatId {
      get { return chatId_; }
      set {
        chatId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ParticipantId);
    }

    public bool Equals(ParticipantId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GaiaId != other.GaiaId) return false;
      if (ChatId != other.ChatId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (GaiaId.Length != 0) hash ^= GaiaId.GetHashCode();
      if (ChatId.Length != 0) hash ^= ChatId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (GaiaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GaiaId);
      }
      if (ChatId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChatId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (GaiaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaId);
      }
      if (ChatId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChatId);
      }
      return size;
    }

    public void MergeFrom(ParticipantId other) {
      if (other == null) {
        return;
      }
      if (other.GaiaId.Length != 0) {
        GaiaId = other.GaiaId;
      }
      if (other.ChatId.Length != 0) {
        ChatId = other.ChatId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GaiaId = input.ReadString();
            break;
          }
          case 18: {
            ChatId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Indicates whether Hangouts is active (running in the foreground) on
  ///  different types of devices.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeviceStatus : pb::IMessage<DeviceStatus> {
    private static readonly pb::MessageParser<DeviceStatus> _parser = new pb::MessageParser<DeviceStatus>(() => new DeviceStatus());
    public static pb::MessageParser<DeviceStatus> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeviceStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeviceStatus(DeviceStatus other) : this() {
      mobile_ = other.mobile_;
      desktop_ = other.desktop_;
      tablet_ = other.tablet_;
    }

    public DeviceStatus Clone() {
      return new DeviceStatus(this);
    }

    /// <summary>Field number for the "mobile" field.</summary>
    public const int MobileFieldNumber = 1;
    private bool mobile_;
    /// <summary>
    ///  True if a mobile phone is active.
    /// </summary>
    public bool Mobile {
      get { return mobile_; }
      set {
        mobile_ = value;
      }
    }

    /// <summary>Field number for the "desktop" field.</summary>
    public const int DesktopFieldNumber = 2;
    private bool desktop_;
    /// <summary>
    ///  True if a desktop or laptop is active.
    /// </summary>
    public bool Desktop {
      get { return desktop_; }
      set {
        desktop_ = value;
      }
    }

    /// <summary>Field number for the "tablet" field.</summary>
    public const int TabletFieldNumber = 3;
    private bool tablet_;
    /// <summary>
    ///  True if a tablet is active.
    /// </summary>
    public bool Tablet {
      get { return tablet_; }
      set {
        tablet_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeviceStatus);
    }

    public bool Equals(DeviceStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mobile != other.Mobile) return false;
      if (Desktop != other.Desktop) return false;
      if (Tablet != other.Tablet) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Mobile != false) hash ^= Mobile.GetHashCode();
      if (Desktop != false) hash ^= Desktop.GetHashCode();
      if (Tablet != false) hash ^= Tablet.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Mobile != false) {
        output.WriteRawTag(8);
        output.WriteBool(Mobile);
      }
      if (Desktop != false) {
        output.WriteRawTag(16);
        output.WriteBool(Desktop);
      }
      if (Tablet != false) {
        output.WriteRawTag(24);
        output.WriteBool(Tablet);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Mobile != false) {
        size += 1 + 1;
      }
      if (Desktop != false) {
        size += 1 + 1;
      }
      if (Tablet != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(DeviceStatus other) {
      if (other == null) {
        return;
      }
      if (other.Mobile != false) {
        Mobile = other.Mobile;
      }
      if (other.Desktop != false) {
        Desktop = other.Desktop;
      }
      if (other.Tablet != false) {
        Tablet = other.Tablet;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Mobile = input.ReadBool();
            break;
          }
          case 16: {
            Desktop = input.ReadBool();
            break;
          }
          case 24: {
            Tablet = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Presence : pb::IMessage<Presence> {
    private static readonly pb::MessageParser<Presence> _parser = new pb::MessageParser<Presence>(() => new Presence());
    public static pb::MessageParser<Presence> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Presence() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Presence(Presence other) : this() {
      reachable_ = other.reachable_;
      available_ = other.available_;
      DeviceStatus = other.deviceStatus_ != null ? other.DeviceStatus.Clone() : null;
      MoodSetting = other.moodSetting_ != null ? other.MoodSetting.Clone() : null;
    }

    public Presence Clone() {
      return new Presence(this);
    }

    /// <summary>Field number for the "reachable" field.</summary>
    public const int ReachableFieldNumber = 1;
    private bool reachable_;
    public bool Reachable {
      get { return reachable_; }
      set {
        reachable_ = value;
      }
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 2;
    private bool available_;
    public bool Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    /// <summary>Field number for the "device_status" field.</summary>
    public const int DeviceStatusFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeviceStatus deviceStatus_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeviceStatus DeviceStatus {
      get { return deviceStatus_; }
      set {
        deviceStatus_ = value;
      }
    }

    /// <summary>Field number for the "mood_setting" field.</summary>
    public const int MoodSettingFieldNumber = 9;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting moodSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting MoodSetting {
      get { return moodSetting_; }
      set {
        moodSetting_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Presence);
    }

    public bool Equals(Presence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reachable != other.Reachable) return false;
      if (Available != other.Available) return false;
      if (!object.Equals(DeviceStatus, other.DeviceStatus)) return false;
      if (!object.Equals(MoodSetting, other.MoodSetting)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Reachable != false) hash ^= Reachable.GetHashCode();
      if (Available != false) hash ^= Available.GetHashCode();
      if (deviceStatus_ != null) hash ^= DeviceStatus.GetHashCode();
      if (moodSetting_ != null) hash ^= MoodSetting.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Reachable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Reachable);
      }
      if (Available != false) {
        output.WriteRawTag(16);
        output.WriteBool(Available);
      }
      if (deviceStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeviceStatus);
      }
      if (moodSetting_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MoodSetting);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Reachable != false) {
        size += 1 + 1;
      }
      if (Available != false) {
        size += 1 + 1;
      }
      if (deviceStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceStatus);
      }
      if (moodSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoodSetting);
      }
      return size;
    }

    public void MergeFrom(Presence other) {
      if (other == null) {
        return;
      }
      if (other.Reachable != false) {
        Reachable = other.Reachable;
      }
      if (other.Available != false) {
        Available = other.Available;
      }
      if (other.deviceStatus_ != null) {
        if (deviceStatus_ == null) {
          deviceStatus_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeviceStatus();
        }
        DeviceStatus.MergeFrom(other.DeviceStatus);
      }
      if (other.moodSetting_ != null) {
        if (moodSetting_ == null) {
          moodSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting();
        }
        MoodSetting.MergeFrom(other.MoodSetting);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Reachable = input.ReadBool();
            break;
          }
          case 16: {
            Available = input.ReadBool();
            break;
          }
          case 50: {
            if (deviceStatus_ == null) {
              deviceStatus_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeviceStatus();
            }
            input.ReadMessage(deviceStatus_);
            break;
          }
          case 74: {
            if (moodSetting_ == null) {
              moodSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting();
            }
            input.ReadMessage(moodSetting_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PresenceResult : pb::IMessage<PresenceResult> {
    private static readonly pb::MessageParser<PresenceResult> _parser = new pb::MessageParser<PresenceResult>(() => new PresenceResult());
    public static pb::MessageParser<PresenceResult> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PresenceResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PresenceResult(PresenceResult other) : this() {
      UserId = other.userId_ != null ? other.UserId.Clone() : null;
      Presence = other.presence_ != null ? other.Presence.Clone() : null;
    }

    public PresenceResult Clone() {
      return new PresenceResult(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId userId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "presence" field.</summary>
    public const int PresenceFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Presence presence_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Presence Presence {
      get { return presence_; }
      set {
        presence_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PresenceResult);
    }

    public bool Equals(PresenceResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserId, other.UserId)) return false;
      if (!object.Equals(Presence, other.Presence)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (presence_ != null) hash ^= Presence.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (userId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserId);
      }
      if (presence_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Presence);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (presence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Presence);
      }
      return size;
    }

    public void MergeFrom(PresenceResult other) {
      if (other == null) {
        return;
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.presence_ != null) {
        if (presence_ == null) {
          presence_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Presence();
        }
        Presence.MergeFrom(other.Presence);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (userId_ == null) {
              userId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(userId_);
            break;
          }
          case 18: {
            if (presence_ == null) {
              presence_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Presence();
            }
            input.ReadMessage(presence_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientIdentifier : pb::IMessage<ClientIdentifier> {
    private static readonly pb::MessageParser<ClientIdentifier> _parser = new pb::MessageParser<ClientIdentifier>(() => new ClientIdentifier());
    public static pb::MessageParser<ClientIdentifier> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ClientIdentifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ClientIdentifier(ClientIdentifier other) : this() {
      resource_ = other.resource_;
      headerId_ = other.headerId_;
    }

    public ClientIdentifier Clone() {
      return new ClientIdentifier(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private string resource_ = "";
    /// <summary>
    ///  (client_id in hangups).
    /// </summary>
    public string Resource {
      get { return resource_; }
      set {
        resource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "header_id" field.</summary>
    public const int HeaderIdFieldNumber = 2;
    private string headerId_ = "";
    /// <summary>
    ///  unknown (header_id in hangups).
    /// </summary>
    public string HeaderId {
      get { return headerId_; }
      set {
        headerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ClientIdentifier);
    }

    public bool Equals(ClientIdentifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resource != other.Resource) return false;
      if (HeaderId != other.HeaderId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Resource.Length != 0) hash ^= Resource.GetHashCode();
      if (HeaderId.Length != 0) hash ^= HeaderId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Resource.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Resource);
      }
      if (HeaderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HeaderId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Resource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Resource);
      }
      if (HeaderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeaderId);
      }
      return size;
    }

    public void MergeFrom(ClientIdentifier other) {
      if (other == null) {
        return;
      }
      if (other.Resource.Length != 0) {
        Resource = other.Resource;
      }
      if (other.HeaderId.Length != 0) {
        HeaderId = other.HeaderId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Resource = input.ReadString();
            break;
          }
          case 18: {
            HeaderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientPresenceState : pb::IMessage<ClientPresenceState> {
    private static readonly pb::MessageParser<ClientPresenceState> _parser = new pb::MessageParser<ClientPresenceState>(() => new ClientPresenceState());
    public static pb::MessageParser<ClientPresenceState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ClientPresenceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ClientPresenceState(ClientPresenceState other) : this() {
      Identifier = other.identifier_ != null ? other.Identifier.Clone() : null;
      state_ = other.state_;
    }

    public ClientPresenceState Clone() {
      return new ClientPresenceState(this);
    }

    /// <summary>Field number for the "identifier" field.</summary>
    public const int IdentifierFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier identifier_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier Identifier {
      get { return identifier_; }
      set {
        identifier_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType state_ = global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ClientPresenceState);
    }

    public bool Equals(ClientPresenceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Identifier, other.Identifier)) return false;
      if (State != other.State) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (identifier_ != null) hash ^= Identifier.GetHashCode();
      if (State != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) hash ^= State.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (identifier_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Identifier);
      }
      if (State != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (identifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identifier);
      }
      if (State != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      return size;
    }

    public void MergeFrom(ClientPresenceState other) {
      if (other == null) {
        return;
      }
      if (other.identifier_ != null) {
        if (identifier_ == null) {
          identifier_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier();
        }
        Identifier.MergeFrom(other.Identifier);
      }
      if (other.State != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) {
        State = other.State;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (identifier_ == null) {
              identifier_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier();
            }
            input.ReadMessage(identifier_);
            break;
          }
          case 16: {
            state_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserEventState : pb::IMessage<UserEventState> {
    private static readonly pb::MessageParser<UserEventState> _parser = new pb::MessageParser<UserEventState>(() => new UserEventState());
    public static pb::MessageParser<UserEventState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UserEventState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UserEventState(UserEventState other) : this() {
      UserId = other.userId_ != null ? other.UserId.Clone() : null;
      clientGeneratedId_ = other.clientGeneratedId_;
      notificationLevel_ = other.notificationLevel_;
    }

    public UserEventState Clone() {
      return new UserEventState(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId userId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "client_generated_id" field.</summary>
    public const int ClientGeneratedIdFieldNumber = 2;
    private string clientGeneratedId_ = "";
    public string ClientGeneratedId {
      get { return clientGeneratedId_; }
      set {
        clientGeneratedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification_level" field.</summary>
    public const int NotificationLevelFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel notificationLevel_ = global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel NotificationLevel {
      get { return notificationLevel_; }
      set {
        notificationLevel_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UserEventState);
    }

    public bool Equals(UserEventState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserId, other.UserId)) return false;
      if (ClientGeneratedId != other.ClientGeneratedId) return false;
      if (NotificationLevel != other.NotificationLevel) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (ClientGeneratedId.Length != 0) hash ^= ClientGeneratedId.GetHashCode();
      if (NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) hash ^= NotificationLevel.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (userId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserId);
      }
      if (ClientGeneratedId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientGeneratedId);
      }
      if (NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) NotificationLevel);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (ClientGeneratedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientGeneratedId);
      }
      if (NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationLevel);
      }
      return size;
    }

    public void MergeFrom(UserEventState other) {
      if (other == null) {
        return;
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.ClientGeneratedId.Length != 0) {
        ClientGeneratedId = other.ClientGeneratedId;
      }
      if (other.NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        NotificationLevel = other.NotificationLevel;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (userId_ == null) {
              userId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(userId_);
            break;
          }
          case 18: {
            ClientGeneratedId = input.ReadString();
            break;
          }
          case 24: {
            notificationLevel_ = (global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Formatting : pb::IMessage<Formatting> {
    private static readonly pb::MessageParser<Formatting> _parser = new pb::MessageParser<Formatting>(() => new Formatting());
    public static pb::MessageParser<Formatting> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Formatting() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Formatting(Formatting other) : this() {
      bold_ = other.bold_;
      italic_ = other.italic_;
      strikethrough_ = other.strikethrough_;
      underline_ = other.underline_;
    }

    public Formatting Clone() {
      return new Formatting(this);
    }

    /// <summary>Field number for the "bold" field.</summary>
    public const int BoldFieldNumber = 1;
    private bool bold_;
    public bool Bold {
      get { return bold_; }
      set {
        bold_ = value;
      }
    }

    /// <summary>Field number for the "italic" field.</summary>
    public const int ItalicFieldNumber = 2;
    private bool italic_;
    public bool Italic {
      get { return italic_; }
      set {
        italic_ = value;
      }
    }

    /// <summary>Field number for the "strikethrough" field.</summary>
    public const int StrikethroughFieldNumber = 3;
    private bool strikethrough_;
    public bool Strikethrough {
      get { return strikethrough_; }
      set {
        strikethrough_ = value;
      }
    }

    /// <summary>Field number for the "underline" field.</summary>
    public const int UnderlineFieldNumber = 4;
    private bool underline_;
    public bool Underline {
      get { return underline_; }
      set {
        underline_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Formatting);
    }

    public bool Equals(Formatting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bold != other.Bold) return false;
      if (Italic != other.Italic) return false;
      if (Strikethrough != other.Strikethrough) return false;
      if (Underline != other.Underline) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Bold != false) hash ^= Bold.GetHashCode();
      if (Italic != false) hash ^= Italic.GetHashCode();
      if (Strikethrough != false) hash ^= Strikethrough.GetHashCode();
      if (Underline != false) hash ^= Underline.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Bold != false) {
        output.WriteRawTag(8);
        output.WriteBool(Bold);
      }
      if (Italic != false) {
        output.WriteRawTag(16);
        output.WriteBool(Italic);
      }
      if (Strikethrough != false) {
        output.WriteRawTag(24);
        output.WriteBool(Strikethrough);
      }
      if (Underline != false) {
        output.WriteRawTag(32);
        output.WriteBool(Underline);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Bold != false) {
        size += 1 + 1;
      }
      if (Italic != false) {
        size += 1 + 1;
      }
      if (Strikethrough != false) {
        size += 1 + 1;
      }
      if (Underline != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(Formatting other) {
      if (other == null) {
        return;
      }
      if (other.Bold != false) {
        Bold = other.Bold;
      }
      if (other.Italic != false) {
        Italic = other.Italic;
      }
      if (other.Strikethrough != false) {
        Strikethrough = other.Strikethrough;
      }
      if (other.Underline != false) {
        Underline = other.Underline;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Bold = input.ReadBool();
            break;
          }
          case 16: {
            Italic = input.ReadBool();
            break;
          }
          case 24: {
            Strikethrough = input.ReadBool();
            break;
          }
          case 32: {
            Underline = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LinkData : pb::IMessage<LinkData> {
    private static readonly pb::MessageParser<LinkData> _parser = new pb::MessageParser<LinkData>(() => new LinkData());
    public static pb::MessageParser<LinkData> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public LinkData() {
      OnConstruction();
    }

    partial void OnConstruction();

    public LinkData(LinkData other) : this() {
      linkTarget_ = other.linkTarget_;
    }

    public LinkData Clone() {
      return new LinkData(this);
    }

    /// <summary>Field number for the "link_target" field.</summary>
    public const int LinkTargetFieldNumber = 1;
    private string linkTarget_ = "";
    public string LinkTarget {
      get { return linkTarget_; }
      set {
        linkTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as LinkData);
    }

    public bool Equals(LinkData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LinkTarget != other.LinkTarget) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (LinkTarget.Length != 0) hash ^= LinkTarget.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (LinkTarget.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LinkTarget);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (LinkTarget.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkTarget);
      }
      return size;
    }

    public void MergeFrom(LinkData other) {
      if (other == null) {
        return;
      }
      if (other.LinkTarget.Length != 0) {
        LinkTarget = other.LinkTarget;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            LinkTarget = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  A segment of a message. Message are broken into segments that may be of
  ///  different types and have different formatting.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Segment : pb::IMessage<Segment> {
    private static readonly pb::MessageParser<Segment> _parser = new pb::MessageParser<Segment>(() => new Segment());
    public static pb::MessageParser<Segment> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Segment() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Segment(Segment other) : this() {
      type_ = other.type_;
      text_ = other.text_;
      Formatting = other.formatting_ != null ? other.Formatting.Clone() : null;
      LinkData = other.linkData_ != null ? other.LinkData.Clone() : null;
    }

    public Segment Clone() {
      return new Segment(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType.SEGMENT_TYPE_TEXT;
    /// <summary>
    ///  Note: This field is required because Hangouts for Chrome misbehaves if it
    ///  isn't serialized.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    /// <summary>
    ///  The segment text. For line breaks, may either be empty or contain new line
    ///  character.
    /// </summary>
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "formatting" field.</summary>
    public const int FormattingFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Formatting formatting_;
    /// <summary>
    ///  Formatting for this segment.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.Formatting Formatting {
      get { return formatting_; }
      set {
        formatting_ = value;
      }
    }

    /// <summary>Field number for the "link_data" field.</summary>
    public const int LinkDataFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.LinkData linkData_;
    /// <summary>
    ///  Link data for this segment, if it is a link.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.LinkData LinkData {
      get { return linkData_; }
      set {
        linkData_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Segment);
    }

    public bool Equals(Segment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(Formatting, other.Formatting)) return false;
      if (!object.Equals(LinkData, other.LinkData)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType.SEGMENT_TYPE_TEXT) hash ^= Type.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (formatting_ != null) hash ^= Formatting.GetHashCode();
      if (linkData_ != null) hash ^= LinkData.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType.SEGMENT_TYPE_TEXT) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (formatting_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Formatting);
      }
      if (linkData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LinkData);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType.SEGMENT_TYPE_TEXT) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (formatting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Formatting);
      }
      if (linkData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinkData);
      }
      return size;
    }

    public void MergeFrom(Segment other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType.SEGMENT_TYPE_TEXT) {
        Type = other.Type;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.formatting_ != null) {
        if (formatting_ == null) {
          formatting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Formatting();
        }
        Formatting.MergeFrom(other.Formatting);
      }
      if (other.linkData_ != null) {
        if (linkData_ == null) {
          linkData_ = new global::Netfox.Snoopers.SnooperHangouts.Models.LinkData();
        }
        LinkData.MergeFrom(other.LinkData);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.SegmentType) input.ReadEnum();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            if (formatting_ == null) {
              formatting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Formatting();
            }
            input.ReadMessage(formatting_);
            break;
          }
          case 34: {
            if (linkData_ == null) {
              linkData_ = new global::Netfox.Snoopers.SnooperHangouts.Models.LinkData();
            }
            input.ReadMessage(linkData_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Google Plus photo that can be embedded in a chat message.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PlusPhoto : pb::IMessage<PlusPhoto> {
    private static readonly pb::MessageParser<PlusPhoto> _parser = new pb::MessageParser<PlusPhoto>(() => new PlusPhoto());
    public static pb::MessageParser<PlusPhoto> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PlusPhoto() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PlusPhoto(PlusPhoto other) : this() {
      Thumbnail = other.thumbnail_ != null ? other.Thumbnail.Clone() : null;
      ownerObfuscatedId_ = other.ownerObfuscatedId_;
      albumId_ = other.albumId_;
      photoId_ = other.photoId_;
      url_ = other.url_;
      originalContentUrl_ = other.originalContentUrl_;
      mediaType_ = other.mediaType_;
      streamId_ = other.streamId_.Clone();
    }

    public PlusPhoto Clone() {
      return new PlusPhoto(this);
    }

    /// <summary>Field number for the "thumbnail" field.</summary>
    public const int ThumbnailFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.Thumbnail thumbnail_;
    /// <summary>
    ///  Thumbnail.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.Thumbnail Thumbnail {
      get { return thumbnail_; }
      set {
        thumbnail_ = value;
      }
    }

    /// <summary>Field number for the "owner_obfuscated_id" field.</summary>
    public const int OwnerObfuscatedIdFieldNumber = 2;
    private string ownerObfuscatedId_ = "";
    /// <summary>
    ///  Owner obfuscated ID.
    /// </summary>
    public string OwnerObfuscatedId {
      get { return ownerObfuscatedId_; }
      set {
        ownerObfuscatedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "album_id" field.</summary>
    public const int AlbumIdFieldNumber = 3;
    private string albumId_ = "";
    /// <summary>
    ///  Album ID.
    /// </summary>
    public string AlbumId {
      get { return albumId_; }
      set {
        albumId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "photo_id" field.</summary>
    public const int PhotoIdFieldNumber = 4;
    private string photoId_ = "";
    /// <summary>
    ///  Photo ID.
    /// </summary>
    public string PhotoId {
      get { return photoId_; }
      set {
        photoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 6;
    private string url_ = "";
    /// <summary>
    ///  URL of full-sized image.
    /// </summary>
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_content_url" field.</summary>
    public const int OriginalContentUrlFieldNumber = 10;
    private string originalContentUrl_ = "";
    /// <summary>
    ///  URL of image thumbnail.
    /// </summary>
    public string OriginalContentUrl {
      get { return originalContentUrl_; }
      set {
        originalContentUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "media_type" field.</summary>
    public const int MediaTypeFieldNumber = 13;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType mediaType_ = global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType.MEDIA_TYPE_UNKNOWN;
    /// <summary>
    ///  The media type.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType MediaType {
      get { return mediaType_; }
      set {
        mediaType_ = value;
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_streamId_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> streamId_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  List of stream ID parameters.
    /// </summary>
    public pbc::RepeatedField<string> StreamId {
      get { return streamId_; }
    }

    public override bool Equals(object other) {
      return Equals(other as PlusPhoto);
    }

    public bool Equals(PlusPhoto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Thumbnail, other.Thumbnail)) return false;
      if (OwnerObfuscatedId != other.OwnerObfuscatedId) return false;
      if (AlbumId != other.AlbumId) return false;
      if (PhotoId != other.PhotoId) return false;
      if (Url != other.Url) return false;
      if (OriginalContentUrl != other.OriginalContentUrl) return false;
      if (MediaType != other.MediaType) return false;
      if(!streamId_.Equals(other.streamId_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (thumbnail_ != null) hash ^= Thumbnail.GetHashCode();
      if (OwnerObfuscatedId.Length != 0) hash ^= OwnerObfuscatedId.GetHashCode();
      if (AlbumId.Length != 0) hash ^= AlbumId.GetHashCode();
      if (PhotoId.Length != 0) hash ^= PhotoId.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (OriginalContentUrl.Length != 0) hash ^= OriginalContentUrl.GetHashCode();
      if (MediaType != global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType.MEDIA_TYPE_UNKNOWN) hash ^= MediaType.GetHashCode();
      hash ^= streamId_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (thumbnail_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Thumbnail);
      }
      if (OwnerObfuscatedId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OwnerObfuscatedId);
      }
      if (AlbumId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AlbumId);
      }
      if (PhotoId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PhotoId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Url);
      }
      if (OriginalContentUrl.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OriginalContentUrl);
      }
      if (MediaType != global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType.MEDIA_TYPE_UNKNOWN) {
        output.WriteRawTag(104);
        output.WriteEnum((int) MediaType);
      }
      streamId_.WriteTo(output, _repeated_streamId_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (thumbnail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Thumbnail);
      }
      if (OwnerObfuscatedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerObfuscatedId);
      }
      if (AlbumId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbumId);
      }
      if (PhotoId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhotoId);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (OriginalContentUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalContentUrl);
      }
      if (MediaType != global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType.MEDIA_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MediaType);
      }
      size += streamId_.CalculateSize(_repeated_streamId_codec);
      return size;
    }

    public void MergeFrom(PlusPhoto other) {
      if (other == null) {
        return;
      }
      if (other.thumbnail_ != null) {
        if (thumbnail_ == null) {
          thumbnail_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.Thumbnail();
        }
        Thumbnail.MergeFrom(other.Thumbnail);
      }
      if (other.OwnerObfuscatedId.Length != 0) {
        OwnerObfuscatedId = other.OwnerObfuscatedId;
      }
      if (other.AlbumId.Length != 0) {
        AlbumId = other.AlbumId;
      }
      if (other.PhotoId.Length != 0) {
        PhotoId = other.PhotoId;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.OriginalContentUrl.Length != 0) {
        OriginalContentUrl = other.OriginalContentUrl;
      }
      if (other.MediaType != global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType.MEDIA_TYPE_UNKNOWN) {
        MediaType = other.MediaType;
      }
      streamId_.Add(other.streamId_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (thumbnail_ == null) {
              thumbnail_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.Thumbnail();
            }
            input.ReadMessage(thumbnail_);
            break;
          }
          case 18: {
            OwnerObfuscatedId = input.ReadString();
            break;
          }
          case 26: {
            AlbumId = input.ReadString();
            break;
          }
          case 34: {
            PhotoId = input.ReadString();
            break;
          }
          case 50: {
            Url = input.ReadString();
            break;
          }
          case 82: {
            OriginalContentUrl = input.ReadString();
            break;
          }
          case 104: {
            mediaType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Types.MediaType) input.ReadEnum();
            break;
          }
          case 114: {
            streamId_.AddEntriesFrom(input, _repeated_streamId_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlusPhoto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      /// <summary>
      ///  Media type.
      /// </summary>
      public enum MediaType {
        MEDIA_TYPE_UNKNOWN = 0,
        MEDIA_TYPE_PHOTO = 1,
        MEDIA_TYPE_ANIMATED_PHOTO = 4,
      }

      /// <summary>
      ///  Metadata for displaying an image thumbnail.
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Thumbnail : pb::IMessage<Thumbnail> {
        private static readonly pb::MessageParser<Thumbnail> _parser = new pb::MessageParser<Thumbnail>(() => new Thumbnail());
        public static pb::MessageParser<Thumbnail> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Thumbnail() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Thumbnail(Thumbnail other) : this() {
          url_ = other.url_;
          imageUrl_ = other.imageUrl_;
          widthPx_ = other.widthPx_;
          heightPx_ = other.heightPx_;
        }

        public Thumbnail Clone() {
          return new Thumbnail(this);
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 1;
        private string url_ = "";
        /// <summary>
        ///  URL to navigate to when thumbnail is selected (a Google Plus album
        ///  page).
        /// </summary>
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "image_url" field.</summary>
        public const int ImageUrlFieldNumber = 4;
        private string imageUrl_ = "";
        /// <summary>
        ///  URL of thumbnail image.
        /// </summary>
        public string ImageUrl {
          get { return imageUrl_; }
          set {
            imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width_px" field.</summary>
        public const int WidthPxFieldNumber = 10;
        private ulong widthPx_;
        /// <summary>
        ///  Image width in pixels.
        /// </summary>
        public ulong WidthPx {
          get { return widthPx_; }
          set {
            widthPx_ = value;
          }
        }

        /// <summary>Field number for the "height_px" field.</summary>
        public const int HeightPxFieldNumber = 11;
        private ulong heightPx_;
        /// <summary>
        ///  Image height in pixels.
        /// </summary>
        public ulong HeightPx {
          get { return heightPx_; }
          set {
            heightPx_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Thumbnail);
        }

        public bool Equals(Thumbnail other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Url != other.Url) return false;
          if (ImageUrl != other.ImageUrl) return false;
          if (WidthPx != other.WidthPx) return false;
          if (HeightPx != other.HeightPx) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
          if (WidthPx != 0UL) hash ^= WidthPx.GetHashCode();
          if (HeightPx != 0UL) hash ^= HeightPx.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Url.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Url);
          }
          if (ImageUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ImageUrl);
          }
          if (WidthPx != 0UL) {
            output.WriteRawTag(80);
            output.WriteUInt64(WidthPx);
          }
          if (HeightPx != 0UL) {
            output.WriteRawTag(88);
            output.WriteUInt64(HeightPx);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (ImageUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
          }
          if (WidthPx != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WidthPx);
          }
          if (HeightPx != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HeightPx);
          }
          return size;
        }

        public void MergeFrom(Thumbnail other) {
          if (other == null) {
            return;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.ImageUrl.Length != 0) {
            ImageUrl = other.ImageUrl;
          }
          if (other.WidthPx != 0UL) {
            WidthPx = other.WidthPx;
          }
          if (other.HeightPx != 0UL) {
            HeightPx = other.HeightPx;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Url = input.ReadString();
                break;
              }
              case 34: {
                ImageUrl = input.ReadString();
                break;
              }
              case 80: {
                WidthPx = input.ReadUInt64();
                break;
              }
              case 88: {
                HeightPx = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///  Place that can be embedded in a chat message via Google Maps.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Place : pb::IMessage<Place> {
    private static readonly pb::MessageParser<Place> _parser = new pb::MessageParser<Place>(() => new Place());
    public static pb::MessageParser<Place> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Place() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Place(Place other) : this() {
      url_ = other.url_;
      name_ = other.name_;
      RepresentativeImage = other.representativeImage_ != null ? other.RepresentativeImage.Clone() : null;
    }

    public Place Clone() {
      return new Place(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    /// <summary>
    ///  Google Maps URL pointing to the map coordinates.
    /// </summary>
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    ///  Name of map location.
    /// </summary>
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "representative_image" field.</summary>
    public const int RepresentativeImageFieldNumber = 185;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Place.Types.RepresentativeImage representativeImage_;
    /// <summary>
    ///  Representative image of the place (map with pin).
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.Place.Types.RepresentativeImage RepresentativeImage {
      get { return representativeImage_; }
      set {
        representativeImage_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Place);
    }

    public bool Equals(Place other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(RepresentativeImage, other.RepresentativeImage)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (representativeImage_ != null) hash ^= RepresentativeImage.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (representativeImage_ != null) {
        output.WriteRawTag(202, 11);
        output.WriteMessage(RepresentativeImage);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (representativeImage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RepresentativeImage);
      }
      return size;
    }

    public void MergeFrom(Place other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.representativeImage_ != null) {
        if (representativeImage_ == null) {
          representativeImage_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Place.Types.RepresentativeImage();
        }
        RepresentativeImage.MergeFrom(other.RepresentativeImage);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 1482: {
            if (representativeImage_ == null) {
              representativeImage_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Place.Types.RepresentativeImage();
            }
            input.ReadMessage(representativeImage_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Place message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      /// <summary>
      ///  Representative image of a place.
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RepresentativeImage : pb::IMessage<RepresentativeImage> {
        private static readonly pb::MessageParser<RepresentativeImage> _parser = new pb::MessageParser<RepresentativeImage>(() => new RepresentativeImage());
        public static pb::MessageParser<RepresentativeImage> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::Netfox.Snoopers.SnooperHangouts.Models.Place.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public RepresentativeImage() {
          OnConstruction();
        }

        partial void OnConstruction();

        public RepresentativeImage(RepresentativeImage other) : this() {
          url_ = other.url_;
        }

        public RepresentativeImage Clone() {
          return new RepresentativeImage(this);
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private string url_ = "";
        /// <summary>
        ///  URL of image.
        /// </summary>
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as RepresentativeImage);
        }

        public bool Equals(RepresentativeImage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Url != other.Url) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          return size;
        }

        public void MergeFrom(RepresentativeImage other) {
          if (other == null) {
            return;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 18: {
                Url = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///  An item of some type embedded in a chat message.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EmbedItem : pb::IMessage<EmbedItem> {
    private static readonly pb::MessageParser<EmbedItem> _parser = new pb::MessageParser<EmbedItem>(() => new EmbedItem());
    public static pb::MessageParser<EmbedItem> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EmbedItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EmbedItem(EmbedItem other) : this() {
      type_ = other.type_.Clone();
      id_ = other.id_;
      PlusPhoto = other.plusPhoto_ != null ? other.PlusPhoto.Clone() : null;
      Place = other.place_ != null ? other.Place.Clone() : null;
    }

    public EmbedItem Clone() {
      return new EmbedItem(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ItemType> _repeated_type_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Netfox.Snoopers.SnooperHangouts.Models.ItemType) x);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ItemType> type_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ItemType>();
    /// <summary>
    ///  List of embedded item types in this message.
    /// </summary>
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ItemType> Type {
      get { return type_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    ///  For photos this is not given, for maps, it's the URL of the map.
    /// </summary>
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plus_photo" field.</summary>
    public const int PlusPhotoFieldNumber = 27639957;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto plusPhoto_;
    /// <summary>
    ///  Embedded Google Plus photo.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto PlusPhoto {
      get { return plusPhoto_; }
      set {
        plusPhoto_ = value;
      }
    }

    /// <summary>Field number for the "place" field.</summary>
    public const int PlaceFieldNumber = 35825640;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Place place_;
    /// <summary>
    ///  Embedded Google Map of a place.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.Place Place {
      get { return place_; }
      set {
        place_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EmbedItem);
    }

    public bool Equals(EmbedItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!type_.Equals(other.type_)) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(PlusPhoto, other.PlusPhoto)) return false;
      if (!object.Equals(Place, other.Place)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= type_.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (plusPhoto_ != null) hash ^= PlusPhoto.GetHashCode();
      if (place_ != null) hash ^= Place.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      type_.WriteTo(output, _repeated_type_codec);
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (plusPhoto_ != null) {
        output.WriteRawTag(170, 137, 184, 105);
        output.WriteMessage(PlusPhoto);
      }
      if (place_ != null) {
        output.WriteRawTag(194, 254, 212, 136, 1);
        output.WriteMessage(Place);
      }
    }

    public int CalculateSize() {
      int size = 0;
      size += type_.CalculateSize(_repeated_type_codec);
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (plusPhoto_ != null) {
        size += 4 + pb::CodedOutputStream.ComputeMessageSize(PlusPhoto);
      }
      if (place_ != null) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(Place);
      }
      return size;
    }

    public void MergeFrom(EmbedItem other) {
      if (other == null) {
        return;
      }
      type_.Add(other.type_);
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.plusPhoto_ != null) {
        if (plusPhoto_ == null) {
          plusPhoto_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto();
        }
        PlusPhoto.MergeFrom(other.PlusPhoto);
      }
      if (other.place_ != null) {
        if (place_ == null) {
          place_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Place();
        }
        Place.MergeFrom(other.Place);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            type_.AddEntriesFrom(input, _repeated_type_codec);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 221119658: {
            if (plusPhoto_ == null) {
              plusPhoto_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PlusPhoto();
            }
            input.ReadMessage(plusPhoto_);
            break;
          }
          case 286605122: {
            if (place_ == null) {
              place_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Place();
            }
            input.ReadMessage(place_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  An attachment for a chat message.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Attachment : pb::IMessage<Attachment> {
    private static readonly pb::MessageParser<Attachment> _parser = new pb::MessageParser<Attachment>(() => new Attachment());
    public static pb::MessageParser<Attachment> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Attachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Attachment(Attachment other) : this() {
      EmbedItem = other.embedItem_ != null ? other.EmbedItem.Clone() : null;
    }

    public Attachment Clone() {
      return new Attachment(this);
    }

    /// <summary>Field number for the "embed_item" field.</summary>
    public const int EmbedItemFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EmbedItem embedItem_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EmbedItem EmbedItem {
      get { return embedItem_; }
      set {
        embedItem_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Attachment);
    }

    public bool Equals(Attachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EmbedItem, other.EmbedItem)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (embedItem_ != null) hash ^= EmbedItem.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (embedItem_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EmbedItem);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (embedItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmbedItem);
      }
      return size;
    }

    public void MergeFrom(Attachment other) {
      if (other == null) {
        return;
      }
      if (other.embedItem_ != null) {
        if (embedItem_ == null) {
          embedItem_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EmbedItem();
        }
        EmbedItem.MergeFrom(other.EmbedItem);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (embedItem_ == null) {
              embedItem_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EmbedItem();
            }
            input.ReadMessage(embedItem_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Chat message content.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MessageContent : pb::IMessage<MessageContent> {
    private static readonly pb::MessageParser<MessageContent> _parser = new pb::MessageParser<MessageContent>(() => new MessageContent());
    public static pb::MessageParser<MessageContent> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MessageContent(MessageContent other) : this() {
      segment_ = other.segment_.Clone();
      attachment_ = other.attachment_.Clone();
    }

    public MessageContent Clone() {
      return new MessageContent(this);
    }

    /// <summary>Field number for the "segment" field.</summary>
    public const int SegmentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Segment> _repeated_segment_codec
        = pb::FieldCodec.ForMessage(10, global::Netfox.Snoopers.SnooperHangouts.Models.Segment.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Segment> segment_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Segment>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Segment> Segment {
      get { return segment_; }
    }

    /// <summary>Field number for the "attachment" field.</summary>
    public const int AttachmentFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Attachment> _repeated_attachment_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.Attachment.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Attachment> attachment_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Attachment>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Attachment> Attachment {
      get { return attachment_; }
    }

    public override bool Equals(object other) {
      return Equals(other as MessageContent);
    }

    public bool Equals(MessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!segment_.Equals(other.segment_)) return false;
      if(!attachment_.Equals(other.attachment_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= segment_.GetHashCode();
      hash ^= attachment_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      segment_.WriteTo(output, _repeated_segment_codec);
      attachment_.WriteTo(output, _repeated_attachment_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += segment_.CalculateSize(_repeated_segment_codec);
      size += attachment_.CalculateSize(_repeated_attachment_codec);
      return size;
    }

    public void MergeFrom(MessageContent other) {
      if (other == null) {
        return;
      }
      segment_.Add(other.segment_);
      attachment_.Add(other.attachment_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            segment_.AddEntriesFrom(input, _repeated_segment_codec);
            break;
          }
          case 18: {
            attachment_.AddEntriesFrom(input, _repeated_attachment_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Annotation that can be applied to a chat message event. The only known use
  ///  for this is "\me" actions supported by the Chrome client (type 4).
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventAnnotation : pb::IMessage<EventAnnotation> {
    private static readonly pb::MessageParser<EventAnnotation> _parser = new pb::MessageParser<EventAnnotation>(() => new EventAnnotation());
    public static pb::MessageParser<EventAnnotation> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EventAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EventAnnotation(EventAnnotation other) : this() {
      type_ = other.type_;
      value_ = other.value_;
    }

    public EventAnnotation Clone() {
      return new EventAnnotation(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///  Annotation type.
    /// </summary>
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    ///  annotation string value.
    /// </summary>
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EventAnnotation);
    }

    public bool Equals(EventAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    public void MergeFrom(EventAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  A chat message in a conversation.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatMessage : pb::IMessage<ChatMessage> {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ChatMessage(ChatMessage other) : this() {
      annotation_ = other.annotation_.Clone();
      MessageContent = other.messageContent_ != null ? other.MessageContent.Clone() : null;
    }

    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "annotation" field.</summary>
    public const int AnnotationFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation> _repeated_annotation_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation> annotation_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation>();
    /// <summary>
    ///  annotation to attach to message.
    /// </summary>
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation> Annotation {
      get { return annotation_; }
    }

    /// <summary>Field number for the "message_content" field.</summary>
    public const int MessageContentFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent messageContent_;
    /// <summary>
    ///  The message's content.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent MessageContent {
      get { return messageContent_; }
      set {
        messageContent_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!annotation_.Equals(other.annotation_)) return false;
      if (!object.Equals(MessageContent, other.MessageContent)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= annotation_.GetHashCode();
      if (messageContent_ != null) hash ^= MessageContent.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      annotation_.WriteTo(output, _repeated_annotation_codec);
      if (messageContent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MessageContent);
      }
    }

    public int CalculateSize() {
      int size = 0;
      size += annotation_.CalculateSize(_repeated_annotation_codec);
      if (messageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageContent);
      }
      return size;
    }

    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      annotation_.Add(other.annotation_);
      if (other.messageContent_ != null) {
        if (messageContent_ == null) {
          messageContent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent();
        }
        MessageContent.MergeFrom(other.MessageContent);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            annotation_.AddEntriesFrom(input, _repeated_annotation_codec);
            break;
          }
          case 26: {
            if (messageContent_ == null) {
              messageContent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent();
            }
            input.ReadMessage(messageContent_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MembershipChange : pb::IMessage<MembershipChange> {
    private static readonly pb::MessageParser<MembershipChange> _parser = new pb::MessageParser<MembershipChange>(() => new MembershipChange());
    public static pb::MessageParser<MembershipChange> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MembershipChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MembershipChange(MembershipChange other) : this() {
      type_ = other.type_;
      participantIds_ = other.participantIds_.Clone();
    }

    public MembershipChange Clone() {
      return new MembershipChange(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType.MEMBERSHIP_CHANGE_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "participant_ids" field.</summary>
    public const int ParticipantIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> _repeated_participantIds_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> participantIds_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> ParticipantIds {
      get { return participantIds_; }
    }

    public override bool Equals(object other) {
      return Equals(other as MembershipChange);
    }

    public bool Equals(MembershipChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!participantIds_.Equals(other.participantIds_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType.MEMBERSHIP_CHANGE_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      hash ^= participantIds_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType.MEMBERSHIP_CHANGE_TYPE_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      participantIds_.WriteTo(output, _repeated_participantIds_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType.MEMBERSHIP_CHANGE_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += participantIds_.CalculateSize(_repeated_participantIds_codec);
      return size;
    }

    public void MergeFrom(MembershipChange other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType.MEMBERSHIP_CHANGE_TYPE_UNKNOWN) {
        Type = other.Type;
      }
      participantIds_.Add(other.participantIds_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChangeType) input.ReadEnum();
            break;
          }
          case 26: {
            participantIds_.AddEntriesFrom(input, _repeated_participantIds_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationRename : pb::IMessage<ConversationRename> {
    private static readonly pb::MessageParser<ConversationRename> _parser = new pb::MessageParser<ConversationRename>(() => new ConversationRename());
    public static pb::MessageParser<ConversationRename> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConversationRename() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConversationRename(ConversationRename other) : this() {
      newName_ = other.newName_;
      oldName_ = other.oldName_;
    }

    public ConversationRename Clone() {
      return new ConversationRename(this);
    }

    /// <summary>Field number for the "new_name" field.</summary>
    public const int NewNameFieldNumber = 1;
    private string newName_ = "";
    public string NewName {
      get { return newName_; }
      set {
        newName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "old_name" field.</summary>
    public const int OldNameFieldNumber = 2;
    private string oldName_ = "";
    public string OldName {
      get { return oldName_; }
      set {
        oldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConversationRename);
    }

    public bool Equals(ConversationRename other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewName != other.NewName) return false;
      if (OldName != other.OldName) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (NewName.Length != 0) hash ^= NewName.GetHashCode();
      if (OldName.Length != 0) hash ^= OldName.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (NewName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewName);
      }
      if (OldName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OldName);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (NewName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewName);
      }
      if (OldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldName);
      }
      return size;
    }

    public void MergeFrom(ConversationRename other) {
      if (other == null) {
        return;
      }
      if (other.NewName.Length != 0) {
        NewName = other.NewName;
      }
      if (other.OldName.Length != 0) {
        OldName = other.OldName;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            NewName = input.ReadString();
            break;
          }
          case 18: {
            OldName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HangoutEvent : pb::IMessage<HangoutEvent> {
    private static readonly pb::MessageParser<HangoutEvent> _parser = new pb::MessageParser<HangoutEvent>(() => new HangoutEvent());
    public static pb::MessageParser<HangoutEvent> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public HangoutEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    public HangoutEvent(HangoutEvent other) : this() {
      eventType_ = other.eventType_;
      participantId_ = other.participantId_.Clone();
    }

    public HangoutEvent Clone() {
      return new HangoutEvent(this);
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType eventType_ = global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType.HANGOUT_EVENT_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> _repeated_participantId_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> participantId_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> ParticipantId {
      get { return participantId_; }
    }

    public override bool Equals(object other) {
      return Equals(other as HangoutEvent);
    }

    public bool Equals(HangoutEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if(!participantId_.Equals(other.participantId_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType.HANGOUT_EVENT_TYPE_UNKNOWN) hash ^= EventType.GetHashCode();
      hash ^= participantId_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType.HANGOUT_EVENT_TYPE_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      participantId_.WriteTo(output, _repeated_participantId_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType.HANGOUT_EVENT_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      size += participantId_.CalculateSize(_repeated_participantId_codec);
      return size;
    }

    public void MergeFrom(HangoutEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventType != global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType.HANGOUT_EVENT_TYPE_UNKNOWN) {
        EventType = other.EventType;
      }
      participantId_.Add(other.participantId_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            eventType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEventType) input.ReadEnum();
            break;
          }
          case 18: {
            participantId_.AddEntriesFrom(input, _repeated_participantId_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OTRModification : pb::IMessage<OTRModification> {
    private static readonly pb::MessageParser<OTRModification> _parser = new pb::MessageParser<OTRModification>(() => new OTRModification());
    public static pb::MessageParser<OTRModification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[23]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public OTRModification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public OTRModification(OTRModification other) : this() {
      oldOtrStatus_ = other.oldOtrStatus_;
      newOtrStatus_ = other.newOtrStatus_;
      oldOtrToggle_ = other.oldOtrToggle_;
      newOtrToggle_ = other.newOtrToggle_;
    }

    public OTRModification Clone() {
      return new OTRModification(this);
    }

    /// <summary>Field number for the "old_otr_status" field.</summary>
    public const int OldOtrStatusFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus oldOtrStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus OldOtrStatus {
      get { return oldOtrStatus_; }
      set {
        oldOtrStatus_ = value;
      }
    }

    /// <summary>Field number for the "new_otr_status" field.</summary>
    public const int NewOtrStatusFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus newOtrStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus NewOtrStatus {
      get { return newOtrStatus_; }
      set {
        newOtrStatus_ = value;
      }
    }

    /// <summary>Field number for the "old_otr_toggle" field.</summary>
    public const int OldOtrToggleFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle oldOtrToggle_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle OldOtrToggle {
      get { return oldOtrToggle_; }
      set {
        oldOtrToggle_ = value;
      }
    }

    /// <summary>Field number for the "new_otr_toggle" field.</summary>
    public const int NewOtrToggleFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle newOtrToggle_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle NewOtrToggle {
      get { return newOtrToggle_; }
      set {
        newOtrToggle_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as OTRModification);
    }

    public bool Equals(OTRModification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldOtrStatus != other.OldOtrStatus) return false;
      if (NewOtrStatus != other.NewOtrStatus) return false;
      if (OldOtrToggle != other.OldOtrToggle) return false;
      if (NewOtrToggle != other.NewOtrToggle) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (OldOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) hash ^= OldOtrStatus.GetHashCode();
      if (NewOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) hash ^= NewOtrStatus.GetHashCode();
      if (OldOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) hash ^= OldOtrToggle.GetHashCode();
      if (NewOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) hash ^= NewOtrToggle.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (OldOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OldOtrStatus);
      }
      if (NewOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NewOtrStatus);
      }
      if (OldOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OldOtrToggle);
      }
      if (NewOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        output.WriteRawTag(32);
        output.WriteEnum((int) NewOtrToggle);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (OldOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OldOtrStatus);
      }
      if (NewOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NewOtrStatus);
      }
      if (OldOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OldOtrToggle);
      }
      if (NewOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NewOtrToggle);
      }
      return size;
    }

    public void MergeFrom(OTRModification other) {
      if (other == null) {
        return;
      }
      if (other.OldOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        OldOtrStatus = other.OldOtrStatus;
      }
      if (other.NewOtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        NewOtrStatus = other.NewOtrStatus;
      }
      if (other.OldOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        OldOtrToggle = other.OldOtrToggle;
      }
      if (other.NewOtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        NewOtrToggle = other.NewOtrToggle;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            oldOtrStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus) input.ReadEnum();
            break;
          }
          case 16: {
            newOtrStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus) input.ReadEnum();
            break;
          }
          case 24: {
            oldOtrToggle_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle) input.ReadEnum();
            break;
          }
          case 32: {
            newOtrToggle_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HashModifier : pb::IMessage<HashModifier> {
    private static readonly pb::MessageParser<HashModifier> _parser = new pb::MessageParser<HashModifier>(() => new HashModifier());
    public static pb::MessageParser<HashModifier> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[24]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public HashModifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    public HashModifier(HashModifier other) : this() {
      updateId_ = other.updateId_;
      hashDiff_ = other.hashDiff_;
      version_ = other.version_;
    }

    public HashModifier Clone() {
      return new HashModifier(this);
    }

    /// <summary>Field number for the "update_id" field.</summary>
    public const int UpdateIdFieldNumber = 1;
    private string updateId_ = "";
    public string UpdateId {
      get { return updateId_; }
      set {
        updateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash_diff" field.</summary>
    public const int HashDiffFieldNumber = 2;
    private ulong hashDiff_;
    public ulong HashDiff {
      get { return hashDiff_; }
      set {
        hashDiff_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private ulong version_;
    public ulong Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as HashModifier);
    }

    public bool Equals(HashModifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UpdateId != other.UpdateId) return false;
      if (HashDiff != other.HashDiff) return false;
      if (Version != other.Version) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (UpdateId.Length != 0) hash ^= UpdateId.GetHashCode();
      if (HashDiff != 0UL) hash ^= HashDiff.GetHashCode();
      if (Version != 0UL) hash ^= Version.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (UpdateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UpdateId);
      }
      if (HashDiff != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(HashDiff);
      }
      if (Version != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Version);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (UpdateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdateId);
      }
      if (HashDiff != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HashDiff);
      }
      if (Version != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Version);
      }
      return size;
    }

    public void MergeFrom(HashModifier other) {
      if (other == null) {
        return;
      }
      if (other.UpdateId.Length != 0) {
        UpdateId = other.UpdateId;
      }
      if (other.HashDiff != 0UL) {
        HashDiff = other.HashDiff;
      }
      if (other.Version != 0UL) {
        Version = other.Version;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UpdateId = input.ReadString();
            break;
          }
          case 16: {
            HashDiff = input.ReadUInt64();
            break;
          }
          case 32: {
            Version = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Event that becomes part of a conversation's history.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[25]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Event(Event other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      SenderId = other.senderId_ != null ? other.SenderId.Clone() : null;
      timestamp_ = other.timestamp_;
      SelfEventState = other.selfEventState_ != null ? other.SelfEventState.Clone() : null;
      sourceType_ = other.sourceType_;
      ChatMessage = other.chatMessage_ != null ? other.ChatMessage.Clone() : null;
      MembershipChange = other.membershipChange_ != null ? other.MembershipChange.Clone() : null;
      ConversationRename = other.conversationRename_ != null ? other.ConversationRename.Clone() : null;
      HangoutEvent = other.hangoutEvent_ != null ? other.HangoutEvent.Clone() : null;
      eventId_ = other.eventId_;
      expirationTimestamp_ = other.expirationTimestamp_;
      OtrModification = other.otrModification_ != null ? other.OtrModification.Clone() : null;
      advancesSortTimestamp_ = other.advancesSortTimestamp_;
      otrStatus_ = other.otrStatus_;
      persisted_ = other.persisted_;
      MediumType = other.mediumType_ != null ? other.MediumType.Clone() : null;
      eventType_ = other.eventType_;
      eventVersion_ = other.eventVersion_;
      HashModifier = other.hashModifier_ != null ? other.HashModifier.Clone() : null;
    }

    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    /// <summary>
    ///  ID of the conversation this event belongs to.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId senderId_;
    /// <summary>
    ///  ID of the user that sent this event.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    /// <summary>
    ///  Timestamp when the event occurred.
    /// </summary>
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "self_event_state" field.</summary>
    public const int SelfEventStateFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.UserEventState selfEventState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.UserEventState SelfEventState {
      get { return selfEventState_; }
      set {
        selfEventState_ = value;
      }
    }

    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SourceType sourceType_ = global::Netfox.Snoopers.SnooperHangouts.Models.SourceType.SOURCE_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SourceType SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "chat_message" field.</summary>
    public const int ChatMessageFieldNumber = 7;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ChatMessage chatMessage_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ChatMessage ChatMessage {
      get { return chatMessage_; }
      set {
        chatMessage_ = value;
      }
    }

    /// <summary>Field number for the "membership_change" field.</summary>
    public const int MembershipChangeFieldNumber = 9;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChange membershipChange_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChange MembershipChange {
      get { return membershipChange_; }
      set {
        membershipChange_ = value;
      }
    }

    /// <summary>Field number for the "conversation_rename" field.</summary>
    public const int ConversationRenameFieldNumber = 10;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationRename conversationRename_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationRename ConversationRename {
      get { return conversationRename_; }
      set {
        conversationRename_ = value;
      }
    }

    /// <summary>Field number for the "hangout_event" field.</summary>
    public const int HangoutEventFieldNumber = 11;
    private global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEvent hangoutEvent_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEvent HangoutEvent {
      get { return hangoutEvent_; }
      set {
        hangoutEvent_ = value;
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 12;
    private string eventId_ = "";
    /// <summary>
    ///  Unique ID for the event.
    /// </summary>
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiration_timestamp" field.</summary>
    public const int ExpirationTimestampFieldNumber = 13;
    private ulong expirationTimestamp_;
    public ulong ExpirationTimestamp {
      get { return expirationTimestamp_; }
      set {
        expirationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "otr_modification" field.</summary>
    public const int OtrModificationFieldNumber = 14;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OTRModification otrModification_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OTRModification OtrModification {
      get { return otrModification_; }
      set {
        otrModification_ = value;
      }
    }

    /// <summary>Field number for the "advances_sort_timestamp" field.</summary>
    public const int AdvancesSortTimestampFieldNumber = 15;
    private bool advancesSortTimestamp_;
    public bool AdvancesSortTimestamp {
      get { return advancesSortTimestamp_; }
      set {
        advancesSortTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "otr_status" field.</summary>
    public const int OtrStatusFieldNumber = 16;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus otrStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus OtrStatus {
      get { return otrStatus_; }
      set {
        otrStatus_ = value;
      }
    }

    /// <summary>Field number for the "persisted" field.</summary>
    public const int PersistedFieldNumber = 17;
    private bool persisted_;
    public bool Persisted {
      get { return persisted_; }
      set {
        persisted_ = value;
      }
    }

    /// <summary>Field number for the "medium_type" field.</summary>
    public const int MediumTypeFieldNumber = 20;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium mediumType_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium MediumType {
      get { return mediumType_; }
      set {
        mediumType_ = value;
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 23;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventType eventType_ = global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN;
    /// <summary>
    ///  The event's type.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "event_version" field.</summary>
    public const int EventVersionFieldNumber = 24;
    private ulong eventVersion_;
    /// <summary>
    ///  Event version timestamp.
    /// </summary>
    public ulong EventVersion {
      get { return eventVersion_; }
      set {
        eventVersion_ = value;
      }
    }

    /// <summary>Field number for the "hash_modifier" field.</summary>
    public const int HashModifierFieldNumber = 26;
    private global::Netfox.Snoopers.SnooperHangouts.Models.HashModifier hashModifier_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.HashModifier HashModifier {
      get { return hashModifier_; }
      set {
        hashModifier_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (!object.Equals(SenderId, other.SenderId)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(SelfEventState, other.SelfEventState)) return false;
      if (SourceType != other.SourceType) return false;
      if (!object.Equals(ChatMessage, other.ChatMessage)) return false;
      if (!object.Equals(MembershipChange, other.MembershipChange)) return false;
      if (!object.Equals(ConversationRename, other.ConversationRename)) return false;
      if (!object.Equals(HangoutEvent, other.HangoutEvent)) return false;
      if (EventId != other.EventId) return false;
      if (ExpirationTimestamp != other.ExpirationTimestamp) return false;
      if (!object.Equals(OtrModification, other.OtrModification)) return false;
      if (AdvancesSortTimestamp != other.AdvancesSortTimestamp) return false;
      if (OtrStatus != other.OtrStatus) return false;
      if (Persisted != other.Persisted) return false;
      if (!object.Equals(MediumType, other.MediumType)) return false;
      if (EventType != other.EventType) return false;
      if (EventVersion != other.EventVersion) return false;
      if (!object.Equals(HashModifier, other.HashModifier)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (selfEventState_ != null) hash ^= SelfEventState.GetHashCode();
      if (SourceType != global::Netfox.Snoopers.SnooperHangouts.Models.SourceType.SOURCE_TYPE_UNKNOWN) hash ^= SourceType.GetHashCode();
      if (chatMessage_ != null) hash ^= ChatMessage.GetHashCode();
      if (membershipChange_ != null) hash ^= MembershipChange.GetHashCode();
      if (conversationRename_ != null) hash ^= ConversationRename.GetHashCode();
      if (hangoutEvent_ != null) hash ^= HangoutEvent.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (ExpirationTimestamp != 0UL) hash ^= ExpirationTimestamp.GetHashCode();
      if (otrModification_ != null) hash ^= OtrModification.GetHashCode();
      if (AdvancesSortTimestamp != false) hash ^= AdvancesSortTimestamp.GetHashCode();
      if (OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) hash ^= OtrStatus.GetHashCode();
      if (Persisted != false) hash ^= Persisted.GetHashCode();
      if (mediumType_ != null) hash ^= MediumType.GetHashCode();
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) hash ^= EventType.GetHashCode();
      if (EventVersion != 0UL) hash ^= EventVersion.GetHashCode();
      if (hashModifier_ != null) hash ^= HashModifier.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (senderId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SenderId);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (selfEventState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SelfEventState);
      }
      if (SourceType != global::Netfox.Snoopers.SnooperHangouts.Models.SourceType.SOURCE_TYPE_UNKNOWN) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SourceType);
      }
      if (chatMessage_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ChatMessage);
      }
      if (membershipChange_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MembershipChange);
      }
      if (conversationRename_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ConversationRename);
      }
      if (hangoutEvent_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(HangoutEvent);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(EventId);
      }
      if (ExpirationTimestamp != 0UL) {
        output.WriteRawTag(104);
        output.WriteUInt64(ExpirationTimestamp);
      }
      if (otrModification_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(OtrModification);
      }
      if (AdvancesSortTimestamp != false) {
        output.WriteRawTag(120);
        output.WriteBool(AdvancesSortTimestamp);
      }
      if (OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) OtrStatus);
      }
      if (Persisted != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Persisted);
      }
      if (mediumType_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(MediumType);
      }
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) EventType);
      }
      if (EventVersion != 0UL) {
        output.WriteRawTag(192, 1);
        output.WriteUInt64(EventVersion);
      }
      if (hashModifier_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(HashModifier);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (senderId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderId);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (selfEventState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfEventState);
      }
      if (SourceType != global::Netfox.Snoopers.SnooperHangouts.Models.SourceType.SOURCE_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      if (chatMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMessage);
      }
      if (membershipChange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MembershipChange);
      }
      if (conversationRename_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationRename);
      }
      if (hangoutEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HangoutEvent);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (ExpirationTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpirationTimestamp);
      }
      if (otrModification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtrModification);
      }
      if (AdvancesSortTimestamp != false) {
        size += 1 + 1;
      }
      if (OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OtrStatus);
      }
      if (Persisted != false) {
        size += 2 + 1;
      }
      if (mediumType_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MediumType);
      }
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (EventVersion != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(EventVersion);
      }
      if (hashModifier_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HashModifier);
      }
      return size;
    }

    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.senderId_ != null) {
        if (senderId_ == null) {
          senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        SenderId.MergeFrom(other.SenderId);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.selfEventState_ != null) {
        if (selfEventState_ == null) {
          selfEventState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.UserEventState();
        }
        SelfEventState.MergeFrom(other.SelfEventState);
      }
      if (other.SourceType != global::Netfox.Snoopers.SnooperHangouts.Models.SourceType.SOURCE_TYPE_UNKNOWN) {
        SourceType = other.SourceType;
      }
      if (other.chatMessage_ != null) {
        if (chatMessage_ == null) {
          chatMessage_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ChatMessage();
        }
        ChatMessage.MergeFrom(other.ChatMessage);
      }
      if (other.membershipChange_ != null) {
        if (membershipChange_ == null) {
          membershipChange_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChange();
        }
        MembershipChange.MergeFrom(other.MembershipChange);
      }
      if (other.conversationRename_ != null) {
        if (conversationRename_ == null) {
          conversationRename_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationRename();
        }
        ConversationRename.MergeFrom(other.ConversationRename);
      }
      if (other.hangoutEvent_ != null) {
        if (hangoutEvent_ == null) {
          hangoutEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEvent();
        }
        HangoutEvent.MergeFrom(other.HangoutEvent);
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.ExpirationTimestamp != 0UL) {
        ExpirationTimestamp = other.ExpirationTimestamp;
      }
      if (other.otrModification_ != null) {
        if (otrModification_ == null) {
          otrModification_ = new global::Netfox.Snoopers.SnooperHangouts.Models.OTRModification();
        }
        OtrModification.MergeFrom(other.OtrModification);
      }
      if (other.AdvancesSortTimestamp != false) {
        AdvancesSortTimestamp = other.AdvancesSortTimestamp;
      }
      if (other.OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        OtrStatus = other.OtrStatus;
      }
      if (other.Persisted != false) {
        Persisted = other.Persisted;
      }
      if (other.mediumType_ != null) {
        if (mediumType_ == null) {
          mediumType_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium();
        }
        MediumType.MergeFrom(other.MediumType);
      }
      if (other.EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) {
        EventType = other.EventType;
      }
      if (other.EventVersion != 0UL) {
        EventVersion = other.EventVersion;
      }
      if (other.hashModifier_ != null) {
        if (hashModifier_ == null) {
          hashModifier_ = new global::Netfox.Snoopers.SnooperHangouts.Models.HashModifier();
        }
        HashModifier.MergeFrom(other.HashModifier);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 18: {
            if (senderId_ == null) {
              senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(senderId_);
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            if (selfEventState_ == null) {
              selfEventState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.UserEventState();
            }
            input.ReadMessage(selfEventState_);
            break;
          }
          case 48: {
            sourceType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.SourceType) input.ReadEnum();
            break;
          }
          case 58: {
            if (chatMessage_ == null) {
              chatMessage_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ChatMessage();
            }
            input.ReadMessage(chatMessage_);
            break;
          }
          case 74: {
            if (membershipChange_ == null) {
              membershipChange_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MembershipChange();
            }
            input.ReadMessage(membershipChange_);
            break;
          }
          case 82: {
            if (conversationRename_ == null) {
              conversationRename_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationRename();
            }
            input.ReadMessage(conversationRename_);
            break;
          }
          case 90: {
            if (hangoutEvent_ == null) {
              hangoutEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.HangoutEvent();
            }
            input.ReadMessage(hangoutEvent_);
            break;
          }
          case 98: {
            EventId = input.ReadString();
            break;
          }
          case 104: {
            ExpirationTimestamp = input.ReadUInt64();
            break;
          }
          case 114: {
            if (otrModification_ == null) {
              otrModification_ = new global::Netfox.Snoopers.SnooperHangouts.Models.OTRModification();
            }
            input.ReadMessage(otrModification_);
            break;
          }
          case 120: {
            AdvancesSortTimestamp = input.ReadBool();
            break;
          }
          case 128: {
            otrStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus) input.ReadEnum();
            break;
          }
          case 136: {
            Persisted = input.ReadBool();
            break;
          }
          case 162: {
            if (mediumType_ == null) {
              mediumType_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium();
            }
            input.ReadMessage(mediumType_);
            break;
          }
          case 184: {
            eventType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.EventType) input.ReadEnum();
            break;
          }
          case 192: {
            EventVersion = input.ReadUInt64();
            break;
          }
          case 210: {
            if (hashModifier_ == null) {
              hashModifier_ = new global::Netfox.Snoopers.SnooperHangouts.Models.HashModifier();
            }
            input.ReadMessage(hashModifier_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserReadState : pb::IMessage<UserReadState> {
    private static readonly pb::MessageParser<UserReadState> _parser = new pb::MessageParser<UserReadState>(() => new UserReadState());
    public static pb::MessageParser<UserReadState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[26]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UserReadState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UserReadState(UserReadState other) : this() {
      ParticipantId = other.participantId_ != null ? other.ParticipantId.Clone() : null;
      latestReadTimestamp_ = other.latestReadTimestamp_;
    }

    public UserReadState Clone() {
      return new UserReadState(this);
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId participantId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId ParticipantId {
      get { return participantId_; }
      set {
        participantId_ = value;
      }
    }

    /// <summary>Field number for the "latest_read_timestamp" field.</summary>
    public const int LatestReadTimestampFieldNumber = 2;
    private ulong latestReadTimestamp_;
    public ulong LatestReadTimestamp {
      get { return latestReadTimestamp_; }
      set {
        latestReadTimestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UserReadState);
    }

    public bool Equals(UserReadState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ParticipantId, other.ParticipantId)) return false;
      if (LatestReadTimestamp != other.LatestReadTimestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (participantId_ != null) hash ^= ParticipantId.GetHashCode();
      if (LatestReadTimestamp != 0UL) hash ^= LatestReadTimestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (participantId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ParticipantId);
      }
      if (LatestReadTimestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(LatestReadTimestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (participantId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParticipantId);
      }
      if (LatestReadTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LatestReadTimestamp);
      }
      return size;
    }

    public void MergeFrom(UserReadState other) {
      if (other == null) {
        return;
      }
      if (other.participantId_ != null) {
        if (participantId_ == null) {
          participantId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        ParticipantId.MergeFrom(other.ParticipantId);
      }
      if (other.LatestReadTimestamp != 0UL) {
        LatestReadTimestamp = other.LatestReadTimestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (participantId_ == null) {
              participantId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(participantId_);
            break;
          }
          case 16: {
            LatestReadTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeliveryMedium : pb::IMessage<DeliveryMedium> {
    private static readonly pb::MessageParser<DeliveryMedium> _parser = new pb::MessageParser<DeliveryMedium>(() => new DeliveryMedium());
    public static pb::MessageParser<DeliveryMedium> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[27]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeliveryMedium() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeliveryMedium(DeliveryMedium other) : this() {
      mediumType_ = other.mediumType_;
      PhoneNumber = other.phoneNumber_ != null ? other.PhoneNumber.Clone() : null;
    }

    public DeliveryMedium Clone() {
      return new DeliveryMedium(this);
    }

    /// <summary>Field number for the "medium_type" field.</summary>
    public const int MediumTypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType mediumType_ = global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType.DELIVERY_MEDIUM_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType MediumType {
      get { return mediumType_; }
      set {
        mediumType_ = value;
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber phoneNumber_;
    /// <summary>
    ///  Phone number to use for sending Google Voice messages.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeliveryMedium);
    }

    public bool Equals(DeliveryMedium other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MediumType != other.MediumType) return false;
      if (!object.Equals(PhoneNumber, other.PhoneNumber)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (MediumType != global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType.DELIVERY_MEDIUM_UNKNOWN) hash ^= MediumType.GetHashCode();
      if (phoneNumber_ != null) hash ^= PhoneNumber.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (MediumType != global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType.DELIVERY_MEDIUM_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MediumType);
      }
      if (phoneNumber_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PhoneNumber);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (MediumType != global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType.DELIVERY_MEDIUM_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MediumType);
      }
      if (phoneNumber_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhoneNumber);
      }
      return size;
    }

    public void MergeFrom(DeliveryMedium other) {
      if (other == null) {
        return;
      }
      if (other.MediumType != global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType.DELIVERY_MEDIUM_UNKNOWN) {
        MediumType = other.MediumType;
      }
      if (other.phoneNumber_ != null) {
        if (phoneNumber_ == null) {
          phoneNumber_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber();
        }
        PhoneNumber.MergeFrom(other.PhoneNumber);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            mediumType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumType) input.ReadEnum();
            break;
          }
          case 18: {
            if (phoneNumber_ == null) {
              phoneNumber_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber();
            }
            input.ReadMessage(phoneNumber_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeliveryMediumOption : pb::IMessage<DeliveryMediumOption> {
    private static readonly pb::MessageParser<DeliveryMediumOption> _parser = new pb::MessageParser<DeliveryMediumOption>(() => new DeliveryMediumOption());
    public static pb::MessageParser<DeliveryMediumOption> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[28]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeliveryMediumOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeliveryMediumOption(DeliveryMediumOption other) : this() {
      DeliveryMedium = other.deliveryMedium_ != null ? other.DeliveryMedium.Clone() : null;
      currentDefault_ = other.currentDefault_;
    }

    public DeliveryMediumOption Clone() {
      return new DeliveryMediumOption(this);
    }

    /// <summary>Field number for the "delivery_medium" field.</summary>
    public const int DeliveryMediumFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium deliveryMedium_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium DeliveryMedium {
      get { return deliveryMedium_; }
      set {
        deliveryMedium_ = value;
      }
    }

    /// <summary>Field number for the "current_default" field.</summary>
    public const int CurrentDefaultFieldNumber = 2;
    private bool currentDefault_;
    public bool CurrentDefault {
      get { return currentDefault_; }
      set {
        currentDefault_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeliveryMediumOption);
    }

    public bool Equals(DeliveryMediumOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeliveryMedium, other.DeliveryMedium)) return false;
      if (CurrentDefault != other.CurrentDefault) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (deliveryMedium_ != null) hash ^= DeliveryMedium.GetHashCode();
      if (CurrentDefault != false) hash ^= CurrentDefault.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (deliveryMedium_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeliveryMedium);
      }
      if (CurrentDefault != false) {
        output.WriteRawTag(16);
        output.WriteBool(CurrentDefault);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (deliveryMedium_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeliveryMedium);
      }
      if (CurrentDefault != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(DeliveryMediumOption other) {
      if (other == null) {
        return;
      }
      if (other.deliveryMedium_ != null) {
        if (deliveryMedium_ == null) {
          deliveryMedium_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium();
        }
        DeliveryMedium.MergeFrom(other.DeliveryMedium);
      }
      if (other.CurrentDefault != false) {
        CurrentDefault = other.CurrentDefault;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (deliveryMedium_ == null) {
              deliveryMedium_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium();
            }
            input.ReadMessage(deliveryMedium_);
            break;
          }
          case 16: {
            CurrentDefault = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserConversationState : pb::IMessage<UserConversationState> {
    private static readonly pb::MessageParser<UserConversationState> _parser = new pb::MessageParser<UserConversationState>(() => new UserConversationState());
    public static pb::MessageParser<UserConversationState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[29]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UserConversationState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UserConversationState(UserConversationState other) : this() {
      clientGeneratedId_ = other.clientGeneratedId_;
      SelfReadState = other.selfReadState_ != null ? other.SelfReadState.Clone() : null;
      status_ = other.status_;
      notificationLevel_ = other.notificationLevel_;
      view_ = other.view_.Clone();
      InviterId = other.inviterId_ != null ? other.InviterId.Clone() : null;
      inviteTimestamp_ = other.inviteTimestamp_;
      sortTimestamp_ = other.sortTimestamp_;
      activeTimestamp_ = other.activeTimestamp_;
      inviteAffinity_ = other.inviteAffinity_;
      deliveryMediumOption_ = other.deliveryMediumOption_.Clone();
    }

    public UserConversationState Clone() {
      return new UserConversationState(this);
    }

    /// <summary>Field number for the "client_generated_id" field.</summary>
    public const int ClientGeneratedIdFieldNumber = 2;
    private string clientGeneratedId_ = "";
    public string ClientGeneratedId {
      get { return clientGeneratedId_; }
      set {
        clientGeneratedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "self_read_state" field.</summary>
    public const int SelfReadStateFieldNumber = 7;
    private global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState selfReadState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState SelfReadState {
      get { return selfReadState_; }
      set {
        selfReadState_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus status_ = global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus.CONVERSATION_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "notification_level" field.</summary>
    public const int NotificationLevelFieldNumber = 9;
    private global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel notificationLevel_ = global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel NotificationLevel {
      get { return notificationLevel_; }
      set {
        notificationLevel_ = value;
      }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView> _repeated_view_codec
        = pb::FieldCodec.ForEnum(82, x => (int) x, x => (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView) x);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView> view_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView> View {
      get { return view_; }
    }

    /// <summary>Field number for the "inviter_id" field.</summary>
    public const int InviterIdFieldNumber = 11;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId inviterId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId InviterId {
      get { return inviterId_; }
      set {
        inviterId_ = value;
      }
    }

    /// <summary>Field number for the "invite_timestamp" field.</summary>
    public const int InviteTimestampFieldNumber = 12;
    private ulong inviteTimestamp_;
    public ulong InviteTimestamp {
      get { return inviteTimestamp_; }
      set {
        inviteTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "sort_timestamp" field.</summary>
    public const int SortTimestampFieldNumber = 13;
    private ulong sortTimestamp_;
    public ulong SortTimestamp {
      get { return sortTimestamp_; }
      set {
        sortTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "active_timestamp" field.</summary>
    public const int ActiveTimestampFieldNumber = 14;
    private ulong activeTimestamp_;
    public ulong ActiveTimestamp {
      get { return activeTimestamp_; }
      set {
        activeTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "invite_affinity" field.</summary>
    public const int InviteAffinityFieldNumber = 15;
    private global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity inviteAffinity_ = global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity.INVITE_AFFINITY_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity InviteAffinity {
      get { return inviteAffinity_; }
      set {
        inviteAffinity_ = value;
      }
    }

    /// <summary>Field number for the "delivery_medium_option" field.</summary>
    public const int DeliveryMediumOptionFieldNumber = 17;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumOption> _repeated_deliveryMediumOption_codec
        = pb::FieldCodec.ForMessage(138, global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumOption.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumOption> deliveryMediumOption_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumOption>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMediumOption> DeliveryMediumOption {
      get { return deliveryMediumOption_; }
    }

    public override bool Equals(object other) {
      return Equals(other as UserConversationState);
    }

    public bool Equals(UserConversationState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientGeneratedId != other.ClientGeneratedId) return false;
      if (!object.Equals(SelfReadState, other.SelfReadState)) return false;
      if (Status != other.Status) return false;
      if (NotificationLevel != other.NotificationLevel) return false;
      if(!view_.Equals(other.view_)) return false;
      if (!object.Equals(InviterId, other.InviterId)) return false;
      if (InviteTimestamp != other.InviteTimestamp) return false;
      if (SortTimestamp != other.SortTimestamp) return false;
      if (ActiveTimestamp != other.ActiveTimestamp) return false;
      if (InviteAffinity != other.InviteAffinity) return false;
      if(!deliveryMediumOption_.Equals(other.deliveryMediumOption_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ClientGeneratedId.Length != 0) hash ^= ClientGeneratedId.GetHashCode();
      if (selfReadState_ != null) hash ^= SelfReadState.GetHashCode();
      if (Status != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus.CONVERSATION_STATUS_UNKNOWN) hash ^= Status.GetHashCode();
      if (NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) hash ^= NotificationLevel.GetHashCode();
      hash ^= view_.GetHashCode();
      if (inviterId_ != null) hash ^= InviterId.GetHashCode();
      if (InviteTimestamp != 0UL) hash ^= InviteTimestamp.GetHashCode();
      if (SortTimestamp != 0UL) hash ^= SortTimestamp.GetHashCode();
      if (ActiveTimestamp != 0UL) hash ^= ActiveTimestamp.GetHashCode();
      if (InviteAffinity != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity.INVITE_AFFINITY_UNKNOWN) hash ^= InviteAffinity.GetHashCode();
      hash ^= deliveryMediumOption_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientGeneratedId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientGeneratedId);
      }
      if (selfReadState_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SelfReadState);
      }
      if (Status != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus.CONVERSATION_STATUS_UNKNOWN) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        output.WriteRawTag(72);
        output.WriteEnum((int) NotificationLevel);
      }
      view_.WriteTo(output, _repeated_view_codec);
      if (inviterId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(InviterId);
      }
      if (InviteTimestamp != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(InviteTimestamp);
      }
      if (SortTimestamp != 0UL) {
        output.WriteRawTag(104);
        output.WriteUInt64(SortTimestamp);
      }
      if (ActiveTimestamp != 0UL) {
        output.WriteRawTag(112);
        output.WriteUInt64(ActiveTimestamp);
      }
      if (InviteAffinity != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity.INVITE_AFFINITY_UNKNOWN) {
        output.WriteRawTag(120);
        output.WriteEnum((int) InviteAffinity);
      }
      deliveryMediumOption_.WriteTo(output, _repeated_deliveryMediumOption_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (ClientGeneratedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientGeneratedId);
      }
      if (selfReadState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfReadState);
      }
      if (Status != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus.CONVERSATION_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationLevel);
      }
      size += view_.CalculateSize(_repeated_view_codec);
      if (inviterId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InviterId);
      }
      if (InviteTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InviteTimestamp);
      }
      if (SortTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SortTimestamp);
      }
      if (ActiveTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ActiveTimestamp);
      }
      if (InviteAffinity != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity.INVITE_AFFINITY_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InviteAffinity);
      }
      size += deliveryMediumOption_.CalculateSize(_repeated_deliveryMediumOption_codec);
      return size;
    }

    public void MergeFrom(UserConversationState other) {
      if (other == null) {
        return;
      }
      if (other.ClientGeneratedId.Length != 0) {
        ClientGeneratedId = other.ClientGeneratedId;
      }
      if (other.selfReadState_ != null) {
        if (selfReadState_ == null) {
          selfReadState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState();
        }
        SelfReadState.MergeFrom(other.SelfReadState);
      }
      if (other.Status != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus.CONVERSATION_STATUS_UNKNOWN) {
        Status = other.Status;
      }
      if (other.NotificationLevel != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        NotificationLevel = other.NotificationLevel;
      }
      view_.Add(other.view_);
      if (other.inviterId_ != null) {
        if (inviterId_ == null) {
          inviterId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        InviterId.MergeFrom(other.InviterId);
      }
      if (other.InviteTimestamp != 0UL) {
        InviteTimestamp = other.InviteTimestamp;
      }
      if (other.SortTimestamp != 0UL) {
        SortTimestamp = other.SortTimestamp;
      }
      if (other.ActiveTimestamp != 0UL) {
        ActiveTimestamp = other.ActiveTimestamp;
      }
      if (other.InviteAffinity != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity.INVITE_AFFINITY_UNKNOWN) {
        InviteAffinity = other.InviteAffinity;
      }
      deliveryMediumOption_.Add(other.deliveryMediumOption_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            ClientGeneratedId = input.ReadString();
            break;
          }
          case 58: {
            if (selfReadState_ == null) {
              selfReadState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState();
            }
            input.ReadMessage(selfReadState_);
            break;
          }
          case 64: {
            status_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationStatus) input.ReadEnum();
            break;
          }
          case 72: {
            notificationLevel_ = (global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel) input.ReadEnum();
            break;
          }
          case 82:
          case 80: {
            view_.AddEntriesFrom(input, _repeated_view_codec);
            break;
          }
          case 90: {
            if (inviterId_ == null) {
              inviterId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(inviterId_);
            break;
          }
          case 96: {
            InviteTimestamp = input.ReadUInt64();
            break;
          }
          case 104: {
            SortTimestamp = input.ReadUInt64();
            break;
          }
          case 112: {
            ActiveTimestamp = input.ReadUInt64();
            break;
          }
          case 120: {
            inviteAffinity_ = (global::Netfox.Snoopers.SnooperHangouts.Models.InvitationAffinity) input.ReadEnum();
            break;
          }
          case 138: {
            deliveryMediumOption_.AddEntriesFrom(input, _repeated_deliveryMediumOption_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationParticipantData : pb::IMessage<ConversationParticipantData> {
    private static readonly pb::MessageParser<ConversationParticipantData> _parser = new pb::MessageParser<ConversationParticipantData>(() => new ConversationParticipantData());
    public static pb::MessageParser<ConversationParticipantData> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[30]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConversationParticipantData() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConversationParticipantData(ConversationParticipantData other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      fallbackName_ = other.fallbackName_;
      invitationStatus_ = other.invitationStatus_;
      participantType_ = other.participantType_;
      newInvitationStatus_ = other.newInvitationStatus_;
    }

    public ConversationParticipantData Clone() {
      return new ConversationParticipantData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId id_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "fallback_name" field.</summary>
    public const int FallbackNameFieldNumber = 2;
    private string fallbackName_ = "";
    public string FallbackName {
      get { return fallbackName_; }
      set {
        fallbackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invitation_status" field.</summary>
    public const int InvitationStatusFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus invitationStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus InvitationStatus {
      get { return invitationStatus_; }
      set {
        invitationStatus_ = value;
      }
    }

    /// <summary>Field number for the "participant_type" field.</summary>
    public const int ParticipantTypeFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType participantType_ = global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType ParticipantType {
      get { return participantType_; }
      set {
        participantType_ = value;
      }
    }

    /// <summary>Field number for the "new_invitation_status" field.</summary>
    public const int NewInvitationStatusFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus newInvitationStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus NewInvitationStatus {
      get { return newInvitationStatus_; }
      set {
        newInvitationStatus_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConversationParticipantData);
    }

    public bool Equals(ConversationParticipantData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (FallbackName != other.FallbackName) return false;
      if (InvitationStatus != other.InvitationStatus) return false;
      if (ParticipantType != other.ParticipantType) return false;
      if (NewInvitationStatus != other.NewInvitationStatus) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (FallbackName.Length != 0) hash ^= FallbackName.GetHashCode();
      if (InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) hash ^= InvitationStatus.GetHashCode();
      if (ParticipantType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) hash ^= ParticipantType.GetHashCode();
      if (NewInvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) hash ^= NewInvitationStatus.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (FallbackName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FallbackName);
      }
      if (InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InvitationStatus);
      }
      if (ParticipantType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ParticipantType);
      }
      if (NewInvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        output.WriteRawTag(48);
        output.WriteEnum((int) NewInvitationStatus);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (FallbackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FallbackName);
      }
      if (InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvitationStatus);
      }
      if (ParticipantType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ParticipantType);
      }
      if (NewInvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NewInvitationStatus);
      }
      return size;
    }

    public void MergeFrom(ConversationParticipantData other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.FallbackName.Length != 0) {
        FallbackName = other.FallbackName;
      }
      if (other.InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        InvitationStatus = other.InvitationStatus;
      }
      if (other.ParticipantType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) {
        ParticipantType = other.ParticipantType;
      }
      if (other.NewInvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        NewInvitationStatus = other.NewInvitationStatus;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            FallbackName = input.ReadString();
            break;
          }
          case 24: {
            invitationStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus) input.ReadEnum();
            break;
          }
          case 40: {
            participantType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType) input.ReadEnum();
            break;
          }
          case 48: {
            newInvitationStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  A conversation between two or more users.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Conversation : pb::IMessage<Conversation> {
    private static readonly pb::MessageParser<Conversation> _parser = new pb::MessageParser<Conversation>(() => new Conversation());
    public static pb::MessageParser<Conversation> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[31]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Conversation() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Conversation(Conversation other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      type_ = other.type_;
      name_ = other.name_;
      SelfConversationState = other.selfConversationState_ != null ? other.SelfConversationState.Clone() : null;
      readState_ = other.readState_.Clone();
      hasActiveHangout_ = other.hasActiveHangout_;
      otrStatus_ = other.otrStatus_;
      otrToggle_ = other.otrToggle_;
      conversationHistorySupported_ = other.conversationHistorySupported_;
      currentParticipant_ = other.currentParticipant_.Clone();
      participantData_ = other.participantData_.Clone();
      networkType_ = other.networkType_.Clone();
      forceHistoryState_ = other.forceHistoryState_;
    }

    public Conversation Clone() {
      return new Conversation(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "self_conversation_state" field.</summary>
    public const int SelfConversationStateFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.UserConversationState selfConversationState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.UserConversationState SelfConversationState {
      get { return selfConversationState_; }
      set {
        selfConversationState_ = value;
      }
    }

    /// <summary>Field number for the "read_state" field.</summary>
    public const int ReadStateFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState> _repeated_readState_codec
        = pb::FieldCodec.ForMessage(66, global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState> readState_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.UserReadState> ReadState {
      get { return readState_; }
    }

    /// <summary>Field number for the "has_active_hangout" field.</summary>
    public const int HasActiveHangoutFieldNumber = 9;
    private bool hasActiveHangout_;
    /// <summary>
    ///  True if the conversation has an active Hangout.
    /// </summary>
    public bool HasActiveHangout {
      get { return hasActiveHangout_; }
      set {
        hasActiveHangout_ = value;
      }
    }

    /// <summary>Field number for the "otr_status" field.</summary>
    public const int OtrStatusFieldNumber = 10;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus otrStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    /// <summary>
    ///  The conversation's "off the record" status.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus OtrStatus {
      get { return otrStatus_; }
      set {
        otrStatus_ = value;
      }
    }

    /// <summary>Field number for the "otr_toggle" field.</summary>
    public const int OtrToggleFieldNumber = 11;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle otrToggle_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
    /// <summary>
    ///  Whether the OTR toggle is available to the user for this conversation.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle OtrToggle {
      get { return otrToggle_; }
      set {
        otrToggle_ = value;
      }
    }

    /// <summary>Field number for the "conversation_history_supported" field.</summary>
    public const int ConversationHistorySupportedFieldNumber = 12;
    private bool conversationHistorySupported_;
    public bool ConversationHistorySupported {
      get { return conversationHistorySupported_; }
      set {
        conversationHistorySupported_ = value;
      }
    }

    /// <summary>Field number for the "current_participant" field.</summary>
    public const int CurrentParticipantFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> _repeated_currentParticipant_codec
        = pb::FieldCodec.ForMessage(106, global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> currentParticipant_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> CurrentParticipant {
      get { return currentParticipant_; }
    }

    /// <summary>Field number for the "participant_data" field.</summary>
    public const int ParticipantDataFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationParticipantData> _repeated_participantData_codec
        = pb::FieldCodec.ForMessage(114, global::Netfox.Snoopers.SnooperHangouts.Models.ConversationParticipantData.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationParticipantData> participantData_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationParticipantData>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationParticipantData> ParticipantData {
      get { return participantData_; }
    }

    /// <summary>Field number for the "network_type" field.</summary>
    public const int NetworkTypeFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.NetworkType> _repeated_networkType_codec
        = pb::FieldCodec.ForEnum(146, x => (int) x, x => (global::Netfox.Snoopers.SnooperHangouts.Models.NetworkType) x);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.NetworkType> networkType_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.NetworkType>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.NetworkType> NetworkType {
      get { return networkType_; }
    }

    /// <summary>Field number for the "force_history_state" field.</summary>
    public const int ForceHistoryStateFieldNumber = 19;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory forceHistoryState_ = global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory.FORCE_HISTORY_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory ForceHistoryState {
      get { return forceHistoryState_; }
      set {
        forceHistoryState_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Conversation);
    }

    public bool Equals(Conversation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(SelfConversationState, other.SelfConversationState)) return false;
      if(!readState_.Equals(other.readState_)) return false;
      if (HasActiveHangout != other.HasActiveHangout) return false;
      if (OtrStatus != other.OtrStatus) return false;
      if (OtrToggle != other.OtrToggle) return false;
      if (ConversationHistorySupported != other.ConversationHistorySupported) return false;
      if(!currentParticipant_.Equals(other.currentParticipant_)) return false;
      if(!participantData_.Equals(other.participantData_)) return false;
      if(!networkType_.Equals(other.networkType_)) return false;
      if (ForceHistoryState != other.ForceHistoryState) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (selfConversationState_ != null) hash ^= SelfConversationState.GetHashCode();
      hash ^= readState_.GetHashCode();
      if (HasActiveHangout != false) hash ^= HasActiveHangout.GetHashCode();
      if (OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) hash ^= OtrStatus.GetHashCode();
      if (OtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) hash ^= OtrToggle.GetHashCode();
      if (ConversationHistorySupported != false) hash ^= ConversationHistorySupported.GetHashCode();
      hash ^= currentParticipant_.GetHashCode();
      hash ^= participantData_.GetHashCode();
      hash ^= networkType_.GetHashCode();
      if (ForceHistoryState != global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory.FORCE_HISTORY_UNKNOWN) hash ^= ForceHistoryState.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (selfConversationState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SelfConversationState);
      }
      readState_.WriteTo(output, _repeated_readState_codec);
      if (HasActiveHangout != false) {
        output.WriteRawTag(72);
        output.WriteBool(HasActiveHangout);
      }
      if (OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        output.WriteRawTag(80);
        output.WriteEnum((int) OtrStatus);
      }
      if (OtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        output.WriteRawTag(88);
        output.WriteEnum((int) OtrToggle);
      }
      if (ConversationHistorySupported != false) {
        output.WriteRawTag(96);
        output.WriteBool(ConversationHistorySupported);
      }
      currentParticipant_.WriteTo(output, _repeated_currentParticipant_codec);
      participantData_.WriteTo(output, _repeated_participantData_codec);
      networkType_.WriteTo(output, _repeated_networkType_codec);
      if (ForceHistoryState != global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory.FORCE_HISTORY_UNKNOWN) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) ForceHistoryState);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (selfConversationState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfConversationState);
      }
      size += readState_.CalculateSize(_repeated_readState_codec);
      if (HasActiveHangout != false) {
        size += 1 + 1;
      }
      if (OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OtrStatus);
      }
      if (OtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OtrToggle);
      }
      if (ConversationHistorySupported != false) {
        size += 1 + 1;
      }
      size += currentParticipant_.CalculateSize(_repeated_currentParticipant_codec);
      size += participantData_.CalculateSize(_repeated_participantData_codec);
      size += networkType_.CalculateSize(_repeated_networkType_codec);
      if (ForceHistoryState != global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory.FORCE_HISTORY_UNKNOWN) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ForceHistoryState);
      }
      return size;
    }

    public void MergeFrom(Conversation other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.selfConversationState_ != null) {
        if (selfConversationState_ == null) {
          selfConversationState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.UserConversationState();
        }
        SelfConversationState.MergeFrom(other.SelfConversationState);
      }
      readState_.Add(other.readState_);
      if (other.HasActiveHangout != false) {
        HasActiveHangout = other.HasActiveHangout;
      }
      if (other.OtrStatus != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        OtrStatus = other.OtrStatus;
      }
      if (other.OtrToggle != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN) {
        OtrToggle = other.OtrToggle;
      }
      if (other.ConversationHistorySupported != false) {
        ConversationHistorySupported = other.ConversationHistorySupported;
      }
      currentParticipant_.Add(other.currentParticipant_);
      participantData_.Add(other.participantData_);
      networkType_.Add(other.networkType_);
      if (other.ForceHistoryState != global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory.FORCE_HISTORY_UNKNOWN) {
        ForceHistoryState = other.ForceHistoryState;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 16: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType) input.ReadEnum();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            if (selfConversationState_ == null) {
              selfConversationState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.UserConversationState();
            }
            input.ReadMessage(selfConversationState_);
            break;
          }
          case 66: {
            readState_.AddEntriesFrom(input, _repeated_readState_codec);
            break;
          }
          case 72: {
            HasActiveHangout = input.ReadBool();
            break;
          }
          case 80: {
            otrStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus) input.ReadEnum();
            break;
          }
          case 88: {
            otrToggle_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordToggle) input.ReadEnum();
            break;
          }
          case 96: {
            ConversationHistorySupported = input.ReadBool();
            break;
          }
          case 106: {
            currentParticipant_.AddEntriesFrom(input, _repeated_currentParticipant_codec);
            break;
          }
          case 114: {
            participantData_.AddEntriesFrom(input, _repeated_participantData_codec);
            break;
          }
          case 146:
          case 144: {
            networkType_.AddEntriesFrom(input, _repeated_networkType_codec);
            break;
          }
          case 152: {
            forceHistoryState_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ForceHistory) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEgg : pb::IMessage<EasterEgg> {
    private static readonly pb::MessageParser<EasterEgg> _parser = new pb::MessageParser<EasterEgg>(() => new EasterEgg());
    public static pb::MessageParser<EasterEgg> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[32]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EasterEgg() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EasterEgg(EasterEgg other) : this() {
      message_ = other.message_;
    }

    public EasterEgg Clone() {
      return new EasterEgg(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EasterEgg);
    }

    public bool Equals(EasterEgg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    public void MergeFrom(EasterEgg other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BlockStateChange : pb::IMessage<BlockStateChange> {
    private static readonly pb::MessageParser<BlockStateChange> _parser = new pb::MessageParser<BlockStateChange>(() => new BlockStateChange());
    public static pb::MessageParser<BlockStateChange> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[33]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public BlockStateChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    public BlockStateChange(BlockStateChange other) : this() {
      ParticipantId = other.participantId_ != null ? other.ParticipantId.Clone() : null;
      newBlockState_ = other.newBlockState_;
    }

    public BlockStateChange Clone() {
      return new BlockStateChange(this);
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId participantId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId ParticipantId {
      get { return participantId_; }
      set {
        participantId_ = value;
      }
    }

    /// <summary>Field number for the "new_block_state" field.</summary>
    public const int NewBlockStateFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.BlockState newBlockState_ = global::Netfox.Snoopers.SnooperHangouts.Models.BlockState.BLOCK_STATE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.BlockState NewBlockState {
      get { return newBlockState_; }
      set {
        newBlockState_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as BlockStateChange);
    }

    public bool Equals(BlockStateChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ParticipantId, other.ParticipantId)) return false;
      if (NewBlockState != other.NewBlockState) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (participantId_ != null) hash ^= ParticipantId.GetHashCode();
      if (NewBlockState != global::Netfox.Snoopers.SnooperHangouts.Models.BlockState.BLOCK_STATE_UNKNOWN) hash ^= NewBlockState.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (participantId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ParticipantId);
      }
      if (NewBlockState != global::Netfox.Snoopers.SnooperHangouts.Models.BlockState.BLOCK_STATE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NewBlockState);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (participantId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParticipantId);
      }
      if (NewBlockState != global::Netfox.Snoopers.SnooperHangouts.Models.BlockState.BLOCK_STATE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NewBlockState);
      }
      return size;
    }

    public void MergeFrom(BlockStateChange other) {
      if (other == null) {
        return;
      }
      if (other.participantId_ != null) {
        if (participantId_ == null) {
          participantId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        ParticipantId.MergeFrom(other.ParticipantId);
      }
      if (other.NewBlockState != global::Netfox.Snoopers.SnooperHangouts.Models.BlockState.BLOCK_STATE_UNKNOWN) {
        NewBlockState = other.NewBlockState;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (participantId_ == null) {
              participantId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(participantId_);
            break;
          }
          case 16: {
            newBlockState_ = (global::Netfox.Snoopers.SnooperHangouts.Models.BlockState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Photo : pb::IMessage<Photo> {
    private static readonly pb::MessageParser<Photo> _parser = new pb::MessageParser<Photo>(() => new Photo());
    public static pb::MessageParser<Photo> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[34]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Photo() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Photo(Photo other) : this() {
      photoId_ = other.photoId_;
      deleteAlbumlessSourcePhoto_ = other.deleteAlbumlessSourcePhoto_;
      userId_ = other.userId_;
      isCustomUserId_ = other.isCustomUserId_;
    }

    public Photo Clone() {
      return new Photo(this);
    }

    /// <summary>Field number for the "photo_id" field.</summary>
    public const int PhotoIdFieldNumber = 1;
    private string photoId_ = "";
    /// <summary>
    ///  Picasa photo ID.
    /// </summary>
    public string PhotoId {
      get { return photoId_; }
      set {
        photoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "delete_albumless_source_photo" field.</summary>
    public const int DeleteAlbumlessSourcePhotoFieldNumber = 2;
    private bool deleteAlbumlessSourcePhoto_;
    public bool DeleteAlbumlessSourcePhoto {
      get { return deleteAlbumlessSourcePhoto_; }
      set {
        deleteAlbumlessSourcePhoto_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    /// <summary>
    ///  Picasa user ID needed for photos from other accounts (eg. stickers).
    /// </summary>
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_custom_user_id" field.</summary>
    public const int IsCustomUserIdFieldNumber = 4;
    private bool isCustomUserId_;
    /// <summary>
    ///  Must be true if user_id is specified.
    /// </summary>
    public bool IsCustomUserId {
      get { return isCustomUserId_; }
      set {
        isCustomUserId_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Photo);
    }

    public bool Equals(Photo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PhotoId != other.PhotoId) return false;
      if (DeleteAlbumlessSourcePhoto != other.DeleteAlbumlessSourcePhoto) return false;
      if (UserId != other.UserId) return false;
      if (IsCustomUserId != other.IsCustomUserId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (PhotoId.Length != 0) hash ^= PhotoId.GetHashCode();
      if (DeleteAlbumlessSourcePhoto != false) hash ^= DeleteAlbumlessSourcePhoto.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (IsCustomUserId != false) hash ^= IsCustomUserId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (PhotoId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PhotoId);
      }
      if (DeleteAlbumlessSourcePhoto != false) {
        output.WriteRawTag(16);
        output.WriteBool(DeleteAlbumlessSourcePhoto);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (IsCustomUserId != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCustomUserId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (PhotoId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhotoId);
      }
      if (DeleteAlbumlessSourcePhoto != false) {
        size += 1 + 1;
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (IsCustomUserId != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(Photo other) {
      if (other == null) {
        return;
      }
      if (other.PhotoId.Length != 0) {
        PhotoId = other.PhotoId;
      }
      if (other.DeleteAlbumlessSourcePhoto != false) {
        DeleteAlbumlessSourcePhoto = other.DeleteAlbumlessSourcePhoto;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.IsCustomUserId != false) {
        IsCustomUserId = other.IsCustomUserId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PhotoId = input.ReadString();
            break;
          }
          case 16: {
            DeleteAlbumlessSourcePhoto = input.ReadBool();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            IsCustomUserId = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExistingMedia : pb::IMessage<ExistingMedia> {
    private static readonly pb::MessageParser<ExistingMedia> _parser = new pb::MessageParser<ExistingMedia>(() => new ExistingMedia());
    public static pb::MessageParser<ExistingMedia> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[35]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ExistingMedia() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ExistingMedia(ExistingMedia other) : this() {
      Photo = other.photo_ != null ? other.Photo.Clone() : null;
    }

    public ExistingMedia Clone() {
      return new ExistingMedia(this);
    }

    /// <summary>Field number for the "photo" field.</summary>
    public const int PhotoFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Photo photo_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Photo Photo {
      get { return photo_; }
      set {
        photo_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ExistingMedia);
    }

    public bool Equals(ExistingMedia other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Photo, other.Photo)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (photo_ != null) hash ^= Photo.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (photo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Photo);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (photo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Photo);
      }
      return size;
    }

    public void MergeFrom(ExistingMedia other) {
      if (other == null) {
        return;
      }
      if (other.photo_ != null) {
        if (photo_ == null) {
          photo_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Photo();
        }
        Photo.MergeFrom(other.Photo);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (photo_ == null) {
              photo_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Photo();
            }
            input.ReadMessage(photo_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventRequestHeader : pb::IMessage<EventRequestHeader> {
    private static readonly pb::MessageParser<EventRequestHeader> _parser = new pb::MessageParser<EventRequestHeader>(() => new EventRequestHeader());
    public static pb::MessageParser<EventRequestHeader> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[36]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EventRequestHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EventRequestHeader(EventRequestHeader other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      clientGeneratedId_ = other.clientGeneratedId_;
      expectedOtr_ = other.expectedOtr_;
      DeliveryMedium = other.deliveryMedium_ != null ? other.DeliveryMedium.Clone() : null;
      eventType_ = other.eventType_;
    }

    public EventRequestHeader Clone() {
      return new EventRequestHeader(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "client_generated_id" field.</summary>
    public const int ClientGeneratedIdFieldNumber = 2;
    private ulong clientGeneratedId_;
    public ulong ClientGeneratedId {
      get { return clientGeneratedId_; }
      set {
        clientGeneratedId_ = value;
      }
    }

    /// <summary>Field number for the "expected_otr" field.</summary>
    public const int ExpectedOtrFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus expectedOtr_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus ExpectedOtr {
      get { return expectedOtr_; }
      set {
        expectedOtr_ = value;
      }
    }

    /// <summary>Field number for the "delivery_medium" field.</summary>
    public const int DeliveryMediumFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium deliveryMedium_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium DeliveryMedium {
      get { return deliveryMedium_; }
      set {
        deliveryMedium_ = value;
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventType eventType_ = global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EventRequestHeader);
    }

    public bool Equals(EventRequestHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (ClientGeneratedId != other.ClientGeneratedId) return false;
      if (ExpectedOtr != other.ExpectedOtr) return false;
      if (!object.Equals(DeliveryMedium, other.DeliveryMedium)) return false;
      if (EventType != other.EventType) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (ClientGeneratedId != 0UL) hash ^= ClientGeneratedId.GetHashCode();
      if (ExpectedOtr != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) hash ^= ExpectedOtr.GetHashCode();
      if (deliveryMedium_ != null) hash ^= DeliveryMedium.GetHashCode();
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) hash ^= EventType.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (ClientGeneratedId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClientGeneratedId);
      }
      if (ExpectedOtr != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ExpectedOtr);
      }
      if (deliveryMedium_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DeliveryMedium);
      }
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EventType);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (ClientGeneratedId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientGeneratedId);
      }
      if (ExpectedOtr != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExpectedOtr);
      }
      if (deliveryMedium_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeliveryMedium);
      }
      if (EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      return size;
    }

    public void MergeFrom(EventRequestHeader other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.ClientGeneratedId != 0UL) {
        ClientGeneratedId = other.ClientGeneratedId;
      }
      if (other.ExpectedOtr != global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN) {
        ExpectedOtr = other.ExpectedOtr;
      }
      if (other.deliveryMedium_ != null) {
        if (deliveryMedium_ == null) {
          deliveryMedium_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium();
        }
        DeliveryMedium.MergeFrom(other.DeliveryMedium);
      }
      if (other.EventType != global::Netfox.Snoopers.SnooperHangouts.Models.EventType.EVENT_TYPE_UNKNOWN) {
        EventType = other.EventType;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 16: {
            ClientGeneratedId = input.ReadUInt64();
            break;
          }
          case 24: {
            expectedOtr_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffTheRecordStatus) input.ReadEnum();
            break;
          }
          case 34: {
            if (deliveryMedium_ == null) {
              deliveryMedium_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeliveryMedium();
            }
            input.ReadMessage(deliveryMedium_);
            break;
          }
          case 40: {
            eventType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.EventType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  The client and device version.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientVersion : pb::IMessage<ClientVersion> {
    private static readonly pb::MessageParser<ClientVersion> _parser = new pb::MessageParser<ClientVersion>(() => new ClientVersion());
    public static pb::MessageParser<ClientVersion> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[37]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ClientVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ClientVersion(ClientVersion other) : this() {
      clientId_ = other.clientId_;
      buildType_ = other.buildType_;
      majorVersion_ = other.majorVersion_;
      versionTimestamp_ = other.versionTimestamp_;
      deviceOsVersion_ = other.deviceOsVersion_;
      deviceHardware_ = other.deviceHardware_;
    }

    public ClientVersion Clone() {
      return new ClientVersion(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientId clientId_ = global::Netfox.Snoopers.SnooperHangouts.Models.ClientId.CLIENT_ID_UNKNOWN;
    /// <summary>
    ///  Identifies the client.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientId ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "build_type" field.</summary>
    public const int BuildTypeFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType buildType_ = global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType.BUILD_TYPE_UNKNOWN;
    /// <summary>
    ///  The client build type.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType BuildType {
      get { return buildType_; }
      set {
        buildType_ = value;
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 3;
    private string majorVersion_ = "";
    /// <summary>
    ///  Client version.
    /// </summary>
    public string MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_timestamp" field.</summary>
    public const int VersionTimestampFieldNumber = 4;
    private ulong versionTimestamp_;
    /// <summary>
    ///  Client version timestamp.
    /// </summary>
    public ulong VersionTimestamp {
      get { return versionTimestamp_; }
      set {
        versionTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "device_os_version" field.</summary>
    public const int DeviceOsVersionFieldNumber = 5;
    private string deviceOsVersion_ = "";
    /// <summary>
    ///  OS version string (for native apps).
    /// </summary>
    public string DeviceOsVersion {
      get { return deviceOsVersion_; }
      set {
        deviceOsVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_hardware" field.</summary>
    public const int DeviceHardwareFieldNumber = 6;
    private string deviceHardware_ = "";
    /// <summary>
    ///  Device hardware name (for native apps).
    /// </summary>
    public string DeviceHardware {
      get { return deviceHardware_; }
      set {
        deviceHardware_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ClientVersion);
    }

    public bool Equals(ClientVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (BuildType != other.BuildType) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (VersionTimestamp != other.VersionTimestamp) return false;
      if (DeviceOsVersion != other.DeviceOsVersion) return false;
      if (DeviceHardware != other.DeviceHardware) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != global::Netfox.Snoopers.SnooperHangouts.Models.ClientId.CLIENT_ID_UNKNOWN) hash ^= ClientId.GetHashCode();
      if (BuildType != global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType.BUILD_TYPE_UNKNOWN) hash ^= BuildType.GetHashCode();
      if (MajorVersion.Length != 0) hash ^= MajorVersion.GetHashCode();
      if (VersionTimestamp != 0UL) hash ^= VersionTimestamp.GetHashCode();
      if (DeviceOsVersion.Length != 0) hash ^= DeviceOsVersion.GetHashCode();
      if (DeviceHardware.Length != 0) hash ^= DeviceHardware.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != global::Netfox.Snoopers.SnooperHangouts.Models.ClientId.CLIENT_ID_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ClientId);
      }
      if (BuildType != global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType.BUILD_TYPE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BuildType);
      }
      if (MajorVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MajorVersion);
      }
      if (VersionTimestamp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(VersionTimestamp);
      }
      if (DeviceOsVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceOsVersion);
      }
      if (DeviceHardware.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DeviceHardware);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ClientId != global::Netfox.Snoopers.SnooperHangouts.Models.ClientId.CLIENT_ID_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientId);
      }
      if (BuildType != global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType.BUILD_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuildType);
      }
      if (MajorVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MajorVersion);
      }
      if (VersionTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VersionTimestamp);
      }
      if (DeviceOsVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceOsVersion);
      }
      if (DeviceHardware.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceHardware);
      }
      return size;
    }

    public void MergeFrom(ClientVersion other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != global::Netfox.Snoopers.SnooperHangouts.Models.ClientId.CLIENT_ID_UNKNOWN) {
        ClientId = other.ClientId;
      }
      if (other.BuildType != global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType.BUILD_TYPE_UNKNOWN) {
        BuildType = other.BuildType;
      }
      if (other.MajorVersion.Length != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.VersionTimestamp != 0UL) {
        VersionTimestamp = other.VersionTimestamp;
      }
      if (other.DeviceOsVersion.Length != 0) {
        DeviceOsVersion = other.DeviceOsVersion;
      }
      if (other.DeviceHardware.Length != 0) {
        DeviceHardware = other.DeviceHardware;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            clientId_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ClientId) input.ReadEnum();
            break;
          }
          case 16: {
            buildType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ClientBuildType) input.ReadEnum();
            break;
          }
          case 26: {
            MajorVersion = input.ReadString();
            break;
          }
          case 32: {
            VersionTimestamp = input.ReadUInt64();
            break;
          }
          case 42: {
            DeviceOsVersion = input.ReadString();
            break;
          }
          case 50: {
            DeviceHardware = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Header for requests from the client to the server.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RequestHeader : pb::IMessage<RequestHeader> {
    private static readonly pb::MessageParser<RequestHeader> _parser = new pb::MessageParser<RequestHeader>(() => new RequestHeader());
    public static pb::MessageParser<RequestHeader> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[38]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RequestHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RequestHeader(RequestHeader other) : this() {
      ClientVersion = other.clientVersion_ != null ? other.ClientVersion.Clone() : null;
      ClientIdentifier = other.clientIdentifier_ != null ? other.ClientIdentifier.Clone() : null;
      languageCode_ = other.languageCode_;
    }

    public RequestHeader Clone() {
      return new RequestHeader(this);
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientVersion clientVersion_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientVersion ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = value;
      }
    }

    /// <summary>Field number for the "client_identifier" field.</summary>
    public const int ClientIdentifierFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier clientIdentifier_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier ClientIdentifier {
      get { return clientIdentifier_; }
      set {
        clientIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 4;
    private string languageCode_ = "";
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as RequestHeader);
    }

    public bool Equals(RequestHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClientVersion, other.ClientVersion)) return false;
      if (!object.Equals(ClientIdentifier, other.ClientIdentifier)) return false;
      if (LanguageCode != other.LanguageCode) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (clientVersion_ != null) hash ^= ClientVersion.GetHashCode();
      if (clientIdentifier_ != null) hash ^= ClientIdentifier.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (clientVersion_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClientVersion);
      }
      if (clientIdentifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientIdentifier);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LanguageCode);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (clientVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientVersion);
      }
      if (clientIdentifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientIdentifier);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      return size;
    }

    public void MergeFrom(RequestHeader other) {
      if (other == null) {
        return;
      }
      if (other.clientVersion_ != null) {
        if (clientVersion_ == null) {
          clientVersion_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientVersion();
        }
        ClientVersion.MergeFrom(other.ClientVersion);
      }
      if (other.clientIdentifier_ != null) {
        if (clientIdentifier_ == null) {
          clientIdentifier_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier();
        }
        ClientIdentifier.MergeFrom(other.ClientIdentifier);
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (clientVersion_ == null) {
              clientVersion_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientVersion();
            }
            input.ReadMessage(clientVersion_);
            break;
          }
          case 18: {
            if (clientIdentifier_ == null) {
              clientIdentifier_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientIdentifier();
            }
            input.ReadMessage(clientIdentifier_);
            break;
          }
          case 34: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Header for responses from the server to the client.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ResponseHeader : pb::IMessage<ResponseHeader> {
    private static readonly pb::MessageParser<ResponseHeader> _parser = new pb::MessageParser<ResponseHeader>(() => new ResponseHeader());
    public static pb::MessageParser<ResponseHeader> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[39]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ResponseHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ResponseHeader(ResponseHeader other) : this() {
      status_ = other.status_;
      errorDescription_ = other.errorDescription_;
      debugUrl_ = other.debugUrl_;
      requestTraceId_ = other.requestTraceId_;
      currentServerTime_ = other.currentServerTime_;
    }

    public ResponseHeader Clone() {
      return new ResponseHeader(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus status_ = global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus.RESPONSE_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error_description" field.</summary>
    public const int ErrorDescriptionFieldNumber = 2;
    private string errorDescription_ = "";
    public string ErrorDescription {
      get { return errorDescription_; }
      set {
        errorDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "debug_url" field.</summary>
    public const int DebugUrlFieldNumber = 3;
    private string debugUrl_ = "";
    public string DebugUrl {
      get { return debugUrl_; }
      set {
        debugUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_trace_id" field.</summary>
    public const int RequestTraceIdFieldNumber = 4;
    private string requestTraceId_ = "";
    public string RequestTraceId {
      get { return requestTraceId_; }
      set {
        requestTraceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_server_time" field.</summary>
    public const int CurrentServerTimeFieldNumber = 5;
    private ulong currentServerTime_;
    public ulong CurrentServerTime {
      get { return currentServerTime_; }
      set {
        currentServerTime_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ResponseHeader);
    }

    public bool Equals(ResponseHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (ErrorDescription != other.ErrorDescription) return false;
      if (DebugUrl != other.DebugUrl) return false;
      if (RequestTraceId != other.RequestTraceId) return false;
      if (CurrentServerTime != other.CurrentServerTime) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus.RESPONSE_STATUS_UNKNOWN) hash ^= Status.GetHashCode();
      if (ErrorDescription.Length != 0) hash ^= ErrorDescription.GetHashCode();
      if (DebugUrl.Length != 0) hash ^= DebugUrl.GetHashCode();
      if (RequestTraceId.Length != 0) hash ^= RequestTraceId.GetHashCode();
      if (CurrentServerTime != 0UL) hash ^= CurrentServerTime.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus.RESPONSE_STATUS_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (ErrorDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorDescription);
      }
      if (DebugUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DebugUrl);
      }
      if (RequestTraceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestTraceId);
      }
      if (CurrentServerTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CurrentServerTime);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Status != global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus.RESPONSE_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ErrorDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorDescription);
      }
      if (DebugUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DebugUrl);
      }
      if (RequestTraceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestTraceId);
      }
      if (CurrentServerTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentServerTime);
      }
      return size;
    }

    public void MergeFrom(ResponseHeader other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus.RESPONSE_STATUS_UNKNOWN) {
        Status = other.Status;
      }
      if (other.ErrorDescription.Length != 0) {
        ErrorDescription = other.ErrorDescription;
      }
      if (other.DebugUrl.Length != 0) {
        DebugUrl = other.DebugUrl;
      }
      if (other.RequestTraceId.Length != 0) {
        RequestTraceId = other.RequestTraceId;
      }
      if (other.CurrentServerTime != 0UL) {
        CurrentServerTime = other.CurrentServerTime;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ResponseStatus) input.ReadEnum();
            break;
          }
          case 18: {
            ErrorDescription = input.ReadString();
            break;
          }
          case 26: {
            DebugUrl = input.ReadString();
            break;
          }
          case 34: {
            RequestTraceId = input.ReadString();
            break;
          }
          case 40: {
            CurrentServerTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  A user that can participate in conversations.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Entity : pb::IMessage<Entity> {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[40]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Entity(Entity other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      Presence = other.presence_ != null ? other.Presence.Clone() : null;
      Properties = other.properties_ != null ? other.Properties.Clone() : null;
      entityType_ = other.entityType_;
      hadPastHangoutState_ = other.hadPastHangoutState_;
    }

    public Entity Clone() {
      return new Entity(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 9;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId id_;
    /// <summary>
    ///  The user's ID.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "presence" field.</summary>
    public const int PresenceFieldNumber = 8;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Presence presence_;
    /// <summary>
    ///  user presence status.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.Presence Presence {
      get { return presence_; }
      set {
        presence_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 10;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EntityProperties properties_;
    /// <summary>
    ///  user properties.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.EntityProperties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    /// <summary>Field number for the "entity_type" field.</summary>
    public const int EntityTypeFieldNumber = 13;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType entityType_ = global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType EntityType {
      get { return entityType_; }
      set {
        entityType_ = value;
      }
    }

    /// <summary>Field number for the "had_past_hangout_state" field.</summary>
    public const int HadPastHangoutStateFieldNumber = 16;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState hadPastHangoutState_ = global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState.PAST_HANGOUT_STATE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState HadPastHangoutState {
      get { return hadPastHangoutState_; }
      set {
        hadPastHangoutState_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Presence, other.Presence)) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      if (EntityType != other.EntityType) return false;
      if (HadPastHangoutState != other.HadPastHangoutState) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (presence_ != null) hash ^= Presence.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (EntityType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) hash ^= EntityType.GetHashCode();
      if (HadPastHangoutState != global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState.PAST_HANGOUT_STATE_UNKNOWN) hash ^= HadPastHangoutState.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (presence_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Presence);
      }
      if (id_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Id);
      }
      if (properties_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Properties);
      }
      if (EntityType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) {
        output.WriteRawTag(104);
        output.WriteEnum((int) EntityType);
      }
      if (HadPastHangoutState != global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState.PAST_HANGOUT_STATE_UNKNOWN) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) HadPastHangoutState);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (presence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Presence);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (EntityType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityType);
      }
      if (HadPastHangoutState != global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState.PAST_HANGOUT_STATE_UNKNOWN) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HadPastHangoutState);
      }
      return size;
    }

    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.presence_ != null) {
        if (presence_ == null) {
          presence_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Presence();
        }
        Presence.MergeFrom(other.Presence);
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          properties_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EntityProperties();
        }
        Properties.MergeFrom(other.Properties);
      }
      if (other.EntityType != global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType.PARTICIPANT_TYPE_UNKNOWN) {
        EntityType = other.EntityType;
      }
      if (other.HadPastHangoutState != global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState.PAST_HANGOUT_STATE_UNKNOWN) {
        HadPastHangoutState = other.HadPastHangoutState;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 66: {
            if (presence_ == null) {
              presence_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Presence();
            }
            input.ReadMessage(presence_);
            break;
          }
          case 74: {
            if (id_ == null) {
              id_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(id_);
            break;
          }
          case 82: {
            if (properties_ == null) {
              properties_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EntityProperties();
            }
            input.ReadMessage(properties_);
            break;
          }
          case 104: {
            entityType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantType) input.ReadEnum();
            break;
          }
          case 128: {
            hadPastHangoutState_ = (global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Types.PastHangoutState) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Entity message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum PastHangoutState {
        PAST_HANGOUT_STATE_UNKNOWN = 0,
        PAST_HANGOUT_STATE_HAD_PAST_HANGOUT = 1,
        PAST_HANGOUT_STATE_NO_PAST_HANGOUT = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntityProperties : pb::IMessage<EntityProperties> {
    private static readonly pb::MessageParser<EntityProperties> _parser = new pb::MessageParser<EntityProperties>(() => new EntityProperties());
    public static pb::MessageParser<EntityProperties> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[41]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EntityProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EntityProperties(EntityProperties other) : this() {
      type_ = other.type_;
      displayName_ = other.displayName_;
      firstName_ = other.firstName_;
      photoUrl_ = other.photoUrl_;
      email_ = other.email_.Clone();
      phone_ = other.phone_.Clone();
      inUsersDomain_ = other.inUsersDomain_;
      gender_ = other.gender_;
      photoUrlStatus_ = other.photoUrlStatus_;
      canonicalEmail_ = other.canonicalEmail_;
    }

    public EntityProperties Clone() {
      return new EntityProperties(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType.PROFILE_TYPE_NONE;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 3;
    private string firstName_ = "";
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "photo_url" field.</summary>
    public const int PhotoUrlFieldNumber = 4;
    private string photoUrl_ = "";
    public string PhotoUrl {
      get { return photoUrl_; }
      set {
        photoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_email_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> email_ = new pbc::RepeatedField<string>();
    public pbc::RepeatedField<string> Email {
      get { return email_; }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_phone_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> phone_ = new pbc::RepeatedField<string>();
    public pbc::RepeatedField<string> Phone {
      get { return phone_; }
    }

    /// <summary>Field number for the "in_users_domain" field.</summary>
    public const int InUsersDomainFieldNumber = 10;
    private bool inUsersDomain_;
    public bool InUsersDomain {
      get { return inUsersDomain_; }
      set {
        inUsersDomain_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 11;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Gender gender_ = global::Netfox.Snoopers.SnooperHangouts.Models.Gender.GENDER_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "photo_url_status" field.</summary>
    public const int PhotoUrlStatusFieldNumber = 12;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus photoUrlStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus.PHOTO_URL_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus PhotoUrlStatus {
      get { return photoUrlStatus_; }
      set {
        photoUrlStatus_ = value;
      }
    }

    /// <summary>Field number for the "canonical_email" field.</summary>
    public const int CanonicalEmailFieldNumber = 15;
    private string canonicalEmail_ = "";
    public string CanonicalEmail {
      get { return canonicalEmail_; }
      set {
        canonicalEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EntityProperties);
    }

    public bool Equals(EntityProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (DisplayName != other.DisplayName) return false;
      if (FirstName != other.FirstName) return false;
      if (PhotoUrl != other.PhotoUrl) return false;
      if(!email_.Equals(other.email_)) return false;
      if(!phone_.Equals(other.phone_)) return false;
      if (InUsersDomain != other.InUsersDomain) return false;
      if (Gender != other.Gender) return false;
      if (PhotoUrlStatus != other.PhotoUrlStatus) return false;
      if (CanonicalEmail != other.CanonicalEmail) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType.PROFILE_TYPE_NONE) hash ^= Type.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (PhotoUrl.Length != 0) hash ^= PhotoUrl.GetHashCode();
      hash ^= email_.GetHashCode();
      hash ^= phone_.GetHashCode();
      if (InUsersDomain != false) hash ^= InUsersDomain.GetHashCode();
      if (Gender != global::Netfox.Snoopers.SnooperHangouts.Models.Gender.GENDER_UNKNOWN) hash ^= Gender.GetHashCode();
      if (PhotoUrlStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus.PHOTO_URL_STATUS_UNKNOWN) hash ^= PhotoUrlStatus.GetHashCode();
      if (CanonicalEmail.Length != 0) hash ^= CanonicalEmail.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType.PROFILE_TYPE_NONE) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FirstName);
      }
      if (PhotoUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PhotoUrl);
      }
      email_.WriteTo(output, _repeated_email_codec);
      phone_.WriteTo(output, _repeated_phone_codec);
      if (InUsersDomain != false) {
        output.WriteRawTag(80);
        output.WriteBool(InUsersDomain);
      }
      if (Gender != global::Netfox.Snoopers.SnooperHangouts.Models.Gender.GENDER_UNKNOWN) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Gender);
      }
      if (PhotoUrlStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus.PHOTO_URL_STATUS_UNKNOWN) {
        output.WriteRawTag(96);
        output.WriteEnum((int) PhotoUrlStatus);
      }
      if (CanonicalEmail.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CanonicalEmail);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType.PROFILE_TYPE_NONE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (PhotoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhotoUrl);
      }
      size += email_.CalculateSize(_repeated_email_codec);
      size += phone_.CalculateSize(_repeated_phone_codec);
      if (InUsersDomain != false) {
        size += 1 + 1;
      }
      if (Gender != global::Netfox.Snoopers.SnooperHangouts.Models.Gender.GENDER_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (PhotoUrlStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus.PHOTO_URL_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PhotoUrlStatus);
      }
      if (CanonicalEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CanonicalEmail);
      }
      return size;
    }

    public void MergeFrom(EntityProperties other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType.PROFILE_TYPE_NONE) {
        Type = other.Type;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.PhotoUrl.Length != 0) {
        PhotoUrl = other.PhotoUrl;
      }
      email_.Add(other.email_);
      phone_.Add(other.phone_);
      if (other.InUsersDomain != false) {
        InUsersDomain = other.InUsersDomain;
      }
      if (other.Gender != global::Netfox.Snoopers.SnooperHangouts.Models.Gender.GENDER_UNKNOWN) {
        Gender = other.Gender;
      }
      if (other.PhotoUrlStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus.PHOTO_URL_STATUS_UNKNOWN) {
        PhotoUrlStatus = other.PhotoUrlStatus;
      }
      if (other.CanonicalEmail.Length != 0) {
        CanonicalEmail = other.CanonicalEmail;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ProfileType) input.ReadEnum();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            FirstName = input.ReadString();
            break;
          }
          case 34: {
            PhotoUrl = input.ReadString();
            break;
          }
          case 42: {
            email_.AddEntriesFrom(input, _repeated_email_codec);
            break;
          }
          case 50: {
            phone_.AddEntriesFrom(input, _repeated_phone_codec);
            break;
          }
          case 80: {
            InUsersDomain = input.ReadBool();
            break;
          }
          case 88: {
            gender_ = (global::Netfox.Snoopers.SnooperHangouts.Models.Gender) input.ReadEnum();
            break;
          }
          case 96: {
            photoUrlStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.PhotoUrlStatus) input.ReadEnum();
            break;
          }
          case 122: {
            CanonicalEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  State of a conversation and recent events.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationState : pb::IMessage<ConversationState> {
    private static readonly pb::MessageParser<ConversationState> _parser = new pb::MessageParser<ConversationState>(() => new ConversationState());
    public static pb::MessageParser<ConversationState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[42]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConversationState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConversationState(ConversationState other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      Conversation = other.conversation_ != null ? other.Conversation.Clone() : null;
      event_ = other.event_.Clone();
      EventContinuationToken = other.eventContinuationToken_ != null ? other.EventContinuationToken.Clone() : null;
    }

    public ConversationState Clone() {
      return new ConversationState(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "conversation" field.</summary>
    public const int ConversationFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Conversation conversation_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Conversation Conversation {
      get { return conversation_; }
      set {
        conversation_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Event> _repeated_event_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.Event.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Event> event_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Event>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Event> Event {
      get { return event_; }
    }

    /// <summary>Field number for the "event_continuation_token" field.</summary>
    public const int EventContinuationTokenFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken eventContinuationToken_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken EventContinuationToken {
      get { return eventContinuationToken_; }
      set {
        eventContinuationToken_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConversationState);
    }

    public bool Equals(ConversationState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (!object.Equals(Conversation, other.Conversation)) return false;
      if(!event_.Equals(other.event_)) return false;
      if (!object.Equals(EventContinuationToken, other.EventContinuationToken)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (conversation_ != null) hash ^= Conversation.GetHashCode();
      hash ^= event_.GetHashCode();
      if (eventContinuationToken_ != null) hash ^= EventContinuationToken.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (conversation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Conversation);
      }
      event_.WriteTo(output, _repeated_event_codec);
      if (eventContinuationToken_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EventContinuationToken);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (conversation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Conversation);
      }
      size += event_.CalculateSize(_repeated_event_codec);
      if (eventContinuationToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventContinuationToken);
      }
      return size;
    }

    public void MergeFrom(ConversationState other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.conversation_ != null) {
        if (conversation_ == null) {
          conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
        }
        Conversation.MergeFrom(other.Conversation);
      }
      event_.Add(other.event_);
      if (other.eventContinuationToken_ != null) {
        if (eventContinuationToken_ == null) {
          eventContinuationToken_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken();
        }
        EventContinuationToken.MergeFrom(other.EventContinuationToken);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 18: {
            if (conversation_ == null) {
              conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
            }
            input.ReadMessage(conversation_);
            break;
          }
          case 26: {
            event_.AddEntriesFrom(input, _repeated_event_codec);
            break;
          }
          case 42: {
            if (eventContinuationToken_ == null) {
              eventContinuationToken_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken();
            }
            input.ReadMessage(eventContinuationToken_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Token that allows retrieving more events from a position in a conversation.
  ///  Specifying event_timestamp is sufficient.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventContinuationToken : pb::IMessage<EventContinuationToken> {
    private static readonly pb::MessageParser<EventContinuationToken> _parser = new pb::MessageParser<EventContinuationToken>(() => new EventContinuationToken());
    public static pb::MessageParser<EventContinuationToken> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[43]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EventContinuationToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EventContinuationToken(EventContinuationToken other) : this() {
      eventId_ = other.eventId_;
      storageContinuationToken_ = other.storageContinuationToken_;
      eventTimestamp_ = other.eventTimestamp_;
    }

    public EventContinuationToken Clone() {
      return new EventContinuationToken(this);
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 1;
    private string eventId_ = "";
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storage_continuation_token" field.</summary>
    public const int StorageContinuationTokenFieldNumber = 2;
    private pb::ByteString storageContinuationToken_ = pb::ByteString.Empty;
    public pb::ByteString StorageContinuationToken {
      get { return storageContinuationToken_; }
      set {
        storageContinuationToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_timestamp" field.</summary>
    public const int EventTimestampFieldNumber = 3;
    private ulong eventTimestamp_;
    public ulong EventTimestamp {
      get { return eventTimestamp_; }
      set {
        eventTimestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EventContinuationToken);
    }

    public bool Equals(EventContinuationToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (StorageContinuationToken != other.StorageContinuationToken) return false;
      if (EventTimestamp != other.EventTimestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (StorageContinuationToken.Length != 0) hash ^= StorageContinuationToken.GetHashCode();
      if (EventTimestamp != 0UL) hash ^= EventTimestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (StorageContinuationToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StorageContinuationToken);
      }
      if (EventTimestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(EventTimestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (StorageContinuationToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StorageContinuationToken);
      }
      if (EventTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EventTimestamp);
      }
      return size;
    }

    public void MergeFrom(EventContinuationToken other) {
      if (other == null) {
        return;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.StorageContinuationToken.Length != 0) {
        StorageContinuationToken = other.StorageContinuationToken;
      }
      if (other.EventTimestamp != 0UL) {
        EventTimestamp = other.EventTimestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            StorageContinuationToken = input.ReadBytes();
            break;
          }
          case 24: {
            EventTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntityLookupSpec : pb::IMessage<EntityLookupSpec> {
    private static readonly pb::MessageParser<EntityLookupSpec> _parser = new pb::MessageParser<EntityLookupSpec>(() => new EntityLookupSpec());
    public static pb::MessageParser<EntityLookupSpec> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[44]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EntityLookupSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EntityLookupSpec(EntityLookupSpec other) : this() {
      gaiaId_ = other.gaiaId_;
    }

    public EntityLookupSpec Clone() {
      return new EntityLookupSpec(this);
    }

    /// <summary>Field number for the "gaia_id" field.</summary>
    public const int GaiaIdFieldNumber = 1;
    private string gaiaId_ = "";
    public string GaiaId {
      get { return gaiaId_; }
      set {
        gaiaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EntityLookupSpec);
    }

    public bool Equals(EntityLookupSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GaiaId != other.GaiaId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (GaiaId.Length != 0) hash ^= GaiaId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (GaiaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GaiaId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (GaiaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaId);
      }
      return size;
    }

    public void MergeFrom(EntityLookupSpec other) {
      if (other == null) {
        return;
      }
      if (other.GaiaId.Length != 0) {
        GaiaId = other.GaiaId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GaiaId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConfigurationBit : pb::IMessage<ConfigurationBit> {
    private static readonly pb::MessageParser<ConfigurationBit> _parser = new pb::MessageParser<ConfigurationBit>(() => new ConfigurationBit());
    public static pb::MessageParser<ConfigurationBit> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[45]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConfigurationBit() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConfigurationBit(ConfigurationBit other) : this() {
      configurationBitType_ = other.configurationBitType_;
      value_ = other.value_;
    }

    public ConfigurationBit Clone() {
      return new ConfigurationBit(this);
    }

    /// <summary>Field number for the "configuration_bit_type" field.</summary>
    public const int ConfigurationBitTypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType configurationBitType_ = global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType.CONFIGURATION_BIT_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType ConfigurationBitType {
      get { return configurationBitType_; }
      set {
        configurationBitType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private bool value_;
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConfigurationBit);
    }

    public bool Equals(ConfigurationBit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigurationBitType != other.ConfigurationBitType) return false;
      if (Value != other.Value) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ConfigurationBitType != global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType.CONFIGURATION_BIT_TYPE_UNKNOWN) hash ^= ConfigurationBitType.GetHashCode();
      if (Value != false) hash ^= Value.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigurationBitType != global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType.CONFIGURATION_BIT_TYPE_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConfigurationBitType);
      }
      if (Value != false) {
        output.WriteRawTag(16);
        output.WriteBool(Value);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ConfigurationBitType != global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType.CONFIGURATION_BIT_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConfigurationBitType);
      }
      if (Value != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(ConfigurationBit other) {
      if (other == null) {
        return;
      }
      if (other.ConfigurationBitType != global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType.CONFIGURATION_BIT_TYPE_UNKNOWN) {
        ConfigurationBitType = other.ConfigurationBitType;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            configurationBitType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBitType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RichPresenceState : pb::IMessage<RichPresenceState> {
    private static readonly pb::MessageParser<RichPresenceState> _parser = new pb::MessageParser<RichPresenceState>(() => new RichPresenceState());
    public static pb::MessageParser<RichPresenceState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[46]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RichPresenceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RichPresenceState(RichPresenceState other) : this() {
      getRichPresenceEnabledState_ = other.getRichPresenceEnabledState_.Clone();
    }

    public RichPresenceState Clone() {
      return new RichPresenceState(this);
    }

    /// <summary>Field number for the "get_rich_presence_enabled_state" field.</summary>
    public const int GetRichPresenceEnabledStateFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState> _repeated_getRichPresenceEnabledState_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState> getRichPresenceEnabledState_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState> GetRichPresenceEnabledState {
      get { return getRichPresenceEnabledState_; }
    }

    public override bool Equals(object other) {
      return Equals(other as RichPresenceState);
    }

    public bool Equals(RichPresenceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!getRichPresenceEnabledState_.Equals(other.getRichPresenceEnabledState_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= getRichPresenceEnabledState_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      getRichPresenceEnabledState_.WriteTo(output, _repeated_getRichPresenceEnabledState_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += getRichPresenceEnabledState_.CalculateSize(_repeated_getRichPresenceEnabledState_codec);
      return size;
    }

    public void MergeFrom(RichPresenceState other) {
      if (other == null) {
        return;
      }
      getRichPresenceEnabledState_.Add(other.getRichPresenceEnabledState_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            getRichPresenceEnabledState_.AddEntriesFrom(input, _repeated_getRichPresenceEnabledState_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RichPresenceEnabledState : pb::IMessage<RichPresenceEnabledState> {
    private static readonly pb::MessageParser<RichPresenceEnabledState> _parser = new pb::MessageParser<RichPresenceEnabledState>(() => new RichPresenceEnabledState());
    public static pb::MessageParser<RichPresenceEnabledState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[47]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RichPresenceEnabledState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RichPresenceEnabledState(RichPresenceEnabledState other) : this() {
      type_ = other.type_;
      enabled_ = other.enabled_;
    }

    public RichPresenceEnabledState Clone() {
      return new RichPresenceEnabledState(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType.RICH_PRESENCE_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 2;
    private bool enabled_;
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as RichPresenceEnabledState);
    }

    public bool Equals(RichPresenceEnabledState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Enabled != other.Enabled) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType.RICH_PRESENCE_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType.RICH_PRESENCE_TYPE_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Enabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType.RICH_PRESENCE_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(RichPresenceEnabledState other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType.RICH_PRESENCE_TYPE_UNKNOWN) {
        Type = other.Type;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceType) input.ReadEnum();
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DesktopOffSetting : pb::IMessage<DesktopOffSetting> {
    private static readonly pb::MessageParser<DesktopOffSetting> _parser = new pb::MessageParser<DesktopOffSetting>(() => new DesktopOffSetting());
    public static pb::MessageParser<DesktopOffSetting> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[48]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DesktopOffSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DesktopOffSetting(DesktopOffSetting other) : this() {
      desktopOff_ = other.desktopOff_;
    }

    public DesktopOffSetting Clone() {
      return new DesktopOffSetting(this);
    }

    /// <summary>Field number for the "desktop_off" field.</summary>
    public const int DesktopOffFieldNumber = 1;
    private bool desktopOff_;
    /// <summary>
    ///  State of "desktop off" setting.
    /// </summary>
    public bool DesktopOff {
      get { return desktopOff_; }
      set {
        desktopOff_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DesktopOffSetting);
    }

    public bool Equals(DesktopOffSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DesktopOff != other.DesktopOff) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (DesktopOff != false) hash ^= DesktopOff.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (DesktopOff != false) {
        output.WriteRawTag(8);
        output.WriteBool(DesktopOff);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (DesktopOff != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(DesktopOffSetting other) {
      if (other == null) {
        return;
      }
      if (other.DesktopOff != false) {
        DesktopOff = other.DesktopOff;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DesktopOff = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DesktopOffState : pb::IMessage<DesktopOffState> {
    private static readonly pb::MessageParser<DesktopOffState> _parser = new pb::MessageParser<DesktopOffState>(() => new DesktopOffState());
    public static pb::MessageParser<DesktopOffState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[49]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DesktopOffState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DesktopOffState(DesktopOffState other) : this() {
      desktopOff_ = other.desktopOff_;
      version_ = other.version_;
    }

    public DesktopOffState Clone() {
      return new DesktopOffState(this);
    }

    /// <summary>Field number for the "desktop_off" field.</summary>
    public const int DesktopOffFieldNumber = 1;
    private bool desktopOff_;
    /// <summary>
    ///  Whether Hangouts desktop is signed off or on.
    /// </summary>
    public bool DesktopOff {
      get { return desktopOff_; }
      set {
        desktopOff_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private ulong version_;
    public ulong Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DesktopOffState);
    }

    public bool Equals(DesktopOffState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DesktopOff != other.DesktopOff) return false;
      if (Version != other.Version) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (DesktopOff != false) hash ^= DesktopOff.GetHashCode();
      if (Version != 0UL) hash ^= Version.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (DesktopOff != false) {
        output.WriteRawTag(8);
        output.WriteBool(DesktopOff);
      }
      if (Version != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Version);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (DesktopOff != false) {
        size += 1 + 1;
      }
      if (Version != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Version);
      }
      return size;
    }

    public void MergeFrom(DesktopOffState other) {
      if (other == null) {
        return;
      }
      if (other.DesktopOff != false) {
        DesktopOff = other.DesktopOff;
      }
      if (other.Version != 0UL) {
        Version = other.Version;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DesktopOff = input.ReadBool();
            break;
          }
          case 16: {
            Version = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Enable or disable do-not-disturb mode. Not to be confused with
  ///  DoNotDisturbSetting, which is used to indicate the state of do-not-disturb
  ///  mode.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DndSetting : pb::IMessage<DndSetting> {
    private static readonly pb::MessageParser<DndSetting> _parser = new pb::MessageParser<DndSetting>(() => new DndSetting());
    public static pb::MessageParser<DndSetting> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[50]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DndSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DndSetting(DndSetting other) : this() {
      doNotDisturb_ = other.doNotDisturb_;
      timeoutSecs_ = other.timeoutSecs_;
    }

    public DndSetting Clone() {
      return new DndSetting(this);
    }

    /// <summary>Field number for the "do_not_disturb" field.</summary>
    public const int DoNotDisturbFieldNumber = 1;
    private bool doNotDisturb_;
    /// <summary>
    ///  Whether to enable or disable do-not-disturb mode.
    /// </summary>
    public bool DoNotDisturb {
      get { return doNotDisturb_; }
      set {
        doNotDisturb_ = value;
      }
    }

    /// <summary>Field number for the "timeout_secs" field.</summary>
    public const int TimeoutSecsFieldNumber = 2;
    private ulong timeoutSecs_;
    /// <summary>
    ///  Do not disturb expiration in seconds.
    /// </summary>
    public ulong TimeoutSecs {
      get { return timeoutSecs_; }
      set {
        timeoutSecs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DndSetting);
    }

    public bool Equals(DndSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DoNotDisturb != other.DoNotDisturb) return false;
      if (TimeoutSecs != other.TimeoutSecs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (DoNotDisturb != false) hash ^= DoNotDisturb.GetHashCode();
      if (TimeoutSecs != 0UL) hash ^= TimeoutSecs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (DoNotDisturb != false) {
        output.WriteRawTag(8);
        output.WriteBool(DoNotDisturb);
      }
      if (TimeoutSecs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimeoutSecs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (DoNotDisturb != false) {
        size += 1 + 1;
      }
      if (TimeoutSecs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutSecs);
      }
      return size;
    }

    public void MergeFrom(DndSetting other) {
      if (other == null) {
        return;
      }
      if (other.DoNotDisturb != false) {
        DoNotDisturb = other.DoNotDisturb;
      }
      if (other.TimeoutSecs != 0UL) {
        TimeoutSecs = other.TimeoutSecs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DoNotDisturb = input.ReadBool();
            break;
          }
          case 16: {
            TimeoutSecs = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PresenceStateSetting : pb::IMessage<PresenceStateSetting> {
    private static readonly pb::MessageParser<PresenceStateSetting> _parser = new pb::MessageParser<PresenceStateSetting>(() => new PresenceStateSetting());
    public static pb::MessageParser<PresenceStateSetting> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[51]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PresenceStateSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PresenceStateSetting(PresenceStateSetting other) : this() {
      timeoutSecs_ = other.timeoutSecs_;
      type_ = other.type_;
    }

    public PresenceStateSetting Clone() {
      return new PresenceStateSetting(this);
    }

    /// <summary>Field number for the "timeout_secs" field.</summary>
    public const int TimeoutSecsFieldNumber = 1;
    private ulong timeoutSecs_;
    public ulong TimeoutSecs {
      get { return timeoutSecs_; }
      set {
        timeoutSecs_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PresenceStateSetting);
    }

    public bool Equals(PresenceStateSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeoutSecs != other.TimeoutSecs) return false;
      if (Type != other.Type) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (TimeoutSecs != 0UL) hash ^= TimeoutSecs.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) hash ^= Type.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeoutSecs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TimeoutSecs);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (TimeoutSecs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutSecs);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    public void MergeFrom(PresenceStateSetting other) {
      if (other == null) {
        return;
      }
      if (other.TimeoutSecs != 0UL) {
        TimeoutSecs = other.TimeoutSecs;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN) {
        Type = other.Type;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TimeoutSecs = input.ReadUInt64();
            break;
          }
          case 16: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceStateType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodMessage : pb::IMessage<MoodMessage> {
    private static readonly pb::MessageParser<MoodMessage> _parser = new pb::MessageParser<MoodMessage>(() => new MoodMessage());
    public static pb::MessageParser<MoodMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[52]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MoodMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MoodMessage(MoodMessage other) : this() {
      MoodContent = other.moodContent_ != null ? other.MoodContent.Clone() : null;
    }

    public MoodMessage Clone() {
      return new MoodMessage(this);
    }

    /// <summary>Field number for the "mood_content" field.</summary>
    public const int MoodContentFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MoodContent moodContent_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MoodContent MoodContent {
      get { return moodContent_; }
      set {
        moodContent_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MoodMessage);
    }

    public bool Equals(MoodMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MoodContent, other.MoodContent)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (moodContent_ != null) hash ^= MoodContent.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (moodContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MoodContent);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (moodContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoodContent);
      }
      return size;
    }

    public void MergeFrom(MoodMessage other) {
      if (other == null) {
        return;
      }
      if (other.moodContent_ != null) {
        if (moodContent_ == null) {
          moodContent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodContent();
        }
        MoodContent.MergeFrom(other.MoodContent);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (moodContent_ == null) {
              moodContent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodContent();
            }
            input.ReadMessage(moodContent_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodContent : pb::IMessage<MoodContent> {
    private static readonly pb::MessageParser<MoodContent> _parser = new pb::MessageParser<MoodContent>(() => new MoodContent());
    public static pb::MessageParser<MoodContent> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[53]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MoodContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MoodContent(MoodContent other) : this() {
      segment_ = other.segment_.Clone();
    }

    public MoodContent Clone() {
      return new MoodContent(this);
    }

    /// <summary>Field number for the "segment" field.</summary>
    public const int SegmentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Segment> _repeated_segment_codec
        = pb::FieldCodec.ForMessage(10, global::Netfox.Snoopers.SnooperHangouts.Models.Segment.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Segment> segment_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Segment>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Segment> Segment {
      get { return segment_; }
    }

    public override bool Equals(object other) {
      return Equals(other as MoodContent);
    }

    public bool Equals(MoodContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!segment_.Equals(other.segment_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= segment_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      segment_.WriteTo(output, _repeated_segment_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += segment_.CalculateSize(_repeated_segment_codec);
      return size;
    }

    public void MergeFrom(MoodContent other) {
      if (other == null) {
        return;
      }
      segment_.Add(other.segment_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            segment_.AddEntriesFrom(input, _repeated_segment_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  The user's mood message.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodSetting : pb::IMessage<MoodSetting> {
    private static readonly pb::MessageParser<MoodSetting> _parser = new pb::MessageParser<MoodSetting>(() => new MoodSetting());
    public static pb::MessageParser<MoodSetting> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[54]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MoodSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MoodSetting(MoodSetting other) : this() {
      MoodMessage = other.moodMessage_ != null ? other.MoodMessage.Clone() : null;
    }

    public MoodSetting Clone() {
      return new MoodSetting(this);
    }

    /// <summary>Field number for the "mood_message" field.</summary>
    public const int MoodMessageFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MoodMessage moodMessage_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MoodMessage MoodMessage {
      get { return moodMessage_; }
      set {
        moodMessage_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MoodSetting);
    }

    public bool Equals(MoodSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MoodMessage, other.MoodMessage)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (moodMessage_ != null) hash ^= MoodMessage.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (moodMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MoodMessage);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (moodMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoodMessage);
      }
      return size;
    }

    public void MergeFrom(MoodSetting other) {
      if (other == null) {
        return;
      }
      if (other.moodMessage_ != null) {
        if (moodMessage_ == null) {
          moodMessage_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodMessage();
        }
        MoodMessage.MergeFrom(other.MoodMessage);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (moodMessage_ == null) {
              moodMessage_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodMessage();
            }
            input.ReadMessage(moodMessage_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodState : pb::IMessage<MoodState> {
    private static readonly pb::MessageParser<MoodState> _parser = new pb::MessageParser<MoodState>(() => new MoodState());
    public static pb::MessageParser<MoodState> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[55]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MoodState() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MoodState(MoodState other) : this() {
      MoodSetting = other.moodSetting_ != null ? other.MoodSetting.Clone() : null;
    }

    public MoodState Clone() {
      return new MoodState(this);
    }

    /// <summary>Field number for the "mood_setting" field.</summary>
    public const int MoodSettingFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting moodSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting MoodSetting {
      get { return moodSetting_; }
      set {
        moodSetting_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MoodState);
    }

    public bool Equals(MoodState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MoodSetting, other.MoodSetting)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (moodSetting_ != null) hash ^= MoodSetting.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (moodSetting_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MoodSetting);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (moodSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoodSetting);
      }
      return size;
    }

    public void MergeFrom(MoodState other) {
      if (other == null) {
        return;
      }
      if (other.moodSetting_ != null) {
        if (moodSetting_ == null) {
          moodSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting();
        }
        MoodSetting.MergeFrom(other.MoodSetting);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 34: {
            if (moodSetting_ == null) {
              moodSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting();
            }
            input.ReadMessage(moodSetting_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteAction : pb::IMessage<DeleteAction> {
    private static readonly pb::MessageParser<DeleteAction> _parser = new pb::MessageParser<DeleteAction>(() => new DeleteAction());
    public static pb::MessageParser<DeleteAction> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[56]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeleteAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeleteAction(DeleteAction other) : this() {
      deleteActionTimestamp_ = other.deleteActionTimestamp_;
      deleteUpperBoundTimestamp_ = other.deleteUpperBoundTimestamp_;
      deleteType_ = other.deleteType_;
    }

    public DeleteAction Clone() {
      return new DeleteAction(this);
    }

    /// <summary>Field number for the "delete_action_timestamp" field.</summary>
    public const int DeleteActionTimestampFieldNumber = 1;
    private ulong deleteActionTimestamp_;
    public ulong DeleteActionTimestamp {
      get { return deleteActionTimestamp_; }
      set {
        deleteActionTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "delete_upper_bound_timestamp" field.</summary>
    public const int DeleteUpperBoundTimestampFieldNumber = 2;
    private ulong deleteUpperBoundTimestamp_;
    public ulong DeleteUpperBoundTimestamp {
      get { return deleteUpperBoundTimestamp_; }
      set {
        deleteUpperBoundTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "delete_type" field.</summary>
    public const int DeleteTypeFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType deleteType_ = global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType.DELETE_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType DeleteType {
      get { return deleteType_; }
      set {
        deleteType_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeleteAction);
    }

    public bool Equals(DeleteAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeleteActionTimestamp != other.DeleteActionTimestamp) return false;
      if (DeleteUpperBoundTimestamp != other.DeleteUpperBoundTimestamp) return false;
      if (DeleteType != other.DeleteType) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (DeleteActionTimestamp != 0UL) hash ^= DeleteActionTimestamp.GetHashCode();
      if (DeleteUpperBoundTimestamp != 0UL) hash ^= DeleteUpperBoundTimestamp.GetHashCode();
      if (DeleteType != global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType.DELETE_TYPE_UNKNOWN) hash ^= DeleteType.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (DeleteActionTimestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(DeleteActionTimestamp);
      }
      if (DeleteUpperBoundTimestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(DeleteUpperBoundTimestamp);
      }
      if (DeleteType != global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType.DELETE_TYPE_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DeleteType);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (DeleteActionTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeleteActionTimestamp);
      }
      if (DeleteUpperBoundTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeleteUpperBoundTimestamp);
      }
      if (DeleteType != global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType.DELETE_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeleteType);
      }
      return size;
    }

    public void MergeFrom(DeleteAction other) {
      if (other == null) {
        return;
      }
      if (other.DeleteActionTimestamp != 0UL) {
        DeleteActionTimestamp = other.DeleteActionTimestamp;
      }
      if (other.DeleteUpperBoundTimestamp != 0UL) {
        DeleteUpperBoundTimestamp = other.DeleteUpperBoundTimestamp;
      }
      if (other.DeleteType != global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType.DELETE_TYPE_UNKNOWN) {
        DeleteType = other.DeleteType;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DeleteActionTimestamp = input.ReadUInt64();
            break;
          }
          case 16: {
            DeleteUpperBoundTimestamp = input.ReadUInt64();
            break;
          }
          case 24: {
            deleteType_ = (global::Netfox.Snoopers.SnooperHangouts.Models.DeleteType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InviteeID : pb::IMessage<InviteeID> {
    private static readonly pb::MessageParser<InviteeID> _parser = new pb::MessageParser<InviteeID>(() => new InviteeID());
    public static pb::MessageParser<InviteeID> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[57]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public InviteeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    public InviteeID(InviteeID other) : this() {
      gaiaId_ = other.gaiaId_;
      fallbackName_ = other.fallbackName_;
    }

    public InviteeID Clone() {
      return new InviteeID(this);
    }

    /// <summary>Field number for the "gaia_id" field.</summary>
    public const int GaiaIdFieldNumber = 1;
    private string gaiaId_ = "";
    public string GaiaId {
      get { return gaiaId_; }
      set {
        gaiaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fallback_name" field.</summary>
    public const int FallbackNameFieldNumber = 4;
    private string fallbackName_ = "";
    public string FallbackName {
      get { return fallbackName_; }
      set {
        fallbackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as InviteeID);
    }

    public bool Equals(InviteeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GaiaId != other.GaiaId) return false;
      if (FallbackName != other.FallbackName) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (GaiaId.Length != 0) hash ^= GaiaId.GetHashCode();
      if (FallbackName.Length != 0) hash ^= FallbackName.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (GaiaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GaiaId);
      }
      if (FallbackName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FallbackName);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (GaiaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GaiaId);
      }
      if (FallbackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FallbackName);
      }
      return size;
    }

    public void MergeFrom(InviteeID other) {
      if (other == null) {
        return;
      }
      if (other.GaiaId.Length != 0) {
        GaiaId = other.GaiaId;
      }
      if (other.FallbackName.Length != 0) {
        FallbackName = other.FallbackName;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GaiaId = input.ReadString();
            break;
          }
          case 34: {
            FallbackName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Describes a user's country.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Country : pb::IMessage<Country> {
    private static readonly pb::MessageParser<Country> _parser = new pb::MessageParser<Country>(() => new Country());
    public static pb::MessageParser<Country> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[58]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Country() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Country(Country other) : this() {
      regionCode_ = other.regionCode_;
      countryCode_ = other.countryCode_;
    }

    public Country Clone() {
      return new Country(this);
    }

    /// <summary>Field number for the "region_code" field.</summary>
    public const int RegionCodeFieldNumber = 1;
    private string regionCode_ = "";
    /// <summary>
    ///  Abbreviated region code (eg. "CA").
    /// </summary>
    public string RegionCode {
      get { return regionCode_; }
      set {
        regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 2;
    private ulong countryCode_;
    /// <summary>
    ///  Country's calling code (eg. "1").
    /// </summary>
    public ulong CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Country);
    }

    public bool Equals(Country other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionCode != other.RegionCode) return false;
      if (CountryCode != other.CountryCode) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
      if (CountryCode != 0UL) hash ^= CountryCode.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (RegionCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionCode);
      }
      if (CountryCode != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(CountryCode);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (RegionCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
      }
      if (CountryCode != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CountryCode);
      }
      return size;
    }

    public void MergeFrom(Country other) {
      if (other == null) {
        return;
      }
      if (other.RegionCode.Length != 0) {
        RegionCode = other.RegionCode;
      }
      if (other.CountryCode != 0UL) {
        CountryCode = other.CountryCode;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RegionCode = input.ReadString();
            break;
          }
          case 16: {
            CountryCode = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Sound settings in the desktop Hangouts client.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DesktopSoundSetting : pb::IMessage<DesktopSoundSetting> {
    private static readonly pb::MessageParser<DesktopSoundSetting> _parser = new pb::MessageParser<DesktopSoundSetting>(() => new DesktopSoundSetting());
    public static pb::MessageParser<DesktopSoundSetting> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[59]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DesktopSoundSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DesktopSoundSetting(DesktopSoundSetting other) : this() {
      desktopSoundState_ = other.desktopSoundState_;
      desktopRingSoundState_ = other.desktopRingSoundState_;
    }

    public DesktopSoundSetting Clone() {
      return new DesktopSoundSetting(this);
    }

    /// <summary>Field number for the "desktop_sound_state" field.</summary>
    public const int DesktopSoundStateFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SoundState desktopSoundState_ = global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN;
    /// <summary>
    ///  Whether to play sound for incoming messages.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.SoundState DesktopSoundState {
      get { return desktopSoundState_; }
      set {
        desktopSoundState_ = value;
      }
    }

    /// <summary>Field number for the "desktop_ring_sound_state" field.</summary>
    public const int DesktopRingSoundStateFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SoundState desktopRingSoundState_ = global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN;
    /// <summary>
    ///  Whether to ring for incoming calls.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.SoundState DesktopRingSoundState {
      get { return desktopRingSoundState_; }
      set {
        desktopRingSoundState_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DesktopSoundSetting);
    }

    public bool Equals(DesktopSoundSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DesktopSoundState != other.DesktopSoundState) return false;
      if (DesktopRingSoundState != other.DesktopRingSoundState) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (DesktopSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) hash ^= DesktopSoundState.GetHashCode();
      if (DesktopRingSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) hash ^= DesktopRingSoundState.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (DesktopSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DesktopSoundState);
      }
      if (DesktopRingSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DesktopRingSoundState);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (DesktopSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DesktopSoundState);
      }
      if (DesktopRingSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DesktopRingSoundState);
      }
      return size;
    }

    public void MergeFrom(DesktopSoundSetting other) {
      if (other == null) {
        return;
      }
      if (other.DesktopSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) {
        DesktopSoundState = other.DesktopSoundState;
      }
      if (other.DesktopRingSoundState != global::Netfox.Snoopers.SnooperHangouts.Models.SoundState.SOUND_STATE_UNKNOWN) {
        DesktopRingSoundState = other.DesktopRingSoundState;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            desktopSoundState_ = (global::Netfox.Snoopers.SnooperHangouts.Models.SoundState) input.ReadEnum();
            break;
          }
          case 16: {
            desktopRingSoundState_ = (global::Netfox.Snoopers.SnooperHangouts.Models.SoundState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PhoneData : pb::IMessage<PhoneData> {
    private static readonly pb::MessageParser<PhoneData> _parser = new pb::MessageParser<PhoneData>(() => new PhoneData());
    public static pb::MessageParser<PhoneData> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[60]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PhoneData() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PhoneData(PhoneData other) : this() {
      phone_ = other.phone_.Clone();
      callerIdSettingsMask_ = other.callerIdSettingsMask_;
    }

    public PhoneData Clone() {
      return new PhoneData(this);
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Phone> _repeated_phone_codec
        = pb::FieldCodec.ForMessage(10, global::Netfox.Snoopers.SnooperHangouts.Models.Phone.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Phone> phone_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Phone>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Phone> Phone {
      get { return phone_; }
    }

    /// <summary>Field number for the "caller_id_settings_mask" field.</summary>
    public const int CallerIdSettingsMaskFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask callerIdSettingsMask_ = global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask.CALLER_ID_SETTINGS_MASK_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask CallerIdSettingsMask {
      get { return callerIdSettingsMask_; }
      set {
        callerIdSettingsMask_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PhoneData);
    }

    public bool Equals(PhoneData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!phone_.Equals(other.phone_)) return false;
      if (CallerIdSettingsMask != other.CallerIdSettingsMask) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= phone_.GetHashCode();
      if (CallerIdSettingsMask != global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask.CALLER_ID_SETTINGS_MASK_UNKNOWN) hash ^= CallerIdSettingsMask.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      phone_.WriteTo(output, _repeated_phone_codec);
      if (CallerIdSettingsMask != global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask.CALLER_ID_SETTINGS_MASK_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CallerIdSettingsMask);
      }
    }

    public int CalculateSize() {
      int size = 0;
      size += phone_.CalculateSize(_repeated_phone_codec);
      if (CallerIdSettingsMask != global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask.CALLER_ID_SETTINGS_MASK_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CallerIdSettingsMask);
      }
      return size;
    }

    public void MergeFrom(PhoneData other) {
      if (other == null) {
        return;
      }
      phone_.Add(other.phone_);
      if (other.CallerIdSettingsMask != global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask.CALLER_ID_SETTINGS_MASK_UNKNOWN) {
        CallerIdSettingsMask = other.CallerIdSettingsMask;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            phone_.AddEntriesFrom(input, _repeated_phone_codec);
            break;
          }
          case 24: {
            callerIdSettingsMask_ = (global::Netfox.Snoopers.SnooperHangouts.Models.CallerIdSettingsMask) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Phone : pb::IMessage<Phone> {
    private static readonly pb::MessageParser<Phone> _parser = new pb::MessageParser<Phone>(() => new Phone());
    public static pb::MessageParser<Phone> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[61]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Phone() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Phone(Phone other) : this() {
      PhoneNumber = other.phoneNumber_ != null ? other.PhoneNumber.Clone() : null;
      googleVoice_ = other.googleVoice_;
      verificationStatus_ = other.verificationStatus_;
      discoverable_ = other.discoverable_;
      discoverabilityStatus_ = other.discoverabilityStatus_;
      primary_ = other.primary_;
    }

    public Phone Clone() {
      return new Phone(this);
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber phoneNumber_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = value;
      }
    }

    /// <summary>Field number for the "google_voice" field.</summary>
    public const int GoogleVoiceFieldNumber = 2;
    private bool googleVoice_;
    public bool GoogleVoice {
      get { return googleVoice_; }
      set {
        googleVoice_ = value;
      }
    }

    /// <summary>Field number for the "verification_status" field.</summary>
    public const int VerificationStatusFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus verificationStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus.PHONE_VERIFICATION_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus VerificationStatus {
      get { return verificationStatus_; }
      set {
        verificationStatus_ = value;
      }
    }

    /// <summary>Field number for the "discoverable" field.</summary>
    public const int DiscoverableFieldNumber = 4;
    private bool discoverable_;
    public bool Discoverable {
      get { return discoverable_; }
      set {
        discoverable_ = value;
      }
    }

    /// <summary>Field number for the "discoverability_status" field.</summary>
    public const int DiscoverabilityStatusFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus discoverabilityStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus.PHONE_DISCOVERABILITY_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus DiscoverabilityStatus {
      get { return discoverabilityStatus_; }
      set {
        discoverabilityStatus_ = value;
      }
    }

    /// <summary>Field number for the "primary" field.</summary>
    public const int PrimaryFieldNumber = 6;
    private bool primary_;
    public bool Primary {
      get { return primary_; }
      set {
        primary_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Phone);
    }

    public bool Equals(Phone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PhoneNumber, other.PhoneNumber)) return false;
      if (GoogleVoice != other.GoogleVoice) return false;
      if (VerificationStatus != other.VerificationStatus) return false;
      if (Discoverable != other.Discoverable) return false;
      if (DiscoverabilityStatus != other.DiscoverabilityStatus) return false;
      if (Primary != other.Primary) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (phoneNumber_ != null) hash ^= PhoneNumber.GetHashCode();
      if (GoogleVoice != false) hash ^= GoogleVoice.GetHashCode();
      if (VerificationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus.PHONE_VERIFICATION_STATUS_UNKNOWN) hash ^= VerificationStatus.GetHashCode();
      if (Discoverable != false) hash ^= Discoverable.GetHashCode();
      if (DiscoverabilityStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus.PHONE_DISCOVERABILITY_STATUS_UNKNOWN) hash ^= DiscoverabilityStatus.GetHashCode();
      if (Primary != false) hash ^= Primary.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (phoneNumber_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PhoneNumber);
      }
      if (GoogleVoice != false) {
        output.WriteRawTag(16);
        output.WriteBool(GoogleVoice);
      }
      if (VerificationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus.PHONE_VERIFICATION_STATUS_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) VerificationStatus);
      }
      if (Discoverable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Discoverable);
      }
      if (DiscoverabilityStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus.PHONE_DISCOVERABILITY_STATUS_UNKNOWN) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DiscoverabilityStatus);
      }
      if (Primary != false) {
        output.WriteRawTag(48);
        output.WriteBool(Primary);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (phoneNumber_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhoneNumber);
      }
      if (GoogleVoice != false) {
        size += 1 + 1;
      }
      if (VerificationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus.PHONE_VERIFICATION_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VerificationStatus);
      }
      if (Discoverable != false) {
        size += 1 + 1;
      }
      if (DiscoverabilityStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus.PHONE_DISCOVERABILITY_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DiscoverabilityStatus);
      }
      if (Primary != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(Phone other) {
      if (other == null) {
        return;
      }
      if (other.phoneNumber_ != null) {
        if (phoneNumber_ == null) {
          phoneNumber_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber();
        }
        PhoneNumber.MergeFrom(other.PhoneNumber);
      }
      if (other.GoogleVoice != false) {
        GoogleVoice = other.GoogleVoice;
      }
      if (other.VerificationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus.PHONE_VERIFICATION_STATUS_UNKNOWN) {
        VerificationStatus = other.VerificationStatus;
      }
      if (other.Discoverable != false) {
        Discoverable = other.Discoverable;
      }
      if (other.DiscoverabilityStatus != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus.PHONE_DISCOVERABILITY_STATUS_UNKNOWN) {
        DiscoverabilityStatus = other.DiscoverabilityStatus;
      }
      if (other.Primary != false) {
        Primary = other.Primary;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (phoneNumber_ == null) {
              phoneNumber_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PhoneNumber();
            }
            input.ReadMessage(phoneNumber_);
            break;
          }
          case 16: {
            GoogleVoice = input.ReadBool();
            break;
          }
          case 24: {
            verificationStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.PhoneVerificationStatus) input.ReadEnum();
            break;
          }
          case 32: {
            Discoverable = input.ReadBool();
            break;
          }
          case 40: {
            discoverabilityStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.PhoneDiscoverabilityStatus) input.ReadEnum();
            break;
          }
          case 48: {
            Primary = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class I18nData : pb::IMessage<I18nData> {
    private static readonly pb::MessageParser<I18nData> _parser = new pb::MessageParser<I18nData>(() => new I18nData());
    public static pb::MessageParser<I18nData> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[62]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public I18nData() {
      OnConstruction();
    }

    partial void OnConstruction();

    public I18nData(I18nData other) : this() {
      nationalNumber_ = other.nationalNumber_;
      internationalNumber_ = other.internationalNumber_;
      countryCode_ = other.countryCode_;
      regionCode_ = other.regionCode_;
      isValid_ = other.isValid_;
      validationResult_ = other.validationResult_;
    }

    public I18nData Clone() {
      return new I18nData(this);
    }

    /// <summary>Field number for the "national_number" field.</summary>
    public const int NationalNumberFieldNumber = 1;
    private string nationalNumber_ = "";
    public string NationalNumber {
      get { return nationalNumber_; }
      set {
        nationalNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "international_number" field.</summary>
    public const int InternationalNumberFieldNumber = 2;
    private string internationalNumber_ = "";
    public string InternationalNumber {
      get { return internationalNumber_; }
      set {
        internationalNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 3;
    private ulong countryCode_;
    public ulong CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = value;
      }
    }

    /// <summary>Field number for the "region_code" field.</summary>
    public const int RegionCodeFieldNumber = 4;
    private string regionCode_ = "";
    public string RegionCode {
      get { return regionCode_; }
      set {
        regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_valid" field.</summary>
    public const int IsValidFieldNumber = 5;
    private bool isValid_;
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    /// <summary>Field number for the "validation_result" field.</summary>
    public const int ValidationResultFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult validationResult_ = global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult.PHONE_VALIDATION_RESULT_IS_POSSIBLE;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult ValidationResult {
      get { return validationResult_; }
      set {
        validationResult_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as I18nData);
    }

    public bool Equals(I18nData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NationalNumber != other.NationalNumber) return false;
      if (InternationalNumber != other.InternationalNumber) return false;
      if (CountryCode != other.CountryCode) return false;
      if (RegionCode != other.RegionCode) return false;
      if (IsValid != other.IsValid) return false;
      if (ValidationResult != other.ValidationResult) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (NationalNumber.Length != 0) hash ^= NationalNumber.GetHashCode();
      if (InternationalNumber.Length != 0) hash ^= InternationalNumber.GetHashCode();
      if (CountryCode != 0UL) hash ^= CountryCode.GetHashCode();
      if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      if (ValidationResult != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult.PHONE_VALIDATION_RESULT_IS_POSSIBLE) hash ^= ValidationResult.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (NationalNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NationalNumber);
      }
      if (InternationalNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InternationalNumber);
      }
      if (CountryCode != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(CountryCode);
      }
      if (RegionCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RegionCode);
      }
      if (IsValid != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsValid);
      }
      if (ValidationResult != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult.PHONE_VALIDATION_RESULT_IS_POSSIBLE) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ValidationResult);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (NationalNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NationalNumber);
      }
      if (InternationalNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InternationalNumber);
      }
      if (CountryCode != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CountryCode);
      }
      if (RegionCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
      }
      if (IsValid != false) {
        size += 1 + 1;
      }
      if (ValidationResult != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult.PHONE_VALIDATION_RESULT_IS_POSSIBLE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValidationResult);
      }
      return size;
    }

    public void MergeFrom(I18nData other) {
      if (other == null) {
        return;
      }
      if (other.NationalNumber.Length != 0) {
        NationalNumber = other.NationalNumber;
      }
      if (other.InternationalNumber.Length != 0) {
        InternationalNumber = other.InternationalNumber;
      }
      if (other.CountryCode != 0UL) {
        CountryCode = other.CountryCode;
      }
      if (other.RegionCode.Length != 0) {
        RegionCode = other.RegionCode;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
      if (other.ValidationResult != global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult.PHONE_VALIDATION_RESULT_IS_POSSIBLE) {
        ValidationResult = other.ValidationResult;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            NationalNumber = input.ReadString();
            break;
          }
          case 18: {
            InternationalNumber = input.ReadString();
            break;
          }
          case 24: {
            CountryCode = input.ReadUInt64();
            break;
          }
          case 34: {
            RegionCode = input.ReadString();
            break;
          }
          case 40: {
            IsValid = input.ReadBool();
            break;
          }
          case 48: {
            validationResult_ = (global::Netfox.Snoopers.SnooperHangouts.Models.PhoneValidationResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PhoneNumber : pb::IMessage<PhoneNumber> {
    private static readonly pb::MessageParser<PhoneNumber> _parser = new pb::MessageParser<PhoneNumber>(() => new PhoneNumber());
    public static pb::MessageParser<PhoneNumber> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[63]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PhoneNumber() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PhoneNumber(PhoneNumber other) : this() {
      e164_ = other.e164_;
      I18NData = other.i18NData_ != null ? other.I18NData.Clone() : null;
    }

    public PhoneNumber Clone() {
      return new PhoneNumber(this);
    }

    /// <summary>Field number for the "e164" field.</summary>
    public const int E164FieldNumber = 1;
    private string e164_ = "";
    /// <summary>
    ///  Phone number as string (eg. "+15551234567").
    /// </summary>
    public string E164 {
      get { return e164_; }
      set {
        e164_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "i18n_data" field.</summary>
    public const int I18NDataFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.I18nData i18NData_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.I18nData I18NData {
      get { return i18NData_; }
      set {
        i18NData_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PhoneNumber);
    }

    public bool Equals(PhoneNumber other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (E164 != other.E164) return false;
      if (!object.Equals(I18NData, other.I18NData)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (E164.Length != 0) hash ^= E164.GetHashCode();
      if (i18NData_ != null) hash ^= I18NData.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (E164.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(E164);
      }
      if (i18NData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(I18NData);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (E164.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(E164);
      }
      if (i18NData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I18NData);
      }
      return size;
    }

    public void MergeFrom(PhoneNumber other) {
      if (other == null) {
        return;
      }
      if (other.E164.Length != 0) {
        E164 = other.E164;
      }
      if (other.i18NData_ != null) {
        if (i18NData_ == null) {
          i18NData_ = new global::Netfox.Snoopers.SnooperHangouts.Models.I18nData();
        }
        I18NData.MergeFrom(other.I18NData);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            E164 = input.ReadString();
            break;
          }
          case 18: {
            if (i18NData_ == null) {
              i18NData_ = new global::Netfox.Snoopers.SnooperHangouts.Models.I18nData();
            }
            input.ReadMessage(i18NData_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuggestedContactGroupHash : pb::IMessage<SuggestedContactGroupHash> {
    private static readonly pb::MessageParser<SuggestedContactGroupHash> _parser = new pb::MessageParser<SuggestedContactGroupHash>(() => new SuggestedContactGroupHash());
    public static pb::MessageParser<SuggestedContactGroupHash> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[64]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SuggestedContactGroupHash() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SuggestedContactGroupHash(SuggestedContactGroupHash other) : this() {
      maxResults_ = other.maxResults_;
      hash_ = other.hash_;
    }

    public SuggestedContactGroupHash Clone() {
      return new SuggestedContactGroupHash(this);
    }

    /// <summary>Field number for the "max_results" field.</summary>
    public const int MaxResultsFieldNumber = 1;
    private ulong maxResults_;
    /// <summary>
    ///  Number of results to return from this group.
    /// </summary>
    public ulong MaxResults {
      get { return maxResults_; }
      set {
        maxResults_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    ///  A 4-byte hash.
    /// </summary>
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SuggestedContactGroupHash);
    }

    public bool Equals(SuggestedContactGroupHash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxResults != other.MaxResults) return false;
      if (Hash != other.Hash) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (MaxResults != 0UL) hash ^= MaxResults.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxResults != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MaxResults);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Hash);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (MaxResults != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxResults);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      return size;
    }

    public void MergeFrom(SuggestedContactGroupHash other) {
      if (other == null) {
        return;
      }
      if (other.MaxResults != 0UL) {
        MaxResults = other.MaxResults;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MaxResults = input.ReadUInt64();
            break;
          }
          case 18: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuggestedContact : pb::IMessage<SuggestedContact> {
    private static readonly pb::MessageParser<SuggestedContact> _parser = new pb::MessageParser<SuggestedContact>(() => new SuggestedContact());
    public static pb::MessageParser<SuggestedContact> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[65]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SuggestedContact() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SuggestedContact(SuggestedContact other) : this() {
      Entity = other.entity_ != null ? other.Entity.Clone() : null;
      invitationStatus_ = other.invitationStatus_;
    }

    public SuggestedContact Clone() {
      return new SuggestedContact(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Entity entity_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "invitation_status" field.</summary>
    public const int InvitationStatusFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus invitationStatus_ = global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus InvitationStatus {
      get { return invitationStatus_; }
      set {
        invitationStatus_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SuggestedContact);
    }

    public bool Equals(SuggestedContact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (InvitationStatus != other.InvitationStatus) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) hash ^= InvitationStatus.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InvitationStatus);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvitationStatus);
      }
      return size;
    }

    public void MergeFrom(SuggestedContact other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          entity_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.InvitationStatus != global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus.INVITATION_STATUS_UNKNOWN) {
        InvitationStatus = other.InvitationStatus;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entity_ == null) {
              entity_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Entity();
            }
            input.ReadMessage(entity_);
            break;
          }
          case 16: {
            invitationStatus_ = (global::Netfox.Snoopers.SnooperHangouts.Models.InvitationStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuggestedContactGroup : pb::IMessage<SuggestedContactGroup> {
    private static readonly pb::MessageParser<SuggestedContactGroup> _parser = new pb::MessageParser<SuggestedContactGroup>(() => new SuggestedContactGroup());
    public static pb::MessageParser<SuggestedContactGroup> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[66]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SuggestedContactGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SuggestedContactGroup(SuggestedContactGroup other) : this() {
      hashMatched_ = other.hashMatched_;
      hash_ = other.hash_;
      contact_ = other.contact_.Clone();
    }

    public SuggestedContactGroup Clone() {
      return new SuggestedContactGroup(this);
    }

    /// <summary>Field number for the "hash_matched" field.</summary>
    public const int HashMatchedFieldNumber = 1;
    private bool hashMatched_;
    public bool HashMatched {
      get { return hashMatched_; }
      set {
        hashMatched_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    ///  A 4-byte hash.
    /// </summary>
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contact" field.</summary>
    public const int ContactFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContact> _repeated_contact_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContact.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContact> contact_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContact>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContact> Contact {
      get { return contact_; }
    }

    public override bool Equals(object other) {
      return Equals(other as SuggestedContactGroup);
    }

    public bool Equals(SuggestedContactGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HashMatched != other.HashMatched) return false;
      if (Hash != other.Hash) return false;
      if(!contact_.Equals(other.contact_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (HashMatched != false) hash ^= HashMatched.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      hash ^= contact_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (HashMatched != false) {
        output.WriteRawTag(8);
        output.WriteBool(HashMatched);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Hash);
      }
      contact_.WriteTo(output, _repeated_contact_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (HashMatched != false) {
        size += 1 + 1;
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      size += contact_.CalculateSize(_repeated_contact_codec);
      return size;
    }

    public void MergeFrom(SuggestedContactGroup other) {
      if (other == null) {
        return;
      }
      if (other.HashMatched != false) {
        HashMatched = other.HashMatched;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      contact_.Add(other.contact_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            HashMatched = input.ReadBool();
            break;
          }
          case 18: {
            Hash = input.ReadBytes();
            break;
          }
          case 26: {
            contact_.AddEntriesFrom(input, _repeated_contact_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Pushed from the server to the client to notify it of state changes. Includes
  ///  exactly one type of notification, and optionally updates the attributes of a
  ///  conversation.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StateUpdate : pb::IMessage<StateUpdate> {
    private static readonly pb::MessageParser<StateUpdate> _parser = new pb::MessageParser<StateUpdate>(() => new StateUpdate());
    public static pb::MessageParser<StateUpdate> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[67]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public StateUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    public StateUpdate(StateUpdate other) : this() {
      StateUpdateHeader = other.stateUpdateHeader_ != null ? other.StateUpdateHeader.Clone() : null;
      Conversation = other.conversation_ != null ? other.Conversation.Clone() : null;
      switch (other.StateUpdateCase) {
        case StateUpdateOneofCase.ConversationNotification:
          ConversationNotification = other.ConversationNotification.Clone();
          break;
        case StateUpdateOneofCase.EventNotification:
          EventNotification = other.EventNotification.Clone();
          break;
        case StateUpdateOneofCase.FocusNotification:
          FocusNotification = other.FocusNotification.Clone();
          break;
        case StateUpdateOneofCase.TypingNotification:
          TypingNotification = other.TypingNotification.Clone();
          break;
        case StateUpdateOneofCase.NotificationLevelNotification:
          NotificationLevelNotification = other.NotificationLevelNotification.Clone();
          break;
        case StateUpdateOneofCase.ReplyToInviteNotification:
          ReplyToInviteNotification = other.ReplyToInviteNotification.Clone();
          break;
        case StateUpdateOneofCase.WatermarkNotification:
          WatermarkNotification = other.WatermarkNotification.Clone();
          break;
        case StateUpdateOneofCase.ViewModification:
          ViewModification = other.ViewModification.Clone();
          break;
        case StateUpdateOneofCase.EasterEggNotification:
          EasterEggNotification = other.EasterEggNotification.Clone();
          break;
        case StateUpdateOneofCase.SelfPresenceNotification:
          SelfPresenceNotification = other.SelfPresenceNotification.Clone();
          break;
        case StateUpdateOneofCase.DeleteNotification:
          DeleteNotification = other.DeleteNotification.Clone();
          break;
        case StateUpdateOneofCase.PresenceNotification:
          PresenceNotification = other.PresenceNotification.Clone();
          break;
        case StateUpdateOneofCase.BlockNotification:
          BlockNotification = other.BlockNotification.Clone();
          break;
        case StateUpdateOneofCase.NotificationSettingNotification:
          NotificationSettingNotification = other.NotificationSettingNotification.Clone();
          break;
        case StateUpdateOneofCase.RichPresenceEnabledStateNotification:
          RichPresenceEnabledStateNotification = other.RichPresenceEnabledStateNotification.Clone();
          break;
      }

    }

    public StateUpdate Clone() {
      return new StateUpdate(this);
    }

    /// <summary>Field number for the "state_update_header" field.</summary>
    public const int StateUpdateHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdateHeader stateUpdateHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdateHeader StateUpdateHeader {
      get { return stateUpdateHeader_; }
      set {
        stateUpdateHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation" field.</summary>
    public const int ConversationFieldNumber = 13;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Conversation conversation_;
    /// <summary>
    ///  If set, includes conversation attributes that have been updated by the
    ///  notification.
    /// </summary>
    public global::Netfox.Snoopers.SnooperHangouts.Models.Conversation Conversation {
      get { return conversation_; }
      set {
        conversation_ = value;
      }
    }

    /// <summary>Field number for the "conversation_notification" field.</summary>
    public const int ConversationNotificationFieldNumber = 2;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationNotification ConversationNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.ConversationNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.ConversationNotification;
      }
    }

    /// <summary>Field number for the "event_notification" field.</summary>
    public const int EventNotificationFieldNumber = 3;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventNotification EventNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.EventNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.EventNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.EventNotification;
      }
    }

    /// <summary>Field number for the "focus_notification" field.</summary>
    public const int FocusNotificationFieldNumber = 4;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusNotification FocusNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.FocusNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.FocusNotification;
      }
    }

    /// <summary>Field number for the "typing_notification" field.</summary>
    public const int TypingNotificationFieldNumber = 5;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingNotification TypingNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.TypingNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.TypingNotification;
      }
    }

    /// <summary>Field number for the "notification_level_notification" field.</summary>
    public const int NotificationLevelNotificationFieldNumber = 6;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelNotification NotificationLevelNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.NotificationLevelNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.NotificationLevelNotification;
      }
    }

    /// <summary>Field number for the "reply_to_invite_notification" field.</summary>
    public const int ReplyToInviteNotificationFieldNumber = 7;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteNotification ReplyToInviteNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.ReplyToInviteNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.ReplyToInviteNotification;
      }
    }

    /// <summary>Field number for the "watermark_notification" field.</summary>
    public const int WatermarkNotificationFieldNumber = 8;
    public global::Netfox.Snoopers.SnooperHangouts.Models.WatermarkNotification WatermarkNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.WatermarkNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.WatermarkNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.WatermarkNotification;
      }
    }

    /// <summary>Field number for the "view_modification" field.</summary>
    public const int ViewModificationFieldNumber = 11;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationViewModification ViewModification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.ViewModification ? (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationViewModification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.ViewModification;
      }
    }

    /// <summary>Field number for the "easter_egg_notification" field.</summary>
    public const int EasterEggNotificationFieldNumber = 12;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggNotification EasterEggNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.EasterEggNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.EasterEggNotification;
      }
    }

    /// <summary>Field number for the "self_presence_notification" field.</summary>
    public const int SelfPresenceNotificationFieldNumber = 14;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SelfPresenceNotification SelfPresenceNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.SelfPresenceNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.SelfPresenceNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.SelfPresenceNotification;
      }
    }

    /// <summary>Field number for the "delete_notification" field.</summary>
    public const int DeleteNotificationFieldNumber = 15;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeleteActionNotification DeleteNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.DeleteNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.DeleteActionNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.DeleteNotification;
      }
    }

    /// <summary>Field number for the "presence_notification" field.</summary>
    public const int PresenceNotificationFieldNumber = 16;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PresenceNotification PresenceNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.PresenceNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.PresenceNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.PresenceNotification;
      }
    }

    /// <summary>Field number for the "block_notification" field.</summary>
    public const int BlockNotificationFieldNumber = 17;
    public global::Netfox.Snoopers.SnooperHangouts.Models.BlockNotification BlockNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.BlockNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.BlockNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.BlockNotification;
      }
    }

    /// <summary>Field number for the "notification_setting_notification" field.</summary>
    public const int NotificationSettingNotificationFieldNumber = 19;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SetNotificationSettingNotification NotificationSettingNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.NotificationSettingNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.SetNotificationSettingNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.NotificationSettingNotification;
      }
    }

    /// <summary>Field number for the "rich_presence_enabled_state_notification" field.</summary>
    public const int RichPresenceEnabledStateNotificationFieldNumber = 20;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledStateNotification RichPresenceEnabledStateNotification {
      get { return stateUpdateCase_ == StateUpdateOneofCase.RichPresenceEnabledStateNotification ? (global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledStateNotification) stateUpdate_ : null; }
      set {
        stateUpdate_ = value;
        stateUpdateCase_ = value == null ? StateUpdateOneofCase.None : StateUpdateOneofCase.RichPresenceEnabledStateNotification;
      }
    }

    private object stateUpdate_;
    /// <summary>Enum of possible cases for the "state_update" oneof.</summary>
    public enum StateUpdateOneofCase {
      None = 0,
      ConversationNotification = 2,
      EventNotification = 3,
      FocusNotification = 4,
      TypingNotification = 5,
      NotificationLevelNotification = 6,
      ReplyToInviteNotification = 7,
      WatermarkNotification = 8,
      ViewModification = 11,
      EasterEggNotification = 12,
      SelfPresenceNotification = 14,
      DeleteNotification = 15,
      PresenceNotification = 16,
      BlockNotification = 17,
      NotificationSettingNotification = 19,
      RichPresenceEnabledStateNotification = 20,
    }
    private StateUpdateOneofCase stateUpdateCase_ = StateUpdateOneofCase.None;
    public StateUpdateOneofCase StateUpdateCase {
      get { return stateUpdateCase_; }
    }

    public void ClearStateUpdate() {
      stateUpdateCase_ = StateUpdateOneofCase.None;
      stateUpdate_ = null;
    }

    public override bool Equals(object other) {
      return Equals(other as StateUpdate);
    }

    public bool Equals(StateUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StateUpdateHeader, other.StateUpdateHeader)) return false;
      if (!object.Equals(Conversation, other.Conversation)) return false;
      if (!object.Equals(ConversationNotification, other.ConversationNotification)) return false;
      if (!object.Equals(EventNotification, other.EventNotification)) return false;
      if (!object.Equals(FocusNotification, other.FocusNotification)) return false;
      if (!object.Equals(TypingNotification, other.TypingNotification)) return false;
      if (!object.Equals(NotificationLevelNotification, other.NotificationLevelNotification)) return false;
      if (!object.Equals(ReplyToInviteNotification, other.ReplyToInviteNotification)) return false;
      if (!object.Equals(WatermarkNotification, other.WatermarkNotification)) return false;
      if (!object.Equals(ViewModification, other.ViewModification)) return false;
      if (!object.Equals(EasterEggNotification, other.EasterEggNotification)) return false;
      if (!object.Equals(SelfPresenceNotification, other.SelfPresenceNotification)) return false;
      if (!object.Equals(DeleteNotification, other.DeleteNotification)) return false;
      if (!object.Equals(PresenceNotification, other.PresenceNotification)) return false;
      if (!object.Equals(BlockNotification, other.BlockNotification)) return false;
      if (!object.Equals(NotificationSettingNotification, other.NotificationSettingNotification)) return false;
      if (!object.Equals(RichPresenceEnabledStateNotification, other.RichPresenceEnabledStateNotification)) return false;
      if (StateUpdateCase != other.StateUpdateCase) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (stateUpdateHeader_ != null) hash ^= StateUpdateHeader.GetHashCode();
      if (conversation_ != null) hash ^= Conversation.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.ConversationNotification) hash ^= ConversationNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.EventNotification) hash ^= EventNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.FocusNotification) hash ^= FocusNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.TypingNotification) hash ^= TypingNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.NotificationLevelNotification) hash ^= NotificationLevelNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.ReplyToInviteNotification) hash ^= ReplyToInviteNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.WatermarkNotification) hash ^= WatermarkNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.ViewModification) hash ^= ViewModification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.EasterEggNotification) hash ^= EasterEggNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.SelfPresenceNotification) hash ^= SelfPresenceNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.DeleteNotification) hash ^= DeleteNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.PresenceNotification) hash ^= PresenceNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.BlockNotification) hash ^= BlockNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.NotificationSettingNotification) hash ^= NotificationSettingNotification.GetHashCode();
      if (stateUpdateCase_ == StateUpdateOneofCase.RichPresenceEnabledStateNotification) hash ^= RichPresenceEnabledStateNotification.GetHashCode();
      hash ^= (int) stateUpdateCase_;
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (stateUpdateHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StateUpdateHeader);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.ConversationNotification) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.EventNotification) {
        output.WriteRawTag(26);
        output.WriteMessage(EventNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.FocusNotification) {
        output.WriteRawTag(34);
        output.WriteMessage(FocusNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.TypingNotification) {
        output.WriteRawTag(42);
        output.WriteMessage(TypingNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.NotificationLevelNotification) {
        output.WriteRawTag(50);
        output.WriteMessage(NotificationLevelNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.ReplyToInviteNotification) {
        output.WriteRawTag(58);
        output.WriteMessage(ReplyToInviteNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.WatermarkNotification) {
        output.WriteRawTag(66);
        output.WriteMessage(WatermarkNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.ViewModification) {
        output.WriteRawTag(90);
        output.WriteMessage(ViewModification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.EasterEggNotification) {
        output.WriteRawTag(98);
        output.WriteMessage(EasterEggNotification);
      }
      if (conversation_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Conversation);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.SelfPresenceNotification) {
        output.WriteRawTag(114);
        output.WriteMessage(SelfPresenceNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.DeleteNotification) {
        output.WriteRawTag(122);
        output.WriteMessage(DeleteNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.PresenceNotification) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PresenceNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.BlockNotification) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(BlockNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.NotificationSettingNotification) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NotificationSettingNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.RichPresenceEnabledStateNotification) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RichPresenceEnabledStateNotification);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (stateUpdateHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateUpdateHeader);
      }
      if (conversation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Conversation);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.ConversationNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.EventNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.FocusNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FocusNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.TypingNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypingNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.NotificationLevelNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationLevelNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.ReplyToInviteNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplyToInviteNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.WatermarkNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WatermarkNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.ViewModification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ViewModification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.EasterEggNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EasterEggNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.SelfPresenceNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfPresenceNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.DeleteNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.PresenceNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PresenceNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.BlockNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlockNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.NotificationSettingNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotificationSettingNotification);
      }
      if (stateUpdateCase_ == StateUpdateOneofCase.RichPresenceEnabledStateNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RichPresenceEnabledStateNotification);
      }
      return size;
    }

    public void MergeFrom(StateUpdate other) {
      if (other == null) {
        return;
      }
      if (other.stateUpdateHeader_ != null) {
        if (stateUpdateHeader_ == null) {
          stateUpdateHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdateHeader();
        }
        StateUpdateHeader.MergeFrom(other.StateUpdateHeader);
      }
      if (other.conversation_ != null) {
        if (conversation_ == null) {
          conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
        }
        Conversation.MergeFrom(other.Conversation);
      }
      switch (other.StateUpdateCase) {
        case StateUpdateOneofCase.ConversationNotification:
          ConversationNotification = other.ConversationNotification;
          break;
        case StateUpdateOneofCase.EventNotification:
          EventNotification = other.EventNotification;
          break;
        case StateUpdateOneofCase.FocusNotification:
          FocusNotification = other.FocusNotification;
          break;
        case StateUpdateOneofCase.TypingNotification:
          TypingNotification = other.TypingNotification;
          break;
        case StateUpdateOneofCase.NotificationLevelNotification:
          NotificationLevelNotification = other.NotificationLevelNotification;
          break;
        case StateUpdateOneofCase.ReplyToInviteNotification:
          ReplyToInviteNotification = other.ReplyToInviteNotification;
          break;
        case StateUpdateOneofCase.WatermarkNotification:
          WatermarkNotification = other.WatermarkNotification;
          break;
        case StateUpdateOneofCase.ViewModification:
          ViewModification = other.ViewModification;
          break;
        case StateUpdateOneofCase.EasterEggNotification:
          EasterEggNotification = other.EasterEggNotification;
          break;
        case StateUpdateOneofCase.SelfPresenceNotification:
          SelfPresenceNotification = other.SelfPresenceNotification;
          break;
        case StateUpdateOneofCase.DeleteNotification:
          DeleteNotification = other.DeleteNotification;
          break;
        case StateUpdateOneofCase.PresenceNotification:
          PresenceNotification = other.PresenceNotification;
          break;
        case StateUpdateOneofCase.BlockNotification:
          BlockNotification = other.BlockNotification;
          break;
        case StateUpdateOneofCase.NotificationSettingNotification:
          NotificationSettingNotification = other.NotificationSettingNotification;
          break;
        case StateUpdateOneofCase.RichPresenceEnabledStateNotification:
          RichPresenceEnabledStateNotification = other.RichPresenceEnabledStateNotification;
          break;
      }

    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (stateUpdateHeader_ == null) {
              stateUpdateHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdateHeader();
            }
            input.ReadMessage(stateUpdateHeader_);
            break;
          }
          case 18: {
            global::Netfox.Snoopers.SnooperHangouts.Models.ConversationNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.ConversationNotification) {
              subBuilder.MergeFrom(ConversationNotification);
            }
            input.ReadMessage(subBuilder);
            ConversationNotification = subBuilder;
            break;
          }
          case 26: {
            global::Netfox.Snoopers.SnooperHangouts.Models.EventNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.EventNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.EventNotification) {
              subBuilder.MergeFrom(EventNotification);
            }
            input.ReadMessage(subBuilder);
            EventNotification = subBuilder;
            break;
          }
          case 34: {
            global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.SetFocusNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.FocusNotification) {
              subBuilder.MergeFrom(FocusNotification);
            }
            input.ReadMessage(subBuilder);
            FocusNotification = subBuilder;
            break;
          }
          case 42: {
            global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.SetTypingNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.TypingNotification) {
              subBuilder.MergeFrom(TypingNotification);
            }
            input.ReadMessage(subBuilder);
            TypingNotification = subBuilder;
            break;
          }
          case 50: {
            global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.SetConversationNotificationLevelNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.NotificationLevelNotification) {
              subBuilder.MergeFrom(NotificationLevelNotification);
            }
            input.ReadMessage(subBuilder);
            NotificationLevelNotification = subBuilder;
            break;
          }
          case 58: {
            global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.ReplyToInviteNotification) {
              subBuilder.MergeFrom(ReplyToInviteNotification);
            }
            input.ReadMessage(subBuilder);
            ReplyToInviteNotification = subBuilder;
            break;
          }
          case 66: {
            global::Netfox.Snoopers.SnooperHangouts.Models.WatermarkNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.WatermarkNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.WatermarkNotification) {
              subBuilder.MergeFrom(WatermarkNotification);
            }
            input.ReadMessage(subBuilder);
            WatermarkNotification = subBuilder;
            break;
          }
          case 90: {
            global::Netfox.Snoopers.SnooperHangouts.Models.ConversationViewModification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationViewModification();
            if (stateUpdateCase_ == StateUpdateOneofCase.ViewModification) {
              subBuilder.MergeFrom(ViewModification);
            }
            input.ReadMessage(subBuilder);
            ViewModification = subBuilder;
            break;
          }
          case 98: {
            global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.EasterEggNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.EasterEggNotification) {
              subBuilder.MergeFrom(EasterEggNotification);
            }
            input.ReadMessage(subBuilder);
            EasterEggNotification = subBuilder;
            break;
          }
          case 106: {
            if (conversation_ == null) {
              conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
            }
            input.ReadMessage(conversation_);
            break;
          }
          case 114: {
            global::Netfox.Snoopers.SnooperHangouts.Models.SelfPresenceNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.SelfPresenceNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.SelfPresenceNotification) {
              subBuilder.MergeFrom(SelfPresenceNotification);
            }
            input.ReadMessage(subBuilder);
            SelfPresenceNotification = subBuilder;
            break;
          }
          case 122: {
            global::Netfox.Snoopers.SnooperHangouts.Models.DeleteActionNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.DeleteActionNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.DeleteNotification) {
              subBuilder.MergeFrom(DeleteNotification);
            }
            input.ReadMessage(subBuilder);
            DeleteNotification = subBuilder;
            break;
          }
          case 130: {
            global::Netfox.Snoopers.SnooperHangouts.Models.PresenceNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.PresenceNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.PresenceNotification) {
              subBuilder.MergeFrom(PresenceNotification);
            }
            input.ReadMessage(subBuilder);
            PresenceNotification = subBuilder;
            break;
          }
          case 138: {
            global::Netfox.Snoopers.SnooperHangouts.Models.BlockNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.BlockNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.BlockNotification) {
              subBuilder.MergeFrom(BlockNotification);
            }
            input.ReadMessage(subBuilder);
            BlockNotification = subBuilder;
            break;
          }
          case 154: {
            global::Netfox.Snoopers.SnooperHangouts.Models.SetNotificationSettingNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.SetNotificationSettingNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.NotificationSettingNotification) {
              subBuilder.MergeFrom(NotificationSettingNotification);
            }
            input.ReadMessage(subBuilder);
            NotificationSettingNotification = subBuilder;
            break;
          }
          case 162: {
            global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledStateNotification subBuilder = new global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledStateNotification();
            if (stateUpdateCase_ == StateUpdateOneofCase.RichPresenceEnabledStateNotification) {
              subBuilder.MergeFrom(RichPresenceEnabledStateNotification);
            }
            input.ReadMessage(subBuilder);
            RichPresenceEnabledStateNotification = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Header for StateUpdate messages.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StateUpdateHeader : pb::IMessage<StateUpdateHeader> {
    private static readonly pb::MessageParser<StateUpdateHeader> _parser = new pb::MessageParser<StateUpdateHeader>(() => new StateUpdateHeader());
    public static pb::MessageParser<StateUpdateHeader> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[68]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public StateUpdateHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    public StateUpdateHeader(StateUpdateHeader other) : this() {
      activeClientState_ = other.activeClientState_;
      requestTraceId_ = other.requestTraceId_;
      NotificationSettings = other.notificationSettings_ != null ? other.NotificationSettings.Clone() : null;
      currentServerTime_ = other.currentServerTime_;
    }

    public StateUpdateHeader Clone() {
      return new StateUpdateHeader(this);
    }

    /// <summary>Field number for the "active_client_state" field.</summary>
    public const int ActiveClientStateFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState activeClientState_ = global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState.ACTIVE_CLIENT_STATE_NO_ACTIVE;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState ActiveClientState {
      get { return activeClientState_; }
      set {
        activeClientState_ = value;
      }
    }

    /// <summary>Field number for the "request_trace_id" field.</summary>
    public const int RequestTraceIdFieldNumber = 3;
    private string requestTraceId_ = "";
    public string RequestTraceId {
      get { return requestTraceId_; }
      set {
        requestTraceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification_settings" field.</summary>
    public const int NotificationSettingsFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.NotificationSettings notificationSettings_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.NotificationSettings NotificationSettings {
      get { return notificationSettings_; }
      set {
        notificationSettings_ = value;
      }
    }

    /// <summary>Field number for the "current_server_time" field.</summary>
    public const int CurrentServerTimeFieldNumber = 5;
    private ulong currentServerTime_;
    public ulong CurrentServerTime {
      get { return currentServerTime_; }
      set {
        currentServerTime_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as StateUpdateHeader);
    }

    public bool Equals(StateUpdateHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActiveClientState != other.ActiveClientState) return false;
      if (RequestTraceId != other.RequestTraceId) return false;
      if (!object.Equals(NotificationSettings, other.NotificationSettings)) return false;
      if (CurrentServerTime != other.CurrentServerTime) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ActiveClientState != global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState.ACTIVE_CLIENT_STATE_NO_ACTIVE) hash ^= ActiveClientState.GetHashCode();
      if (RequestTraceId.Length != 0) hash ^= RequestTraceId.GetHashCode();
      if (notificationSettings_ != null) hash ^= NotificationSettings.GetHashCode();
      if (CurrentServerTime != 0UL) hash ^= CurrentServerTime.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ActiveClientState != global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState.ACTIVE_CLIENT_STATE_NO_ACTIVE) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ActiveClientState);
      }
      if (RequestTraceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestTraceId);
      }
      if (notificationSettings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NotificationSettings);
      }
      if (CurrentServerTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CurrentServerTime);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ActiveClientState != global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState.ACTIVE_CLIENT_STATE_NO_ACTIVE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActiveClientState);
      }
      if (RequestTraceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestTraceId);
      }
      if (notificationSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationSettings);
      }
      if (CurrentServerTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentServerTime);
      }
      return size;
    }

    public void MergeFrom(StateUpdateHeader other) {
      if (other == null) {
        return;
      }
      if (other.ActiveClientState != global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState.ACTIVE_CLIENT_STATE_NO_ACTIVE) {
        ActiveClientState = other.ActiveClientState;
      }
      if (other.RequestTraceId.Length != 0) {
        RequestTraceId = other.RequestTraceId;
      }
      if (other.notificationSettings_ != null) {
        if (notificationSettings_ == null) {
          notificationSettings_ = new global::Netfox.Snoopers.SnooperHangouts.Models.NotificationSettings();
        }
        NotificationSettings.MergeFrom(other.NotificationSettings);
      }
      if (other.CurrentServerTime != 0UL) {
        CurrentServerTime = other.CurrentServerTime;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            activeClientState_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ActiveClientState) input.ReadEnum();
            break;
          }
          case 26: {
            RequestTraceId = input.ReadString();
            break;
          }
          case 34: {
            if (notificationSettings_ == null) {
              notificationSettings_ = new global::Netfox.Snoopers.SnooperHangouts.Models.NotificationSettings();
            }
            input.ReadMessage(notificationSettings_);
            break;
          }
          case 40: {
            CurrentServerTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  List of StateUpdate messages to allow pushing multiple notifications from
  ///  the server to the client simultaneously.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchUpdate : pb::IMessage<BatchUpdate> {
    private static readonly pb::MessageParser<BatchUpdate> _parser = new pb::MessageParser<BatchUpdate>(() => new BatchUpdate());
    public static pb::MessageParser<BatchUpdate> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[69]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public BatchUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    public BatchUpdate(BatchUpdate other) : this() {
      stateUpdate_ = other.stateUpdate_.Clone();
    }

    public BatchUpdate Clone() {
      return new BatchUpdate(this);
    }

    /// <summary>Field number for the "state_update" field.</summary>
    public const int StateUpdateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdate> _repeated_stateUpdate_codec
        = pb::FieldCodec.ForMessage(10, global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdate.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdate> stateUpdate_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdate>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.StateUpdate> StateUpdate {
      get { return stateUpdate_; }
    }

    public override bool Equals(object other) {
      return Equals(other as BatchUpdate);
    }

    public bool Equals(BatchUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stateUpdate_.Equals(other.stateUpdate_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= stateUpdate_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      stateUpdate_.WriteTo(output, _repeated_stateUpdate_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += stateUpdate_.CalculateSize(_repeated_stateUpdate_codec);
      return size;
    }

    public void MergeFrom(BatchUpdate other) {
      if (other == null) {
        return;
      }
      stateUpdate_.Add(other.stateUpdate_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            stateUpdate_.AddEntriesFrom(input, _repeated_stateUpdate_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationNotification : pb::IMessage<ConversationNotification> {
    private static readonly pb::MessageParser<ConversationNotification> _parser = new pb::MessageParser<ConversationNotification>(() => new ConversationNotification());
    public static pb::MessageParser<ConversationNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[70]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConversationNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConversationNotification(ConversationNotification other) : this() {
      Conversation = other.conversation_ != null ? other.Conversation.Clone() : null;
    }

    public ConversationNotification Clone() {
      return new ConversationNotification(this);
    }

    /// <summary>Field number for the "conversation" field.</summary>
    public const int ConversationFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Conversation conversation_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Conversation Conversation {
      get { return conversation_; }
      set {
        conversation_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConversationNotification);
    }

    public bool Equals(ConversationNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Conversation, other.Conversation)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversation_ != null) hash ^= Conversation.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Conversation);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Conversation);
      }
      return size;
    }

    public void MergeFrom(ConversationNotification other) {
      if (other == null) {
        return;
      }
      if (other.conversation_ != null) {
        if (conversation_ == null) {
          conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
        }
        Conversation.MergeFrom(other.Conversation);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversation_ == null) {
              conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
            }
            input.ReadMessage(conversation_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventNotification : pb::IMessage<EventNotification> {
    private static readonly pb::MessageParser<EventNotification> _parser = new pb::MessageParser<EventNotification>(() => new EventNotification());
    public static pb::MessageParser<EventNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[71]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EventNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EventNotification(EventNotification other) : this() {
      Event = other.event_ != null ? other.Event.Clone() : null;
    }

    public EventNotification Clone() {
      return new EventNotification(this);
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Event event_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Event Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EventNotification);
    }

    public bool Equals(EventNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Event, other.Event)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (event_ != null) hash ^= Event.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (event_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Event);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (event_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      return size;
    }

    public void MergeFrom(EventNotification other) {
      if (other == null) {
        return;
      }
      if (other.event_ != null) {
        if (event_ == null) {
          event_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
        }
        Event.MergeFrom(other.Event);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (event_ == null) {
              event_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
            }
            input.ReadMessage(event_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetFocusNotification : pb::IMessage<SetFocusNotification> {
    private static readonly pb::MessageParser<SetFocusNotification> _parser = new pb::MessageParser<SetFocusNotification>(() => new SetFocusNotification());
    public static pb::MessageParser<SetFocusNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[72]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetFocusNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetFocusNotification(SetFocusNotification other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      SenderId = other.senderId_ != null ? other.SenderId.Clone() : null;
      timestamp_ = other.timestamp_;
      type_ = other.type_;
      device_ = other.device_;
    }

    public SetFocusNotification Clone() {
      return new SetFocusNotification(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId senderId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.FocusType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.FocusType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice device_ = global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice.FOCUS_DEVICE_UNSPECIFIED;
    public global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetFocusNotification);
    }

    public bool Equals(SetFocusNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (!object.Equals(SenderId, other.SenderId)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Type != other.Type) return false;
      if (Device != other.Device) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      if (Device != global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice.FOCUS_DEVICE_UNSPECIFIED) hash ^= Device.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (senderId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SenderId);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (Device != global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice.FOCUS_DEVICE_UNSPECIFIED) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Device);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (senderId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderId);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Device != global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice.FOCUS_DEVICE_UNSPECIFIED) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Device);
      }
      return size;
    }

    public void MergeFrom(SetFocusNotification other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.senderId_ != null) {
        if (senderId_ == null) {
          senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        SenderId.MergeFrom(other.SenderId);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) {
        Type = other.Type;
      }
      if (other.Device != global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice.FOCUS_DEVICE_UNSPECIFIED) {
        Device = other.Device;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 18: {
            if (senderId_ == null) {
              senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(senderId_);
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 32: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.FocusType) input.ReadEnum();
            break;
          }
          case 40: {
            device_ = (global::Netfox.Snoopers.SnooperHangouts.Models.FocusDevice) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetTypingNotification : pb::IMessage<SetTypingNotification> {
    private static readonly pb::MessageParser<SetTypingNotification> _parser = new pb::MessageParser<SetTypingNotification>(() => new SetTypingNotification());
    public static pb::MessageParser<SetTypingNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[73]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetTypingNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetTypingNotification(SetTypingNotification other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      SenderId = other.senderId_ != null ? other.SenderId.Clone() : null;
      timestamp_ = other.timestamp_;
      type_ = other.type_;
    }

    public SetTypingNotification Clone() {
      return new SetTypingNotification(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId senderId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.TypingType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.TypingType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetTypingNotification);
    }

    public bool Equals(SetTypingNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (!object.Equals(SenderId, other.SenderId)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Type != other.Type) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (senderId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SenderId);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (senderId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderId);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    public void MergeFrom(SetTypingNotification other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.senderId_ != null) {
        if (senderId_ == null) {
          senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        SenderId.MergeFrom(other.SenderId);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) {
        Type = other.Type;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 18: {
            if (senderId_ == null) {
              senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(senderId_);
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 32: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.TypingType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationNotificationLevelNotification : pb::IMessage<SetConversationNotificationLevelNotification> {
    private static readonly pb::MessageParser<SetConversationNotificationLevelNotification> _parser = new pb::MessageParser<SetConversationNotificationLevelNotification>(() => new SetConversationNotificationLevelNotification());
    public static pb::MessageParser<SetConversationNotificationLevelNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[74]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetConversationNotificationLevelNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetConversationNotificationLevelNotification(SetConversationNotificationLevelNotification other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      level_ = other.level_;
      timestamp_ = other.timestamp_;
    }

    public SetConversationNotificationLevelNotification Clone() {
      return new SetConversationNotificationLevelNotification(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel level_ = global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private ulong timestamp_;
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetConversationNotificationLevelNotification);
    }

    public bool Equals(SetConversationNotificationLevelNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (Level != other.Level) return false;
      if (Timestamp != other.Timestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) hash ^= Level.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Level);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Timestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      return size;
    }

    public void MergeFrom(SetConversationNotificationLevelNotification other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        Level = other.Level;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 16: {
            level_ = (global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel) input.ReadEnum();
            break;
          }
          case 32: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReplyToInviteNotification : pb::IMessage<ReplyToInviteNotification> {
    private static readonly pb::MessageParser<ReplyToInviteNotification> _parser = new pb::MessageParser<ReplyToInviteNotification>(() => new ReplyToInviteNotification());
    public static pb::MessageParser<ReplyToInviteNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[75]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ReplyToInviteNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ReplyToInviteNotification(ReplyToInviteNotification other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      type_ = other.type_;
    }

    public ReplyToInviteNotification Clone() {
      return new ReplyToInviteNotification(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType.REPLY_TO_INVITE_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ReplyToInviteNotification);
    }

    public bool Equals(ReplyToInviteNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (Type != other.Type) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType.REPLY_TO_INVITE_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType.REPLY_TO_INVITE_TYPE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType.REPLY_TO_INVITE_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    public void MergeFrom(ReplyToInviteNotification other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType.REPLY_TO_INVITE_TYPE_UNKNOWN) {
        Type = other.Type;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 16: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ReplyToInviteType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WatermarkNotification : pb::IMessage<WatermarkNotification> {
    private static readonly pb::MessageParser<WatermarkNotification> _parser = new pb::MessageParser<WatermarkNotification>(() => new WatermarkNotification());
    public static pb::MessageParser<WatermarkNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[76]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public WatermarkNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public WatermarkNotification(WatermarkNotification other) : this() {
      SenderId = other.senderId_ != null ? other.SenderId.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      latestReadTimestamp_ = other.latestReadTimestamp_;
    }

    public WatermarkNotification Clone() {
      return new WatermarkNotification(this);
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId senderId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "latest_read_timestamp" field.</summary>
    public const int LatestReadTimestampFieldNumber = 3;
    private ulong latestReadTimestamp_;
    public ulong LatestReadTimestamp {
      get { return latestReadTimestamp_; }
      set {
        latestReadTimestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as WatermarkNotification);
    }

    public bool Equals(WatermarkNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SenderId, other.SenderId)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (LatestReadTimestamp != other.LatestReadTimestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (LatestReadTimestamp != 0UL) hash ^= LatestReadTimestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (senderId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SenderId);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (LatestReadTimestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LatestReadTimestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (senderId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderId);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (LatestReadTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LatestReadTimestamp);
      }
      return size;
    }

    public void MergeFrom(WatermarkNotification other) {
      if (other == null) {
        return;
      }
      if (other.senderId_ != null) {
        if (senderId_ == null) {
          senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        SenderId.MergeFrom(other.SenderId);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.LatestReadTimestamp != 0UL) {
        LatestReadTimestamp = other.LatestReadTimestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (senderId_ == null) {
              senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(senderId_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 24: {
            LatestReadTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationViewModification : pb::IMessage<ConversationViewModification> {
    private static readonly pb::MessageParser<ConversationViewModification> _parser = new pb::MessageParser<ConversationViewModification>(() => new ConversationViewModification());
    public static pb::MessageParser<ConversationViewModification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[77]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConversationViewModification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConversationViewModification(ConversationViewModification other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      oldView_ = other.oldView_;
      newView_ = other.newView_;
    }

    public ConversationViewModification Clone() {
      return new ConversationViewModification(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "old_view" field.</summary>
    public const int OldViewFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView oldView_ = global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView OldView {
      get { return oldView_; }
      set {
        oldView_ = value;
      }
    }

    /// <summary>Field number for the "new_view" field.</summary>
    public const int NewViewFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView newView_ = global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView NewView {
      get { return newView_; }
      set {
        newView_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConversationViewModification);
    }

    public bool Equals(ConversationViewModification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (OldView != other.OldView) return false;
      if (NewView != other.NewView) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (OldView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) hash ^= OldView.GetHashCode();
      if (NewView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) hash ^= NewView.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (OldView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OldView);
      }
      if (NewView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) NewView);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (OldView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OldView);
      }
      if (NewView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NewView);
      }
      return size;
    }

    public void MergeFrom(ConversationViewModification other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.OldView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) {
        OldView = other.OldView;
      }
      if (other.NewView != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView.CONVERSATION_VIEW_UNKNOWN) {
        NewView = other.NewView;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 16: {
            oldView_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView) input.ReadEnum();
            break;
          }
          case 24: {
            newView_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationView) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEggNotification : pb::IMessage<EasterEggNotification> {
    private static readonly pb::MessageParser<EasterEggNotification> _parser = new pb::MessageParser<EasterEggNotification>(() => new EasterEggNotification());
    public static pb::MessageParser<EasterEggNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[78]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EasterEggNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EasterEggNotification(EasterEggNotification other) : this() {
      SenderId = other.senderId_ != null ? other.SenderId.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      EasterEgg = other.easterEgg_ != null ? other.EasterEgg.Clone() : null;
    }

    public EasterEggNotification Clone() {
      return new EasterEggNotification(this);
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId senderId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "easter_egg" field.</summary>
    public const int EasterEggFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg easterEgg_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg EasterEgg {
      get { return easterEgg_; }
      set {
        easterEgg_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EasterEggNotification);
    }

    public bool Equals(EasterEggNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SenderId, other.SenderId)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (!object.Equals(EasterEgg, other.EasterEgg)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (easterEgg_ != null) hash ^= EasterEgg.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (senderId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SenderId);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (easterEgg_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EasterEgg);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (senderId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderId);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (easterEgg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EasterEgg);
      }
      return size;
    }

    public void MergeFrom(EasterEggNotification other) {
      if (other == null) {
        return;
      }
      if (other.senderId_ != null) {
        if (senderId_ == null) {
          senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
        }
        SenderId.MergeFrom(other.SenderId);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.easterEgg_ != null) {
        if (easterEgg_ == null) {
          easterEgg_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg();
        }
        EasterEgg.MergeFrom(other.EasterEgg);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (senderId_ == null) {
              senderId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId();
            }
            input.ReadMessage(senderId_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 26: {
            if (easterEgg_ == null) {
              easterEgg_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg();
            }
            input.ReadMessage(easterEgg_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Notifies the status of other clients and mood.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SelfPresenceNotification : pb::IMessage<SelfPresenceNotification> {
    private static readonly pb::MessageParser<SelfPresenceNotification> _parser = new pb::MessageParser<SelfPresenceNotification>(() => new SelfPresenceNotification());
    public static pb::MessageParser<SelfPresenceNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[79]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SelfPresenceNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SelfPresenceNotification(SelfPresenceNotification other) : this() {
      ClientPresenceState = other.clientPresenceState_ != null ? other.ClientPresenceState.Clone() : null;
      DoNotDisturbSetting = other.doNotDisturbSetting_ != null ? other.DoNotDisturbSetting.Clone() : null;
      DesktopOffSetting = other.desktopOffSetting_ != null ? other.DesktopOffSetting.Clone() : null;
      DesktopOffState = other.desktopOffState_ != null ? other.DesktopOffState.Clone() : null;
      MoodState = other.moodState_ != null ? other.MoodState.Clone() : null;
    }

    public SelfPresenceNotification Clone() {
      return new SelfPresenceNotification(this);
    }

    /// <summary>Field number for the "client_presence_state" field.</summary>
    public const int ClientPresenceStateFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceState clientPresenceState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceState ClientPresenceState {
      get { return clientPresenceState_; }
      set {
        clientPresenceState_ = value;
      }
    }

    /// <summary>Field number for the "do_not_disturb_setting" field.</summary>
    public const int DoNotDisturbSettingFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting doNotDisturbSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting DoNotDisturbSetting {
      get { return doNotDisturbSetting_; }
      set {
        doNotDisturbSetting_ = value;
      }
    }

    /// <summary>Field number for the "desktop_off_setting" field.</summary>
    public const int DesktopOffSettingFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting desktopOffSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting DesktopOffSetting {
      get { return desktopOffSetting_; }
      set {
        desktopOffSetting_ = value;
      }
    }

    /// <summary>Field number for the "desktop_off_state" field.</summary>
    public const int DesktopOffStateFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState desktopOffState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState DesktopOffState {
      get { return desktopOffState_; }
      set {
        desktopOffState_ = value;
      }
    }

    /// <summary>Field number for the "mood_state" field.</summary>
    public const int MoodStateFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MoodState moodState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MoodState MoodState {
      get { return moodState_; }
      set {
        moodState_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SelfPresenceNotification);
    }

    public bool Equals(SelfPresenceNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClientPresenceState, other.ClientPresenceState)) return false;
      if (!object.Equals(DoNotDisturbSetting, other.DoNotDisturbSetting)) return false;
      if (!object.Equals(DesktopOffSetting, other.DesktopOffSetting)) return false;
      if (!object.Equals(DesktopOffState, other.DesktopOffState)) return false;
      if (!object.Equals(MoodState, other.MoodState)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (clientPresenceState_ != null) hash ^= ClientPresenceState.GetHashCode();
      if (doNotDisturbSetting_ != null) hash ^= DoNotDisturbSetting.GetHashCode();
      if (desktopOffSetting_ != null) hash ^= DesktopOffSetting.GetHashCode();
      if (desktopOffState_ != null) hash ^= DesktopOffState.GetHashCode();
      if (moodState_ != null) hash ^= MoodState.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (clientPresenceState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClientPresenceState);
      }
      if (doNotDisturbSetting_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DoNotDisturbSetting);
      }
      if (desktopOffSetting_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DesktopOffSetting);
      }
      if (desktopOffState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DesktopOffState);
      }
      if (moodState_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MoodState);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (clientPresenceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientPresenceState);
      }
      if (doNotDisturbSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoNotDisturbSetting);
      }
      if (desktopOffSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesktopOffSetting);
      }
      if (desktopOffState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesktopOffState);
      }
      if (moodState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoodState);
      }
      return size;
    }

    public void MergeFrom(SelfPresenceNotification other) {
      if (other == null) {
        return;
      }
      if (other.clientPresenceState_ != null) {
        if (clientPresenceState_ == null) {
          clientPresenceState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceState();
        }
        ClientPresenceState.MergeFrom(other.ClientPresenceState);
      }
      if (other.doNotDisturbSetting_ != null) {
        if (doNotDisturbSetting_ == null) {
          doNotDisturbSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting();
        }
        DoNotDisturbSetting.MergeFrom(other.DoNotDisturbSetting);
      }
      if (other.desktopOffSetting_ != null) {
        if (desktopOffSetting_ == null) {
          desktopOffSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting();
        }
        DesktopOffSetting.MergeFrom(other.DesktopOffSetting);
      }
      if (other.desktopOffState_ != null) {
        if (desktopOffState_ == null) {
          desktopOffState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState();
        }
        DesktopOffState.MergeFrom(other.DesktopOffState);
      }
      if (other.moodState_ != null) {
        if (moodState_ == null) {
          moodState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodState();
        }
        MoodState.MergeFrom(other.MoodState);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (clientPresenceState_ == null) {
              clientPresenceState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ClientPresenceState();
            }
            input.ReadMessage(clientPresenceState_);
            break;
          }
          case 26: {
            if (doNotDisturbSetting_ == null) {
              doNotDisturbSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting();
            }
            input.ReadMessage(doNotDisturbSetting_);
            break;
          }
          case 34: {
            if (desktopOffSetting_ == null) {
              desktopOffSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting();
            }
            input.ReadMessage(desktopOffSetting_);
            break;
          }
          case 42: {
            if (desktopOffState_ == null) {
              desktopOffState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState();
            }
            input.ReadMessage(desktopOffState_);
            break;
          }
          case 50: {
            if (moodState_ == null) {
              moodState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodState();
            }
            input.ReadMessage(moodState_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteActionNotification : pb::IMessage<DeleteActionNotification> {
    private static readonly pb::MessageParser<DeleteActionNotification> _parser = new pb::MessageParser<DeleteActionNotification>(() => new DeleteActionNotification());
    public static pb::MessageParser<DeleteActionNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[80]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeleteActionNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeleteActionNotification(DeleteActionNotification other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      DeleteAction = other.deleteAction_ != null ? other.DeleteAction.Clone() : null;
    }

    public DeleteActionNotification Clone() {
      return new DeleteActionNotification(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "delete_action" field.</summary>
    public const int DeleteActionFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction deleteAction_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction DeleteAction {
      get { return deleteAction_; }
      set {
        deleteAction_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeleteActionNotification);
    }

    public bool Equals(DeleteActionNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (!object.Equals(DeleteAction, other.DeleteAction)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (deleteAction_ != null) hash ^= DeleteAction.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
      if (deleteAction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeleteAction);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (deleteAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteAction);
      }
      return size;
    }

    public void MergeFrom(DeleteActionNotification other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.deleteAction_ != null) {
        if (deleteAction_ == null) {
          deleteAction_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction();
        }
        DeleteAction.MergeFrom(other.DeleteAction);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 18: {
            if (deleteAction_ == null) {
              deleteAction_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction();
            }
            input.ReadMessage(deleteAction_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PresenceNotification : pb::IMessage<PresenceNotification> {
    private static readonly pb::MessageParser<PresenceNotification> _parser = new pb::MessageParser<PresenceNotification>(() => new PresenceNotification());
    public static pb::MessageParser<PresenceNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[81]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PresenceNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PresenceNotification(PresenceNotification other) : this() {
      presence_ = other.presence_.Clone();
    }

    public PresenceNotification Clone() {
      return new PresenceNotification(this);
    }

    /// <summary>Field number for the "presence" field.</summary>
    public const int PresenceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult> _repeated_presence_codec
        = pb::FieldCodec.ForMessage(10, global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult> presence_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult> Presence {
      get { return presence_; }
    }

    public override bool Equals(object other) {
      return Equals(other as PresenceNotification);
    }

    public bool Equals(PresenceNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!presence_.Equals(other.presence_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= presence_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      presence_.WriteTo(output, _repeated_presence_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += presence_.CalculateSize(_repeated_presence_codec);
      return size;
    }

    public void MergeFrom(PresenceNotification other) {
      if (other == null) {
        return;
      }
      presence_.Add(other.presence_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            presence_.AddEntriesFrom(input, _repeated_presence_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BlockNotification : pb::IMessage<BlockNotification> {
    private static readonly pb::MessageParser<BlockNotification> _parser = new pb::MessageParser<BlockNotification>(() => new BlockNotification());
    public static pb::MessageParser<BlockNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[82]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public BlockNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public BlockNotification(BlockNotification other) : this() {
      blockStateChange_ = other.blockStateChange_.Clone();
    }

    public BlockNotification Clone() {
      return new BlockNotification(this);
    }

    /// <summary>Field number for the "block_state_change" field.</summary>
    public const int BlockStateChangeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.BlockStateChange> _repeated_blockStateChange_codec
        = pb::FieldCodec.ForMessage(10, global::Netfox.Snoopers.SnooperHangouts.Models.BlockStateChange.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.BlockStateChange> blockStateChange_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.BlockStateChange>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.BlockStateChange> BlockStateChange {
      get { return blockStateChange_; }
    }

    public override bool Equals(object other) {
      return Equals(other as BlockNotification);
    }

    public bool Equals(BlockNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockStateChange_.Equals(other.blockStateChange_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockStateChange_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      blockStateChange_.WriteTo(output, _repeated_blockStateChange_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += blockStateChange_.CalculateSize(_repeated_blockStateChange_codec);
      return size;
    }

    public void MergeFrom(BlockNotification other) {
      if (other == null) {
        return;
      }
      blockStateChange_.Add(other.blockStateChange_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            blockStateChange_.AddEntriesFrom(input, _repeated_blockStateChange_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetNotificationSettingNotification : pb::IMessage<SetNotificationSettingNotification> {
    private static readonly pb::MessageParser<SetNotificationSettingNotification> _parser = new pb::MessageParser<SetNotificationSettingNotification>(() => new SetNotificationSettingNotification());
    public static pb::MessageParser<SetNotificationSettingNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[83]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetNotificationSettingNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetNotificationSettingNotification(SetNotificationSettingNotification other) : this() {
      DesktopSoundSetting = other.desktopSoundSetting_ != null ? other.DesktopSoundSetting.Clone() : null;
    }

    public SetNotificationSettingNotification Clone() {
      return new SetNotificationSettingNotification(this);
    }

    /// <summary>Field number for the "desktop_sound_setting" field.</summary>
    public const int DesktopSoundSettingFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting desktopSoundSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting DesktopSoundSetting {
      get { return desktopSoundSetting_; }
      set {
        desktopSoundSetting_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetNotificationSettingNotification);
    }

    public bool Equals(SetNotificationSettingNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DesktopSoundSetting, other.DesktopSoundSetting)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (desktopSoundSetting_ != null) hash ^= DesktopSoundSetting.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (desktopSoundSetting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DesktopSoundSetting);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (desktopSoundSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesktopSoundSetting);
      }
      return size;
    }

    public void MergeFrom(SetNotificationSettingNotification other) {
      if (other == null) {
        return;
      }
      if (other.desktopSoundSetting_ != null) {
        if (desktopSoundSetting_ == null) {
          desktopSoundSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting();
        }
        DesktopSoundSetting.MergeFrom(other.DesktopSoundSetting);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (desktopSoundSetting_ == null) {
              desktopSoundSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting();
            }
            input.ReadMessage(desktopSoundSetting_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RichPresenceEnabledStateNotification : pb::IMessage<RichPresenceEnabledStateNotification> {
    private static readonly pb::MessageParser<RichPresenceEnabledStateNotification> _parser = new pb::MessageParser<RichPresenceEnabledStateNotification>(() => new RichPresenceEnabledStateNotification());
    public static pb::MessageParser<RichPresenceEnabledStateNotification> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[84]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RichPresenceEnabledStateNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RichPresenceEnabledStateNotification(RichPresenceEnabledStateNotification other) : this() {
      richPresenceEnabledState_ = other.richPresenceEnabledState_.Clone();
    }

    public RichPresenceEnabledStateNotification Clone() {
      return new RichPresenceEnabledStateNotification(this);
    }

    /// <summary>Field number for the "rich_presence_enabled_state" field.</summary>
    public const int RichPresenceEnabledStateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState> _repeated_richPresenceEnabledState_codec
        = pb::FieldCodec.ForMessage(10, global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState> richPresenceEnabledState_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceEnabledState> RichPresenceEnabledState {
      get { return richPresenceEnabledState_; }
    }

    public override bool Equals(object other) {
      return Equals(other as RichPresenceEnabledStateNotification);
    }

    public bool Equals(RichPresenceEnabledStateNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!richPresenceEnabledState_.Equals(other.richPresenceEnabledState_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= richPresenceEnabledState_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      richPresenceEnabledState_.WriteTo(output, _repeated_richPresenceEnabledState_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += richPresenceEnabledState_.CalculateSize(_repeated_richPresenceEnabledState_codec);
      return size;
    }

    public void MergeFrom(RichPresenceEnabledStateNotification other) {
      if (other == null) {
        return;
      }
      richPresenceEnabledState_.Add(other.richPresenceEnabledState_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            richPresenceEnabledState_.AddEntriesFrom(input, _repeated_richPresenceEnabledState_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationSpec : pb::IMessage<ConversationSpec> {
    private static readonly pb::MessageParser<ConversationSpec> _parser = new pb::MessageParser<ConversationSpec>(() => new ConversationSpec());
    public static pb::MessageParser<ConversationSpec> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[85]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ConversationSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ConversationSpec(ConversationSpec other) : this() {
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
    }

    public ConversationSpec Clone() {
      return new ConversationSpec(this);
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ConversationSpec);
    }

    public bool Equals(ConversationSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (conversationId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConversationId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      return size;
    }

    public void MergeFrom(ConversationSpec other) {
      if (other == null) {
        return;
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OffnetworkAddress : pb::IMessage<OffnetworkAddress> {
    private static readonly pb::MessageParser<OffnetworkAddress> _parser = new pb::MessageParser<OffnetworkAddress>(() => new OffnetworkAddress());
    public static pb::MessageParser<OffnetworkAddress> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[86]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public OffnetworkAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    public OffnetworkAddress(OffnetworkAddress other) : this() {
      type_ = other.type_;
      email_ = other.email_;
    }

    public OffnetworkAddress Clone() {
      return new OffnetworkAddress(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType.OFFNETWORK_ADDRESS_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as OffnetworkAddress);
    }

    public bool Equals(OffnetworkAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Email != other.Email) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType.OFFNETWORK_ADDRESS_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType.OFFNETWORK_ADDRESS_TYPE_UNKNOWN) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType.OFFNETWORK_ADDRESS_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      return size;
    }

    public void MergeFrom(OffnetworkAddress other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType.OFFNETWORK_ADDRESS_TYPE_UNKNOWN) {
        Type = other.Type;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddressType) input.ReadEnum();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddUserRequest : pb::IMessage<AddUserRequest> {
    private static readonly pb::MessageParser<AddUserRequest> _parser = new pb::MessageParser<AddUserRequest>(() => new AddUserRequest());
    public static pb::MessageParser<AddUserRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[87]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public AddUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public AddUserRequest(AddUserRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      inviteeId_ = other.inviteeId_.Clone();
      EventRequestHeader = other.eventRequestHeader_ != null ? other.EventRequestHeader.Clone() : null;
    }

    public AddUserRequest Clone() {
      return new AddUserRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "invitee_id" field.</summary>
    public const int InviteeIdFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID> _repeated_inviteeId_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID> inviteeId_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID> InviteeId {
      get { return inviteeId_; }
    }

    /// <summary>Field number for the "event_request_header" field.</summary>
    public const int EventRequestHeaderFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader eventRequestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_; }
      set {
        eventRequestHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as AddUserRequest);
    }

    public bool Equals(AddUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if(!inviteeId_.Equals(other.inviteeId_)) return false;
      if (!object.Equals(EventRequestHeader, other.EventRequestHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      hash ^= inviteeId_.GetHashCode();
      if (eventRequestHeader_ != null) hash ^= EventRequestHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      inviteeId_.WriteTo(output, _repeated_inviteeId_codec);
      if (eventRequestHeader_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EventRequestHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      size += inviteeId_.CalculateSize(_repeated_inviteeId_codec);
      if (eventRequestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventRequestHeader);
      }
      return size;
    }

    public void MergeFrom(AddUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      inviteeId_.Add(other.inviteeId_);
      if (other.eventRequestHeader_ != null) {
        if (eventRequestHeader_ == null) {
          eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
        }
        EventRequestHeader.MergeFrom(other.EventRequestHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 26: {
            inviteeId_.AddEntriesFrom(input, _repeated_inviteeId_codec);
            break;
          }
          case 42: {
            if (eventRequestHeader_ == null) {
              eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
            }
            input.ReadMessage(eventRequestHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddUserResponse : pb::IMessage<AddUserResponse> {
    private static readonly pb::MessageParser<AddUserResponse> _parser = new pb::MessageParser<AddUserResponse>(() => new AddUserResponse());
    public static pb::MessageParser<AddUserResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[88]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public AddUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public AddUserResponse(AddUserResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      CreatedEvent = other.createdEvent_ != null ? other.CreatedEvent.Clone() : null;
    }

    public AddUserResponse Clone() {
      return new AddUserResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "created_event" field.</summary>
    public const int CreatedEventFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Event createdEvent_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Event CreatedEvent {
      get { return createdEvent_; }
      set {
        createdEvent_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as AddUserResponse);
    }

    public bool Equals(AddUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(CreatedEvent, other.CreatedEvent)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (createdEvent_ != null) hash ^= CreatedEvent.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (createdEvent_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreatedEvent);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (createdEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedEvent);
      }
      return size;
    }

    public void MergeFrom(AddUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.createdEvent_ != null) {
        if (createdEvent_ == null) {
          createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
        }
        CreatedEvent.MergeFrom(other.CreatedEvent);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 42: {
            if (createdEvent_ == null) {
              createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
            }
            input.ReadMessage(createdEvent_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateConversationRequest : pb::IMessage<CreateConversationRequest> {
    private static readonly pb::MessageParser<CreateConversationRequest> _parser = new pb::MessageParser<CreateConversationRequest>(() => new CreateConversationRequest());
    public static pb::MessageParser<CreateConversationRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[89]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CreateConversationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CreateConversationRequest(CreateConversationRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      type_ = other.type_;
      clientGeneratedId_ = other.clientGeneratedId_;
      name_ = other.name_;
      inviteeId_ = other.inviteeId_.Clone();
    }

    public CreateConversationRequest Clone() {
      return new CreateConversationRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "client_generated_id" field.</summary>
    public const int ClientGeneratedIdFieldNumber = 3;
    private ulong clientGeneratedId_;
    public ulong ClientGeneratedId {
      get { return clientGeneratedId_; }
      set {
        clientGeneratedId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invitee_id" field.</summary>
    public const int InviteeIdFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID> _repeated_inviteeId_codec
        = pb::FieldCodec.ForMessage(42, global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID> inviteeId_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.InviteeID> InviteeId {
      get { return inviteeId_; }
    }

    public override bool Equals(object other) {
      return Equals(other as CreateConversationRequest);
    }

    public bool Equals(CreateConversationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (Type != other.Type) return false;
      if (ClientGeneratedId != other.ClientGeneratedId) return false;
      if (Name != other.Name) return false;
      if(!inviteeId_.Equals(other.inviteeId_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      if (ClientGeneratedId != 0UL) hash ^= ClientGeneratedId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= inviteeId_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (ClientGeneratedId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ClientGeneratedId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      inviteeId_.WriteTo(output, _repeated_inviteeId_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ClientGeneratedId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientGeneratedId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += inviteeId_.CalculateSize(_repeated_inviteeId_codec);
      return size;
    }

    public void MergeFrom(CreateConversationRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType.CONVERSATION_TYPE_UNKNOWN) {
        Type = other.Type;
      }
      if (other.ClientGeneratedId != 0UL) {
        ClientGeneratedId = other.ClientGeneratedId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      inviteeId_.Add(other.inviteeId_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 16: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.ConversationType) input.ReadEnum();
            break;
          }
          case 24: {
            ClientGeneratedId = input.ReadUInt64();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            inviteeId_.AddEntriesFrom(input, _repeated_inviteeId_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateConversationResponse : pb::IMessage<CreateConversationResponse> {
    private static readonly pb::MessageParser<CreateConversationResponse> _parser = new pb::MessageParser<CreateConversationResponse>(() => new CreateConversationResponse());
    public static pb::MessageParser<CreateConversationResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[90]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CreateConversationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CreateConversationResponse(CreateConversationResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      Conversation = other.conversation_ != null ? other.Conversation.Clone() : null;
      newConversationCreated_ = other.newConversationCreated_;
    }

    public CreateConversationResponse Clone() {
      return new CreateConversationResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation" field.</summary>
    public const int ConversationFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Conversation conversation_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Conversation Conversation {
      get { return conversation_; }
      set {
        conversation_ = value;
      }
    }

    /// <summary>Field number for the "new_conversation_created" field.</summary>
    public const int NewConversationCreatedFieldNumber = 7;
    private bool newConversationCreated_;
    public bool NewConversationCreated {
      get { return newConversationCreated_; }
      set {
        newConversationCreated_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as CreateConversationResponse);
    }

    public bool Equals(CreateConversationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(Conversation, other.Conversation)) return false;
      if (NewConversationCreated != other.NewConversationCreated) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (conversation_ != null) hash ^= Conversation.GetHashCode();
      if (NewConversationCreated != false) hash ^= NewConversationCreated.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (conversation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Conversation);
      }
      if (NewConversationCreated != false) {
        output.WriteRawTag(56);
        output.WriteBool(NewConversationCreated);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (conversation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Conversation);
      }
      if (NewConversationCreated != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(CreateConversationResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.conversation_ != null) {
        if (conversation_ == null) {
          conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
        }
        Conversation.MergeFrom(other.Conversation);
      }
      if (other.NewConversationCreated != false) {
        NewConversationCreated = other.NewConversationCreated;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            if (conversation_ == null) {
              conversation_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Conversation();
            }
            input.ReadMessage(conversation_);
            break;
          }
          case 56: {
            NewConversationCreated = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteConversationRequest : pb::IMessage<DeleteConversationRequest> {
    private static readonly pb::MessageParser<DeleteConversationRequest> _parser = new pb::MessageParser<DeleteConversationRequest>(() => new DeleteConversationRequest());
    public static pb::MessageParser<DeleteConversationRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[91]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeleteConversationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeleteConversationRequest(DeleteConversationRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      deleteUpperBoundTimestamp_ = other.deleteUpperBoundTimestamp_;
    }

    public DeleteConversationRequest Clone() {
      return new DeleteConversationRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "delete_upper_bound_timestamp" field.</summary>
    public const int DeleteUpperBoundTimestampFieldNumber = 3;
    private ulong deleteUpperBoundTimestamp_;
    public ulong DeleteUpperBoundTimestamp {
      get { return deleteUpperBoundTimestamp_; }
      set {
        deleteUpperBoundTimestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeleteConversationRequest);
    }

    public bool Equals(DeleteConversationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (DeleteUpperBoundTimestamp != other.DeleteUpperBoundTimestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (DeleteUpperBoundTimestamp != 0UL) hash ^= DeleteUpperBoundTimestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (DeleteUpperBoundTimestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(DeleteUpperBoundTimestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (DeleteUpperBoundTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeleteUpperBoundTimestamp);
      }
      return size;
    }

    public void MergeFrom(DeleteConversationRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.DeleteUpperBoundTimestamp != 0UL) {
        DeleteUpperBoundTimestamp = other.DeleteUpperBoundTimestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 24: {
            DeleteUpperBoundTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteConversationResponse : pb::IMessage<DeleteConversationResponse> {
    private static readonly pb::MessageParser<DeleteConversationResponse> _parser = new pb::MessageParser<DeleteConversationResponse>(() => new DeleteConversationResponse());
    public static pb::MessageParser<DeleteConversationResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[92]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DeleteConversationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DeleteConversationResponse(DeleteConversationResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      DeleteAction = other.deleteAction_ != null ? other.DeleteAction.Clone() : null;
    }

    public DeleteConversationResponse Clone() {
      return new DeleteConversationResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "delete_action" field.</summary>
    public const int DeleteActionFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction deleteAction_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction DeleteAction {
      get { return deleteAction_; }
      set {
        deleteAction_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DeleteConversationResponse);
    }

    public bool Equals(DeleteConversationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(DeleteAction, other.DeleteAction)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (deleteAction_ != null) hash ^= DeleteAction.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (deleteAction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeleteAction);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (deleteAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteAction);
      }
      return size;
    }

    public void MergeFrom(DeleteConversationResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.deleteAction_ != null) {
        if (deleteAction_ == null) {
          deleteAction_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction();
        }
        DeleteAction.MergeFrom(other.DeleteAction);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            if (deleteAction_ == null) {
              deleteAction_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DeleteAction();
            }
            input.ReadMessage(deleteAction_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEggRequest : pb::IMessage<EasterEggRequest> {
    private static readonly pb::MessageParser<EasterEggRequest> _parser = new pb::MessageParser<EasterEggRequest>(() => new EasterEggRequest());
    public static pb::MessageParser<EasterEggRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[93]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EasterEggRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EasterEggRequest(EasterEggRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      EasterEgg = other.easterEgg_ != null ? other.EasterEgg.Clone() : null;
    }

    public EasterEggRequest Clone() {
      return new EasterEggRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "easter_egg" field.</summary>
    public const int EasterEggFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg easterEgg_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg EasterEgg {
      get { return easterEgg_; }
      set {
        easterEgg_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EasterEggRequest);
    }

    public bool Equals(EasterEggRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (!object.Equals(EasterEgg, other.EasterEgg)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (easterEgg_ != null) hash ^= EasterEgg.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (easterEgg_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EasterEgg);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (easterEgg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EasterEgg);
      }
      return size;
    }

    public void MergeFrom(EasterEggRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.easterEgg_ != null) {
        if (easterEgg_ == null) {
          easterEgg_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg();
        }
        EasterEgg.MergeFrom(other.EasterEgg);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 26: {
            if (easterEgg_ == null) {
              easterEgg_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EasterEgg();
            }
            input.ReadMessage(easterEgg_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEggResponse : pb::IMessage<EasterEggResponse> {
    private static readonly pb::MessageParser<EasterEggResponse> _parser = new pb::MessageParser<EasterEggResponse>(() => new EasterEggResponse());
    public static pb::MessageParser<EasterEggResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[94]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EasterEggResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EasterEggResponse(EasterEggResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      timestamp_ = other.timestamp_;
    }

    public EasterEggResponse Clone() {
      return new EasterEggResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private ulong timestamp_;
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EasterEggResponse);
    }

    public bool Equals(EasterEggResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (Timestamp != other.Timestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      return size;
    }

    public void MergeFrom(EasterEggResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetConversationRequest : pb::IMessage<GetConversationRequest> {
    private static readonly pb::MessageParser<GetConversationRequest> _parser = new pb::MessageParser<GetConversationRequest>(() => new GetConversationRequest());
    public static pb::MessageParser<GetConversationRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[95]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetConversationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetConversationRequest(GetConversationRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      ConversationSpec = other.conversationSpec_ != null ? other.ConversationSpec.Clone() : null;
      includeEvent_ = other.includeEvent_;
      maxEventsPerConversation_ = other.maxEventsPerConversation_;
      EventContinuationToken = other.eventContinuationToken_ != null ? other.EventContinuationToken.Clone() : null;
    }

    public GetConversationRequest Clone() {
      return new GetConversationRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_spec" field.</summary>
    public const int ConversationSpecFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationSpec conversationSpec_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationSpec ConversationSpec {
      get { return conversationSpec_; }
      set {
        conversationSpec_ = value;
      }
    }

    /// <summary>Field number for the "include_event" field.</summary>
    public const int IncludeEventFieldNumber = 4;
    private bool includeEvent_;
    public bool IncludeEvent {
      get { return includeEvent_; }
      set {
        includeEvent_ = value;
      }
    }

    /// <summary>Field number for the "max_events_per_conversation" field.</summary>
    public const int MaxEventsPerConversationFieldNumber = 6;
    private ulong maxEventsPerConversation_;
    public ulong MaxEventsPerConversation {
      get { return maxEventsPerConversation_; }
      set {
        maxEventsPerConversation_ = value;
      }
    }

    /// <summary>Field number for the "event_continuation_token" field.</summary>
    public const int EventContinuationTokenFieldNumber = 7;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken eventContinuationToken_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken EventContinuationToken {
      get { return eventContinuationToken_; }
      set {
        eventContinuationToken_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetConversationRequest);
    }

    public bool Equals(GetConversationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(ConversationSpec, other.ConversationSpec)) return false;
      if (IncludeEvent != other.IncludeEvent) return false;
      if (MaxEventsPerConversation != other.MaxEventsPerConversation) return false;
      if (!object.Equals(EventContinuationToken, other.EventContinuationToken)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (conversationSpec_ != null) hash ^= ConversationSpec.GetHashCode();
      if (IncludeEvent != false) hash ^= IncludeEvent.GetHashCode();
      if (MaxEventsPerConversation != 0UL) hash ^= MaxEventsPerConversation.GetHashCode();
      if (eventContinuationToken_ != null) hash ^= EventContinuationToken.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (conversationSpec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationSpec);
      }
      if (IncludeEvent != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeEvent);
      }
      if (MaxEventsPerConversation != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(MaxEventsPerConversation);
      }
      if (eventContinuationToken_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EventContinuationToken);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (conversationSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationSpec);
      }
      if (IncludeEvent != false) {
        size += 1 + 1;
      }
      if (MaxEventsPerConversation != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxEventsPerConversation);
      }
      if (eventContinuationToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventContinuationToken);
      }
      return size;
    }

    public void MergeFrom(GetConversationRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.conversationSpec_ != null) {
        if (conversationSpec_ == null) {
          conversationSpec_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationSpec();
        }
        ConversationSpec.MergeFrom(other.ConversationSpec);
      }
      if (other.IncludeEvent != false) {
        IncludeEvent = other.IncludeEvent;
      }
      if (other.MaxEventsPerConversation != 0UL) {
        MaxEventsPerConversation = other.MaxEventsPerConversation;
      }
      if (other.eventContinuationToken_ != null) {
        if (eventContinuationToken_ == null) {
          eventContinuationToken_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken();
        }
        EventContinuationToken.MergeFrom(other.EventContinuationToken);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (conversationSpec_ == null) {
              conversationSpec_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationSpec();
            }
            input.ReadMessage(conversationSpec_);
            break;
          }
          case 32: {
            IncludeEvent = input.ReadBool();
            break;
          }
          case 48: {
            MaxEventsPerConversation = input.ReadUInt64();
            break;
          }
          case 58: {
            if (eventContinuationToken_ == null) {
              eventContinuationToken_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventContinuationToken();
            }
            input.ReadMessage(eventContinuationToken_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetConversationResponse : pb::IMessage<GetConversationResponse> {
    private static readonly pb::MessageParser<GetConversationResponse> _parser = new pb::MessageParser<GetConversationResponse>(() => new GetConversationResponse());
    public static pb::MessageParser<GetConversationResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[96]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetConversationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetConversationResponse(GetConversationResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      ConversationState = other.conversationState_ != null ? other.ConversationState.Clone() : null;
    }

    public GetConversationResponse Clone() {
      return new GetConversationResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_state" field.</summary>
    public const int ConversationStateFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState conversationState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState ConversationState {
      get { return conversationState_; }
      set {
        conversationState_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetConversationResponse);
    }

    public bool Equals(GetConversationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(ConversationState, other.ConversationState)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (conversationState_ != null) hash ^= ConversationState.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (conversationState_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationState);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (conversationState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationState);
      }
      return size;
    }

    public void MergeFrom(GetConversationResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.conversationState_ != null) {
        if (conversationState_ == null) {
          conversationState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState();
        }
        ConversationState.MergeFrom(other.ConversationState);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            if (conversationState_ == null) {
              conversationState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState();
            }
            input.ReadMessage(conversationState_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetEntityByIdRequest : pb::IMessage<GetEntityByIdRequest> {
    private static readonly pb::MessageParser<GetEntityByIdRequest> _parser = new pb::MessageParser<GetEntityByIdRequest>(() => new GetEntityByIdRequest());
    public static pb::MessageParser<GetEntityByIdRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[97]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetEntityByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetEntityByIdRequest(GetEntityByIdRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      batchLookupSpec_ = other.batchLookupSpec_.Clone();
    }

    public GetEntityByIdRequest Clone() {
      return new GetEntityByIdRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "batch_lookup_spec" field.</summary>
    public const int BatchLookupSpecFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.EntityLookupSpec> _repeated_batchLookupSpec_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.EntityLookupSpec.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EntityLookupSpec> batchLookupSpec_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EntityLookupSpec>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EntityLookupSpec> BatchLookupSpec {
      get { return batchLookupSpec_; }
    }

    public override bool Equals(object other) {
      return Equals(other as GetEntityByIdRequest);
    }

    public bool Equals(GetEntityByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if(!batchLookupSpec_.Equals(other.batchLookupSpec_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      hash ^= batchLookupSpec_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      batchLookupSpec_.WriteTo(output, _repeated_batchLookupSpec_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      size += batchLookupSpec_.CalculateSize(_repeated_batchLookupSpec_codec);
      return size;
    }

    public void MergeFrom(GetEntityByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      batchLookupSpec_.Add(other.batchLookupSpec_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 26: {
            batchLookupSpec_.AddEntriesFrom(input, _repeated_batchLookupSpec_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetEntityByIdResponse : pb::IMessage<GetEntityByIdResponse> {
    private static readonly pb::MessageParser<GetEntityByIdResponse> _parser = new pb::MessageParser<GetEntityByIdResponse>(() => new GetEntityByIdResponse());
    public static pb::MessageParser<GetEntityByIdResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[98]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetEntityByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetEntityByIdResponse(GetEntityByIdResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      entity_ = other.entity_.Clone();
    }

    public GetEntityByIdResponse Clone() {
      return new GetEntityByIdResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> _repeated_entity_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> entity_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> Entity {
      get { return entity_; }
    }

    public override bool Equals(object other) {
      return Equals(other as GetEntityByIdResponse);
    }

    public bool Equals(GetEntityByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if(!entity_.Equals(other.entity_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      hash ^= entity_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      entity_.WriteTo(output, _repeated_entity_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      size += entity_.CalculateSize(_repeated_entity_codec);
      return size;
    }

    public void MergeFrom(GetEntityByIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      entity_.Add(other.entity_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            entity_.AddEntriesFrom(input, _repeated_entity_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSuggestedEntitiesRequest : pb::IMessage<GetSuggestedEntitiesRequest> {
    private static readonly pb::MessageParser<GetSuggestedEntitiesRequest> _parser = new pb::MessageParser<GetSuggestedEntitiesRequest>(() => new GetSuggestedEntitiesRequest());
    public static pb::MessageParser<GetSuggestedEntitiesRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[99]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetSuggestedEntitiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetSuggestedEntitiesRequest(GetSuggestedEntitiesRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      Favorites = other.favorites_ != null ? other.Favorites.Clone() : null;
      ContactsYouHangoutWith = other.contactsYouHangoutWith_ != null ? other.ContactsYouHangoutWith.Clone() : null;
      OtherContactsOnHangouts = other.otherContactsOnHangouts_ != null ? other.OtherContactsOnHangouts.Clone() : null;
      OtherContacts = other.otherContacts_ != null ? other.OtherContacts.Clone() : null;
      DismissedContacts = other.dismissedContacts_ != null ? other.DismissedContacts.Clone() : null;
      PinnedFavorites = other.pinnedFavorites_ != null ? other.PinnedFavorites.Clone() : null;
    }

    public GetSuggestedEntitiesRequest Clone() {
      return new GetSuggestedEntitiesRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "favorites" field.</summary>
    public const int FavoritesFieldNumber = 8;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash favorites_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash Favorites {
      get { return favorites_; }
      set {
        favorites_ = value;
      }
    }

    /// <summary>Field number for the "contacts_you_hangout_with" field.</summary>
    public const int ContactsYouHangoutWithFieldNumber = 9;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash contactsYouHangoutWith_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash ContactsYouHangoutWith {
      get { return contactsYouHangoutWith_; }
      set {
        contactsYouHangoutWith_ = value;
      }
    }

    /// <summary>Field number for the "other_contacts_on_hangouts" field.</summary>
    public const int OtherContactsOnHangoutsFieldNumber = 10;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash otherContactsOnHangouts_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash OtherContactsOnHangouts {
      get { return otherContactsOnHangouts_; }
      set {
        otherContactsOnHangouts_ = value;
      }
    }

    /// <summary>Field number for the "other_contacts" field.</summary>
    public const int OtherContactsFieldNumber = 11;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash otherContacts_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash OtherContacts {
      get { return otherContacts_; }
      set {
        otherContacts_ = value;
      }
    }

    /// <summary>Field number for the "dismissed_contacts" field.</summary>
    public const int DismissedContactsFieldNumber = 12;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash dismissedContacts_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash DismissedContacts {
      get { return dismissedContacts_; }
      set {
        dismissedContacts_ = value;
      }
    }

    /// <summary>Field number for the "pinned_favorites" field.</summary>
    public const int PinnedFavoritesFieldNumber = 13;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash pinnedFavorites_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash PinnedFavorites {
      get { return pinnedFavorites_; }
      set {
        pinnedFavorites_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetSuggestedEntitiesRequest);
    }

    public bool Equals(GetSuggestedEntitiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(Favorites, other.Favorites)) return false;
      if (!object.Equals(ContactsYouHangoutWith, other.ContactsYouHangoutWith)) return false;
      if (!object.Equals(OtherContactsOnHangouts, other.OtherContactsOnHangouts)) return false;
      if (!object.Equals(OtherContacts, other.OtherContacts)) return false;
      if (!object.Equals(DismissedContacts, other.DismissedContacts)) return false;
      if (!object.Equals(PinnedFavorites, other.PinnedFavorites)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (favorites_ != null) hash ^= Favorites.GetHashCode();
      if (contactsYouHangoutWith_ != null) hash ^= ContactsYouHangoutWith.GetHashCode();
      if (otherContactsOnHangouts_ != null) hash ^= OtherContactsOnHangouts.GetHashCode();
      if (otherContacts_ != null) hash ^= OtherContacts.GetHashCode();
      if (dismissedContacts_ != null) hash ^= DismissedContacts.GetHashCode();
      if (pinnedFavorites_ != null) hash ^= PinnedFavorites.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (favorites_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Favorites);
      }
      if (contactsYouHangoutWith_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ContactsYouHangoutWith);
      }
      if (otherContactsOnHangouts_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(OtherContactsOnHangouts);
      }
      if (otherContacts_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(OtherContacts);
      }
      if (dismissedContacts_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DismissedContacts);
      }
      if (pinnedFavorites_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PinnedFavorites);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (favorites_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Favorites);
      }
      if (contactsYouHangoutWith_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactsYouHangoutWith);
      }
      if (otherContactsOnHangouts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherContactsOnHangouts);
      }
      if (otherContacts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherContacts);
      }
      if (dismissedContacts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DismissedContacts);
      }
      if (pinnedFavorites_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PinnedFavorites);
      }
      return size;
    }

    public void MergeFrom(GetSuggestedEntitiesRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.favorites_ != null) {
        if (favorites_ == null) {
          favorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
        }
        Favorites.MergeFrom(other.Favorites);
      }
      if (other.contactsYouHangoutWith_ != null) {
        if (contactsYouHangoutWith_ == null) {
          contactsYouHangoutWith_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
        }
        ContactsYouHangoutWith.MergeFrom(other.ContactsYouHangoutWith);
      }
      if (other.otherContactsOnHangouts_ != null) {
        if (otherContactsOnHangouts_ == null) {
          otherContactsOnHangouts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
        }
        OtherContactsOnHangouts.MergeFrom(other.OtherContactsOnHangouts);
      }
      if (other.otherContacts_ != null) {
        if (otherContacts_ == null) {
          otherContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
        }
        OtherContacts.MergeFrom(other.OtherContacts);
      }
      if (other.dismissedContacts_ != null) {
        if (dismissedContacts_ == null) {
          dismissedContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
        }
        DismissedContacts.MergeFrom(other.DismissedContacts);
      }
      if (other.pinnedFavorites_ != null) {
        if (pinnedFavorites_ == null) {
          pinnedFavorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
        }
        PinnedFavorites.MergeFrom(other.PinnedFavorites);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 66: {
            if (favorites_ == null) {
              favorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
            }
            input.ReadMessage(favorites_);
            break;
          }
          case 74: {
            if (contactsYouHangoutWith_ == null) {
              contactsYouHangoutWith_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
            }
            input.ReadMessage(contactsYouHangoutWith_);
            break;
          }
          case 82: {
            if (otherContactsOnHangouts_ == null) {
              otherContactsOnHangouts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
            }
            input.ReadMessage(otherContactsOnHangouts_);
            break;
          }
          case 90: {
            if (otherContacts_ == null) {
              otherContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
            }
            input.ReadMessage(otherContacts_);
            break;
          }
          case 98: {
            if (dismissedContacts_ == null) {
              dismissedContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
            }
            input.ReadMessage(dismissedContacts_);
            break;
          }
          case 106: {
            if (pinnedFavorites_ == null) {
              pinnedFavorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroupHash();
            }
            input.ReadMessage(pinnedFavorites_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSuggestedEntitiesResponse : pb::IMessage<GetSuggestedEntitiesResponse> {
    private static readonly pb::MessageParser<GetSuggestedEntitiesResponse> _parser = new pb::MessageParser<GetSuggestedEntitiesResponse>(() => new GetSuggestedEntitiesResponse());
    public static pb::MessageParser<GetSuggestedEntitiesResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[100]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetSuggestedEntitiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetSuggestedEntitiesResponse(GetSuggestedEntitiesResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      entity_ = other.entity_.Clone();
      Favorites = other.favorites_ != null ? other.Favorites.Clone() : null;
      ContactsYouHangoutWith = other.contactsYouHangoutWith_ != null ? other.ContactsYouHangoutWith.Clone() : null;
      OtherContactsOnHangouts = other.otherContactsOnHangouts_ != null ? other.OtherContactsOnHangouts.Clone() : null;
      OtherContacts = other.otherContacts_ != null ? other.OtherContacts.Clone() : null;
      DismissedContacts = other.dismissedContacts_ != null ? other.DismissedContacts.Clone() : null;
      PinnedFavorites = other.pinnedFavorites_ != null ? other.PinnedFavorites.Clone() : null;
    }

    public GetSuggestedEntitiesResponse Clone() {
      return new GetSuggestedEntitiesResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> _repeated_entity_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> entity_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> Entity {
      get { return entity_; }
    }

    /// <summary>Field number for the "favorites" field.</summary>
    public const int FavoritesFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup favorites_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup Favorites {
      get { return favorites_; }
      set {
        favorites_ = value;
      }
    }

    /// <summary>Field number for the "contacts_you_hangout_with" field.</summary>
    public const int ContactsYouHangoutWithFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup contactsYouHangoutWith_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup ContactsYouHangoutWith {
      get { return contactsYouHangoutWith_; }
      set {
        contactsYouHangoutWith_ = value;
      }
    }

    /// <summary>Field number for the "other_contacts_on_hangouts" field.</summary>
    public const int OtherContactsOnHangoutsFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup otherContactsOnHangouts_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup OtherContactsOnHangouts {
      get { return otherContactsOnHangouts_; }
      set {
        otherContactsOnHangouts_ = value;
      }
    }

    /// <summary>Field number for the "other_contacts" field.</summary>
    public const int OtherContactsFieldNumber = 7;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup otherContacts_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup OtherContacts {
      get { return otherContacts_; }
      set {
        otherContacts_ = value;
      }
    }

    /// <summary>Field number for the "dismissed_contacts" field.</summary>
    public const int DismissedContactsFieldNumber = 8;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup dismissedContacts_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup DismissedContacts {
      get { return dismissedContacts_; }
      set {
        dismissedContacts_ = value;
      }
    }

    /// <summary>Field number for the "pinned_favorites" field.</summary>
    public const int PinnedFavoritesFieldNumber = 9;
    private global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup pinnedFavorites_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup PinnedFavorites {
      get { return pinnedFavorites_; }
      set {
        pinnedFavorites_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetSuggestedEntitiesResponse);
    }

    public bool Equals(GetSuggestedEntitiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if(!entity_.Equals(other.entity_)) return false;
      if (!object.Equals(Favorites, other.Favorites)) return false;
      if (!object.Equals(ContactsYouHangoutWith, other.ContactsYouHangoutWith)) return false;
      if (!object.Equals(OtherContactsOnHangouts, other.OtherContactsOnHangouts)) return false;
      if (!object.Equals(OtherContacts, other.OtherContacts)) return false;
      if (!object.Equals(DismissedContacts, other.DismissedContacts)) return false;
      if (!object.Equals(PinnedFavorites, other.PinnedFavorites)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      hash ^= entity_.GetHashCode();
      if (favorites_ != null) hash ^= Favorites.GetHashCode();
      if (contactsYouHangoutWith_ != null) hash ^= ContactsYouHangoutWith.GetHashCode();
      if (otherContactsOnHangouts_ != null) hash ^= OtherContactsOnHangouts.GetHashCode();
      if (otherContacts_ != null) hash ^= OtherContacts.GetHashCode();
      if (dismissedContacts_ != null) hash ^= DismissedContacts.GetHashCode();
      if (pinnedFavorites_ != null) hash ^= PinnedFavorites.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      entity_.WriteTo(output, _repeated_entity_codec);
      if (favorites_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Favorites);
      }
      if (contactsYouHangoutWith_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ContactsYouHangoutWith);
      }
      if (otherContactsOnHangouts_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OtherContactsOnHangouts);
      }
      if (otherContacts_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OtherContacts);
      }
      if (dismissedContacts_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DismissedContacts);
      }
      if (pinnedFavorites_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PinnedFavorites);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      size += entity_.CalculateSize(_repeated_entity_codec);
      if (favorites_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Favorites);
      }
      if (contactsYouHangoutWith_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactsYouHangoutWith);
      }
      if (otherContactsOnHangouts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherContactsOnHangouts);
      }
      if (otherContacts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherContacts);
      }
      if (dismissedContacts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DismissedContacts);
      }
      if (pinnedFavorites_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PinnedFavorites);
      }
      return size;
    }

    public void MergeFrom(GetSuggestedEntitiesResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      entity_.Add(other.entity_);
      if (other.favorites_ != null) {
        if (favorites_ == null) {
          favorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
        }
        Favorites.MergeFrom(other.Favorites);
      }
      if (other.contactsYouHangoutWith_ != null) {
        if (contactsYouHangoutWith_ == null) {
          contactsYouHangoutWith_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
        }
        ContactsYouHangoutWith.MergeFrom(other.ContactsYouHangoutWith);
      }
      if (other.otherContactsOnHangouts_ != null) {
        if (otherContactsOnHangouts_ == null) {
          otherContactsOnHangouts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
        }
        OtherContactsOnHangouts.MergeFrom(other.OtherContactsOnHangouts);
      }
      if (other.otherContacts_ != null) {
        if (otherContacts_ == null) {
          otherContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
        }
        OtherContacts.MergeFrom(other.OtherContacts);
      }
      if (other.dismissedContacts_ != null) {
        if (dismissedContacts_ == null) {
          dismissedContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
        }
        DismissedContacts.MergeFrom(other.DismissedContacts);
      }
      if (other.pinnedFavorites_ != null) {
        if (pinnedFavorites_ == null) {
          pinnedFavorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
        }
        PinnedFavorites.MergeFrom(other.PinnedFavorites);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            entity_.AddEntriesFrom(input, _repeated_entity_codec);
            break;
          }
          case 34: {
            if (favorites_ == null) {
              favorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
            }
            input.ReadMessage(favorites_);
            break;
          }
          case 42: {
            if (contactsYouHangoutWith_ == null) {
              contactsYouHangoutWith_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
            }
            input.ReadMessage(contactsYouHangoutWith_);
            break;
          }
          case 50: {
            if (otherContactsOnHangouts_ == null) {
              otherContactsOnHangouts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
            }
            input.ReadMessage(otherContactsOnHangouts_);
            break;
          }
          case 58: {
            if (otherContacts_ == null) {
              otherContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
            }
            input.ReadMessage(otherContacts_);
            break;
          }
          case 66: {
            if (dismissedContacts_ == null) {
              dismissedContacts_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
            }
            input.ReadMessage(dismissedContacts_);
            break;
          }
          case 74: {
            if (pinnedFavorites_ == null) {
              pinnedFavorites_ = new global::Netfox.Snoopers.SnooperHangouts.Models.SuggestedContactGroup();
            }
            input.ReadMessage(pinnedFavorites_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSelfInfoRequest : pb::IMessage<GetSelfInfoRequest> {
    private static readonly pb::MessageParser<GetSelfInfoRequest> _parser = new pb::MessageParser<GetSelfInfoRequest>(() => new GetSelfInfoRequest());
    public static pb::MessageParser<GetSelfInfoRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[101]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetSelfInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetSelfInfoRequest(GetSelfInfoRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
    }

    public GetSelfInfoRequest Clone() {
      return new GetSelfInfoRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetSelfInfoRequest);
    }

    public bool Equals(GetSelfInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      return size;
    }

    public void MergeFrom(GetSelfInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSelfInfoResponse : pb::IMessage<GetSelfInfoResponse> {
    private static readonly pb::MessageParser<GetSelfInfoResponse> _parser = new pb::MessageParser<GetSelfInfoResponse>(() => new GetSelfInfoResponse());
    public static pb::MessageParser<GetSelfInfoResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[102]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetSelfInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetSelfInfoResponse(GetSelfInfoResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      SelfEntity = other.selfEntity_ != null ? other.SelfEntity.Clone() : null;
      isKnownMinor_ = other.isKnownMinor_;
      DndState = other.dndState_ != null ? other.DndState.Clone() : null;
      DesktopOffSetting = other.desktopOffSetting_ != null ? other.DesktopOffSetting.Clone() : null;
      PhoneData = other.phoneData_ != null ? other.PhoneData.Clone() : null;
      configurationBit_ = other.configurationBit_.Clone();
      DesktopOffState = other.desktopOffState_ != null ? other.DesktopOffState.Clone() : null;
      googlePlusUser_ = other.googlePlusUser_;
      DesktopSoundSetting = other.desktopSoundSetting_ != null ? other.DesktopSoundSetting.Clone() : null;
      RichPresenceState = other.richPresenceState_ != null ? other.RichPresenceState.Clone() : null;
      DefaultCountry = other.defaultCountry_ != null ? other.DefaultCountry.Clone() : null;
    }

    public GetSelfInfoResponse Clone() {
      return new GetSelfInfoResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "self_entity" field.</summary>
    public const int SelfEntityFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Entity selfEntity_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Entity SelfEntity {
      get { return selfEntity_; }
      set {
        selfEntity_ = value;
      }
    }

    /// <summary>Field number for the "is_known_minor" field.</summary>
    public const int IsKnownMinorFieldNumber = 3;
    private bool isKnownMinor_;
    public bool IsKnownMinor {
      get { return isKnownMinor_; }
      set {
        isKnownMinor_ = value;
      }
    }

    /// <summary>Field number for the "dnd_state" field.</summary>
    public const int DndStateFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting dndState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting DndState {
      get { return dndState_; }
      set {
        dndState_ = value;
      }
    }

    /// <summary>Field number for the "desktop_off_setting" field.</summary>
    public const int DesktopOffSettingFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting desktopOffSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting DesktopOffSetting {
      get { return desktopOffSetting_; }
      set {
        desktopOffSetting_ = value;
      }
    }

    /// <summary>Field number for the "phone_data" field.</summary>
    public const int PhoneDataFieldNumber = 7;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PhoneData phoneData_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PhoneData PhoneData {
      get { return phoneData_; }
      set {
        phoneData_ = value;
      }
    }

    /// <summary>Field number for the "configuration_bit" field.</summary>
    public const int ConfigurationBitFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBit> _repeated_configurationBit_codec
        = pb::FieldCodec.ForMessage(66, global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBit.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBit> configurationBit_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBit>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConfigurationBit> ConfigurationBit {
      get { return configurationBit_; }
    }

    /// <summary>Field number for the "desktop_off_state" field.</summary>
    public const int DesktopOffStateFieldNumber = 9;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState desktopOffState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState DesktopOffState {
      get { return desktopOffState_; }
      set {
        desktopOffState_ = value;
      }
    }

    /// <summary>Field number for the "google_plus_user" field.</summary>
    public const int GooglePlusUserFieldNumber = 10;
    private bool googlePlusUser_;
    public bool GooglePlusUser {
      get { return googlePlusUser_; }
      set {
        googlePlusUser_ = value;
      }
    }

    /// <summary>Field number for the "desktop_sound_setting" field.</summary>
    public const int DesktopSoundSettingFieldNumber = 11;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting desktopSoundSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting DesktopSoundSetting {
      get { return desktopSoundSetting_; }
      set {
        desktopSoundSetting_ = value;
      }
    }

    /// <summary>Field number for the "rich_presence_state" field.</summary>
    public const int RichPresenceStateFieldNumber = 12;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceState richPresenceState_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceState RichPresenceState {
      get { return richPresenceState_; }
      set {
        richPresenceState_ = value;
      }
    }

    /// <summary>Field number for the "default_country" field.</summary>
    public const int DefaultCountryFieldNumber = 19;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Country defaultCountry_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Country DefaultCountry {
      get { return defaultCountry_; }
      set {
        defaultCountry_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetSelfInfoResponse);
    }

    public bool Equals(GetSelfInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(SelfEntity, other.SelfEntity)) return false;
      if (IsKnownMinor != other.IsKnownMinor) return false;
      if (!object.Equals(DndState, other.DndState)) return false;
      if (!object.Equals(DesktopOffSetting, other.DesktopOffSetting)) return false;
      if (!object.Equals(PhoneData, other.PhoneData)) return false;
      if(!configurationBit_.Equals(other.configurationBit_)) return false;
      if (!object.Equals(DesktopOffState, other.DesktopOffState)) return false;
      if (GooglePlusUser != other.GooglePlusUser) return false;
      if (!object.Equals(DesktopSoundSetting, other.DesktopSoundSetting)) return false;
      if (!object.Equals(RichPresenceState, other.RichPresenceState)) return false;
      if (!object.Equals(DefaultCountry, other.DefaultCountry)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (selfEntity_ != null) hash ^= SelfEntity.GetHashCode();
      if (IsKnownMinor != false) hash ^= IsKnownMinor.GetHashCode();
      if (dndState_ != null) hash ^= DndState.GetHashCode();
      if (desktopOffSetting_ != null) hash ^= DesktopOffSetting.GetHashCode();
      if (phoneData_ != null) hash ^= PhoneData.GetHashCode();
      hash ^= configurationBit_.GetHashCode();
      if (desktopOffState_ != null) hash ^= DesktopOffState.GetHashCode();
      if (GooglePlusUser != false) hash ^= GooglePlusUser.GetHashCode();
      if (desktopSoundSetting_ != null) hash ^= DesktopSoundSetting.GetHashCode();
      if (richPresenceState_ != null) hash ^= RichPresenceState.GetHashCode();
      if (defaultCountry_ != null) hash ^= DefaultCountry.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (selfEntity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SelfEntity);
      }
      if (IsKnownMinor != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsKnownMinor);
      }
      if (dndState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DndState);
      }
      if (desktopOffSetting_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DesktopOffSetting);
      }
      if (phoneData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PhoneData);
      }
      configurationBit_.WriteTo(output, _repeated_configurationBit_codec);
      if (desktopOffState_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DesktopOffState);
      }
      if (GooglePlusUser != false) {
        output.WriteRawTag(80);
        output.WriteBool(GooglePlusUser);
      }
      if (desktopSoundSetting_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DesktopSoundSetting);
      }
      if (richPresenceState_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RichPresenceState);
      }
      if (defaultCountry_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DefaultCountry);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (selfEntity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfEntity);
      }
      if (IsKnownMinor != false) {
        size += 1 + 1;
      }
      if (dndState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DndState);
      }
      if (desktopOffSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesktopOffSetting);
      }
      if (phoneData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhoneData);
      }
      size += configurationBit_.CalculateSize(_repeated_configurationBit_codec);
      if (desktopOffState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesktopOffState);
      }
      if (GooglePlusUser != false) {
        size += 1 + 1;
      }
      if (desktopSoundSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesktopSoundSetting);
      }
      if (richPresenceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RichPresenceState);
      }
      if (defaultCountry_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefaultCountry);
      }
      return size;
    }

    public void MergeFrom(GetSelfInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.selfEntity_ != null) {
        if (selfEntity_ == null) {
          selfEntity_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Entity();
        }
        SelfEntity.MergeFrom(other.SelfEntity);
      }
      if (other.IsKnownMinor != false) {
        IsKnownMinor = other.IsKnownMinor;
      }
      if (other.dndState_ != null) {
        if (dndState_ == null) {
          dndState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting();
        }
        DndState.MergeFrom(other.DndState);
      }
      if (other.desktopOffSetting_ != null) {
        if (desktopOffSetting_ == null) {
          desktopOffSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting();
        }
        DesktopOffSetting.MergeFrom(other.DesktopOffSetting);
      }
      if (other.phoneData_ != null) {
        if (phoneData_ == null) {
          phoneData_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PhoneData();
        }
        PhoneData.MergeFrom(other.PhoneData);
      }
      configurationBit_.Add(other.configurationBit_);
      if (other.desktopOffState_ != null) {
        if (desktopOffState_ == null) {
          desktopOffState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState();
        }
        DesktopOffState.MergeFrom(other.DesktopOffState);
      }
      if (other.GooglePlusUser != false) {
        GooglePlusUser = other.GooglePlusUser;
      }
      if (other.desktopSoundSetting_ != null) {
        if (desktopSoundSetting_ == null) {
          desktopSoundSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting();
        }
        DesktopSoundSetting.MergeFrom(other.DesktopSoundSetting);
      }
      if (other.richPresenceState_ != null) {
        if (richPresenceState_ == null) {
          richPresenceState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceState();
        }
        RichPresenceState.MergeFrom(other.RichPresenceState);
      }
      if (other.defaultCountry_ != null) {
        if (defaultCountry_ == null) {
          defaultCountry_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Country();
        }
        DefaultCountry.MergeFrom(other.DefaultCountry);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            if (selfEntity_ == null) {
              selfEntity_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Entity();
            }
            input.ReadMessage(selfEntity_);
            break;
          }
          case 24: {
            IsKnownMinor = input.ReadBool();
            break;
          }
          case 42: {
            if (dndState_ == null) {
              dndState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DoNotDisturbSetting();
            }
            input.ReadMessage(dndState_);
            break;
          }
          case 50: {
            if (desktopOffSetting_ == null) {
              desktopOffSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting();
            }
            input.ReadMessage(desktopOffSetting_);
            break;
          }
          case 58: {
            if (phoneData_ == null) {
              phoneData_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PhoneData();
            }
            input.ReadMessage(phoneData_);
            break;
          }
          case 66: {
            configurationBit_.AddEntriesFrom(input, _repeated_configurationBit_codec);
            break;
          }
          case 74: {
            if (desktopOffState_ == null) {
              desktopOffState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffState();
            }
            input.ReadMessage(desktopOffState_);
            break;
          }
          case 80: {
            GooglePlusUser = input.ReadBool();
            break;
          }
          case 90: {
            if (desktopSoundSetting_ == null) {
              desktopSoundSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopSoundSetting();
            }
            input.ReadMessage(desktopSoundSetting_);
            break;
          }
          case 98: {
            if (richPresenceState_ == null) {
              richPresenceState_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RichPresenceState();
            }
            input.ReadMessage(richPresenceState_);
            break;
          }
          case 154: {
            if (defaultCountry_ == null) {
              defaultCountry_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Country();
            }
            input.ReadMessage(defaultCountry_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QueryPresenceRequest : pb::IMessage<QueryPresenceRequest> {
    private static readonly pb::MessageParser<QueryPresenceRequest> _parser = new pb::MessageParser<QueryPresenceRequest>(() => new QueryPresenceRequest());
    public static pb::MessageParser<QueryPresenceRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[103]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public QueryPresenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public QueryPresenceRequest(QueryPresenceRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      participantId_ = other.participantId_.Clone();
      fieldMask_ = other.fieldMask_.Clone();
    }

    public QueryPresenceRequest Clone() {
      return new QueryPresenceRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> _repeated_participantId_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> participantId_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ParticipantId> ParticipantId {
      get { return participantId_; }
    }

    /// <summary>Field number for the "field_mask" field.</summary>
    public const int FieldMaskFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.FieldMask> _repeated_fieldMask_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Netfox.Snoopers.SnooperHangouts.Models.FieldMask) x);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.FieldMask> fieldMask_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.FieldMask>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.FieldMask> FieldMask {
      get { return fieldMask_; }
    }

    public override bool Equals(object other) {
      return Equals(other as QueryPresenceRequest);
    }

    public bool Equals(QueryPresenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if(!participantId_.Equals(other.participantId_)) return false;
      if(!fieldMask_.Equals(other.fieldMask_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      hash ^= participantId_.GetHashCode();
      hash ^= fieldMask_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      participantId_.WriteTo(output, _repeated_participantId_codec);
      fieldMask_.WriteTo(output, _repeated_fieldMask_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      size += participantId_.CalculateSize(_repeated_participantId_codec);
      size += fieldMask_.CalculateSize(_repeated_fieldMask_codec);
      return size;
    }

    public void MergeFrom(QueryPresenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      participantId_.Add(other.participantId_);
      fieldMask_.Add(other.fieldMask_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            participantId_.AddEntriesFrom(input, _repeated_participantId_codec);
            break;
          }
          case 26:
          case 24: {
            fieldMask_.AddEntriesFrom(input, _repeated_fieldMask_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QueryPresenceResponse : pb::IMessage<QueryPresenceResponse> {
    private static readonly pb::MessageParser<QueryPresenceResponse> _parser = new pb::MessageParser<QueryPresenceResponse>(() => new QueryPresenceResponse());
    public static pb::MessageParser<QueryPresenceResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[104]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public QueryPresenceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public QueryPresenceResponse(QueryPresenceResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      presenceResult_ = other.presenceResult_.Clone();
    }

    public QueryPresenceResponse Clone() {
      return new QueryPresenceResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "presence_result" field.</summary>
    public const int PresenceResultFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult> _repeated_presenceResult_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult> presenceResult_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.PresenceResult> PresenceResult {
      get { return presenceResult_; }
    }

    public override bool Equals(object other) {
      return Equals(other as QueryPresenceResponse);
    }

    public bool Equals(QueryPresenceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if(!presenceResult_.Equals(other.presenceResult_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      hash ^= presenceResult_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      presenceResult_.WriteTo(output, _repeated_presenceResult_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      size += presenceResult_.CalculateSize(_repeated_presenceResult_codec);
      return size;
    }

    public void MergeFrom(QueryPresenceResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      presenceResult_.Add(other.presenceResult_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            presenceResult_.AddEntriesFrom(input, _repeated_presenceResult_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveUserRequest : pb::IMessage<RemoveUserRequest> {
    private static readonly pb::MessageParser<RemoveUserRequest> _parser = new pb::MessageParser<RemoveUserRequest>(() => new RemoveUserRequest());
    public static pb::MessageParser<RemoveUserRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[105]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RemoveUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RemoveUserRequest(RemoveUserRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      EventRequestHeader = other.eventRequestHeader_ != null ? other.EventRequestHeader.Clone() : null;
    }

    public RemoveUserRequest Clone() {
      return new RemoveUserRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "event_request_header" field.</summary>
    public const int EventRequestHeaderFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader eventRequestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_; }
      set {
        eventRequestHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as RemoveUserRequest);
    }

    public bool Equals(RemoveUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(EventRequestHeader, other.EventRequestHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (eventRequestHeader_ != null) hash ^= EventRequestHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (eventRequestHeader_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EventRequestHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (eventRequestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventRequestHeader);
      }
      return size;
    }

    public void MergeFrom(RemoveUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.eventRequestHeader_ != null) {
        if (eventRequestHeader_ == null) {
          eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
        }
        EventRequestHeader.MergeFrom(other.EventRequestHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 42: {
            if (eventRequestHeader_ == null) {
              eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
            }
            input.ReadMessage(eventRequestHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveUserResponse : pb::IMessage<RemoveUserResponse> {
    private static readonly pb::MessageParser<RemoveUserResponse> _parser = new pb::MessageParser<RemoveUserResponse>(() => new RemoveUserResponse());
    public static pb::MessageParser<RemoveUserResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[106]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RemoveUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RemoveUserResponse(RemoveUserResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      CreatedEvent = other.createdEvent_ != null ? other.CreatedEvent.Clone() : null;
    }

    public RemoveUserResponse Clone() {
      return new RemoveUserResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "created_event" field.</summary>
    public const int CreatedEventFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Event createdEvent_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Event CreatedEvent {
      get { return createdEvent_; }
      set {
        createdEvent_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as RemoveUserResponse);
    }

    public bool Equals(RemoveUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(CreatedEvent, other.CreatedEvent)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (createdEvent_ != null) hash ^= CreatedEvent.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (createdEvent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreatedEvent);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (createdEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedEvent);
      }
      return size;
    }

    public void MergeFrom(RemoveUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.createdEvent_ != null) {
        if (createdEvent_ == null) {
          createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
        }
        CreatedEvent.MergeFrom(other.CreatedEvent);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 34: {
            if (createdEvent_ == null) {
              createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
            }
            input.ReadMessage(createdEvent_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RenameConversationRequest : pb::IMessage<RenameConversationRequest> {
    private static readonly pb::MessageParser<RenameConversationRequest> _parser = new pb::MessageParser<RenameConversationRequest>(() => new RenameConversationRequest());
    public static pb::MessageParser<RenameConversationRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[107]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RenameConversationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RenameConversationRequest(RenameConversationRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      newName_ = other.newName_;
      EventRequestHeader = other.eventRequestHeader_ != null ? other.EventRequestHeader.Clone() : null;
    }

    public RenameConversationRequest Clone() {
      return new RenameConversationRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "new_name" field.</summary>
    public const int NewNameFieldNumber = 3;
    private string newName_ = "";
    public string NewName {
      get { return newName_; }
      set {
        newName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_request_header" field.</summary>
    public const int EventRequestHeaderFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader eventRequestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_; }
      set {
        eventRequestHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as RenameConversationRequest);
    }

    public bool Equals(RenameConversationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (NewName != other.NewName) return false;
      if (!object.Equals(EventRequestHeader, other.EventRequestHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (NewName.Length != 0) hash ^= NewName.GetHashCode();
      if (eventRequestHeader_ != null) hash ^= EventRequestHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (NewName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NewName);
      }
      if (eventRequestHeader_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EventRequestHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (NewName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewName);
      }
      if (eventRequestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventRequestHeader);
      }
      return size;
    }

    public void MergeFrom(RenameConversationRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.NewName.Length != 0) {
        NewName = other.NewName;
      }
      if (other.eventRequestHeader_ != null) {
        if (eventRequestHeader_ == null) {
          eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
        }
        EventRequestHeader.MergeFrom(other.EventRequestHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 26: {
            NewName = input.ReadString();
            break;
          }
          case 42: {
            if (eventRequestHeader_ == null) {
              eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
            }
            input.ReadMessage(eventRequestHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RenameConversationResponse : pb::IMessage<RenameConversationResponse> {
    private static readonly pb::MessageParser<RenameConversationResponse> _parser = new pb::MessageParser<RenameConversationResponse>(() => new RenameConversationResponse());
    public static pb::MessageParser<RenameConversationResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[108]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public RenameConversationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public RenameConversationResponse(RenameConversationResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      CreatedEvent = other.createdEvent_ != null ? other.CreatedEvent.Clone() : null;
    }

    public RenameConversationResponse Clone() {
      return new RenameConversationResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "created_event" field.</summary>
    public const int CreatedEventFieldNumber = 4;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Event createdEvent_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Event CreatedEvent {
      get { return createdEvent_; }
      set {
        createdEvent_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as RenameConversationResponse);
    }

    public bool Equals(RenameConversationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(CreatedEvent, other.CreatedEvent)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (createdEvent_ != null) hash ^= CreatedEvent.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (createdEvent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreatedEvent);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (createdEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedEvent);
      }
      return size;
    }

    public void MergeFrom(RenameConversationResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.createdEvent_ != null) {
        if (createdEvent_ == null) {
          createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
        }
        CreatedEvent.MergeFrom(other.CreatedEvent);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 34: {
            if (createdEvent_ == null) {
              createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
            }
            input.ReadMessage(createdEvent_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchEntitiesRequest : pb::IMessage<SearchEntitiesRequest> {
    private static readonly pb::MessageParser<SearchEntitiesRequest> _parser = new pb::MessageParser<SearchEntitiesRequest>(() => new SearchEntitiesRequest());
    public static pb::MessageParser<SearchEntitiesRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[109]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SearchEntitiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SearchEntitiesRequest(SearchEntitiesRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      query_ = other.query_;
      maxCount_ = other.maxCount_;
    }

    public SearchEntitiesRequest Clone() {
      return new SearchEntitiesRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 3;
    private string query_ = "";
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_count" field.</summary>
    public const int MaxCountFieldNumber = 4;
    private ulong maxCount_;
    public ulong MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SearchEntitiesRequest);
    }

    public bool Equals(SearchEntitiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (Query != other.Query) return false;
      if (MaxCount != other.MaxCount) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (MaxCount != 0UL) hash ^= MaxCount.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Query);
      }
      if (MaxCount != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(MaxCount);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (MaxCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxCount);
      }
      return size;
    }

    public void MergeFrom(SearchEntitiesRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.MaxCount != 0UL) {
        MaxCount = other.MaxCount;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 26: {
            Query = input.ReadString();
            break;
          }
          case 32: {
            MaxCount = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchEntitiesResponse : pb::IMessage<SearchEntitiesResponse> {
    private static readonly pb::MessageParser<SearchEntitiesResponse> _parser = new pb::MessageParser<SearchEntitiesResponse>(() => new SearchEntitiesResponse());
    public static pb::MessageParser<SearchEntitiesResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[110]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SearchEntitiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SearchEntitiesResponse(SearchEntitiesResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      entity_ = other.entity_.Clone();
    }

    public SearchEntitiesResponse Clone() {
      return new SearchEntitiesResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> _repeated_entity_codec
        = pb::FieldCodec.ForMessage(18, global::Netfox.Snoopers.SnooperHangouts.Models.Entity.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> entity_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.Entity> Entity {
      get { return entity_; }
    }

    public override bool Equals(object other) {
      return Equals(other as SearchEntitiesResponse);
    }

    public bool Equals(SearchEntitiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if(!entity_.Equals(other.entity_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      hash ^= entity_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      entity_.WriteTo(output, _repeated_entity_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      size += entity_.CalculateSize(_repeated_entity_codec);
      return size;
    }

    public void MergeFrom(SearchEntitiesResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      entity_.Add(other.entity_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 18: {
            entity_.AddEntriesFrom(input, _repeated_entity_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendChatMessageRequest : pb::IMessage<SendChatMessageRequest> {
    private static readonly pb::MessageParser<SendChatMessageRequest> _parser = new pb::MessageParser<SendChatMessageRequest>(() => new SendChatMessageRequest());
    public static pb::MessageParser<SendChatMessageRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[111]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SendChatMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SendChatMessageRequest(SendChatMessageRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      annotation_ = other.annotation_.Clone();
      MessageContent = other.messageContent_ != null ? other.MessageContent.Clone() : null;
      ExistingMedia = other.existingMedia_ != null ? other.ExistingMedia.Clone() : null;
      EventRequestHeader = other.eventRequestHeader_ != null ? other.EventRequestHeader.Clone() : null;
    }

    public SendChatMessageRequest Clone() {
      return new SendChatMessageRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "annotation" field.</summary>
    public const int AnnotationFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation> _repeated_annotation_codec
        = pb::FieldCodec.ForMessage(42, global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation> annotation_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.EventAnnotation> Annotation {
      get { return annotation_; }
    }

    /// <summary>Field number for the "message_content" field.</summary>
    public const int MessageContentFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent messageContent_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent MessageContent {
      get { return messageContent_; }
      set {
        messageContent_ = value;
      }
    }

    /// <summary>Field number for the "existing_media" field.</summary>
    public const int ExistingMediaFieldNumber = 7;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ExistingMedia existingMedia_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ExistingMedia ExistingMedia {
      get { return existingMedia_; }
      set {
        existingMedia_ = value;
      }
    }

    /// <summary>Field number for the "event_request_header" field.</summary>
    public const int EventRequestHeaderFieldNumber = 8;
    private global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader eventRequestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_; }
      set {
        eventRequestHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SendChatMessageRequest);
    }

    public bool Equals(SendChatMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if(!annotation_.Equals(other.annotation_)) return false;
      if (!object.Equals(MessageContent, other.MessageContent)) return false;
      if (!object.Equals(ExistingMedia, other.ExistingMedia)) return false;
      if (!object.Equals(EventRequestHeader, other.EventRequestHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      hash ^= annotation_.GetHashCode();
      if (messageContent_ != null) hash ^= MessageContent.GetHashCode();
      if (existingMedia_ != null) hash ^= ExistingMedia.GetHashCode();
      if (eventRequestHeader_ != null) hash ^= EventRequestHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      annotation_.WriteTo(output, _repeated_annotation_codec);
      if (messageContent_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MessageContent);
      }
      if (existingMedia_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExistingMedia);
      }
      if (eventRequestHeader_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EventRequestHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      size += annotation_.CalculateSize(_repeated_annotation_codec);
      if (messageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageContent);
      }
      if (existingMedia_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExistingMedia);
      }
      if (eventRequestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventRequestHeader);
      }
      return size;
    }

    public void MergeFrom(SendChatMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      annotation_.Add(other.annotation_);
      if (other.messageContent_ != null) {
        if (messageContent_ == null) {
          messageContent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent();
        }
        MessageContent.MergeFrom(other.MessageContent);
      }
      if (other.existingMedia_ != null) {
        if (existingMedia_ == null) {
          existingMedia_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ExistingMedia();
        }
        ExistingMedia.MergeFrom(other.ExistingMedia);
      }
      if (other.eventRequestHeader_ != null) {
        if (eventRequestHeader_ == null) {
          eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
        }
        EventRequestHeader.MergeFrom(other.EventRequestHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 42: {
            annotation_.AddEntriesFrom(input, _repeated_annotation_codec);
            break;
          }
          case 50: {
            if (messageContent_ == null) {
              messageContent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MessageContent();
            }
            input.ReadMessage(messageContent_);
            break;
          }
          case 58: {
            if (existingMedia_ == null) {
              existingMedia_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ExistingMedia();
            }
            input.ReadMessage(existingMedia_);
            break;
          }
          case 66: {
            if (eventRequestHeader_ == null) {
              eventRequestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.EventRequestHeader();
            }
            input.ReadMessage(eventRequestHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendChatMessageResponse : pb::IMessage<SendChatMessageResponse> {
    private static readonly pb::MessageParser<SendChatMessageResponse> _parser = new pb::MessageParser<SendChatMessageResponse>(() => new SendChatMessageResponse());
    public static pb::MessageParser<SendChatMessageResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[112]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SendChatMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SendChatMessageResponse(SendChatMessageResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      CreatedEvent = other.createdEvent_ != null ? other.CreatedEvent.Clone() : null;
    }

    public SendChatMessageResponse Clone() {
      return new SendChatMessageResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "created_event" field.</summary>
    public const int CreatedEventFieldNumber = 6;
    private global::Netfox.Snoopers.SnooperHangouts.Models.Event createdEvent_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.Event CreatedEvent {
      get { return createdEvent_; }
      set {
        createdEvent_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SendChatMessageResponse);
    }

    public bool Equals(SendChatMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (!object.Equals(CreatedEvent, other.CreatedEvent)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (createdEvent_ != null) hash ^= CreatedEvent.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (createdEvent_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreatedEvent);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (createdEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedEvent);
      }
      return size;
    }

    public void MergeFrom(SendChatMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.createdEvent_ != null) {
        if (createdEvent_ == null) {
          createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
        }
        CreatedEvent.MergeFrom(other.CreatedEvent);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 50: {
            if (createdEvent_ == null) {
              createdEvent_ = new global::Netfox.Snoopers.SnooperHangouts.Models.Event();
            }
            input.ReadMessage(createdEvent_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendOffnetworkInvitationRequest : pb::IMessage<SendOffnetworkInvitationRequest> {
    private static readonly pb::MessageParser<SendOffnetworkInvitationRequest> _parser = new pb::MessageParser<SendOffnetworkInvitationRequest>(() => new SendOffnetworkInvitationRequest());
    public static pb::MessageParser<SendOffnetworkInvitationRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[113]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SendOffnetworkInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SendOffnetworkInvitationRequest(SendOffnetworkInvitationRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      InviteeAddress = other.inviteeAddress_ != null ? other.InviteeAddress.Clone() : null;
    }

    public SendOffnetworkInvitationRequest Clone() {
      return new SendOffnetworkInvitationRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "invitee_address" field.</summary>
    public const int InviteeAddressFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddress inviteeAddress_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddress InviteeAddress {
      get { return inviteeAddress_; }
      set {
        inviteeAddress_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SendOffnetworkInvitationRequest);
    }

    public bool Equals(SendOffnetworkInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(InviteeAddress, other.InviteeAddress)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (inviteeAddress_ != null) hash ^= InviteeAddress.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (inviteeAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InviteeAddress);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (inviteeAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InviteeAddress);
      }
      return size;
    }

    public void MergeFrom(SendOffnetworkInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.inviteeAddress_ != null) {
        if (inviteeAddress_ == null) {
          inviteeAddress_ = new global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddress();
        }
        InviteeAddress.MergeFrom(other.InviteeAddress);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (inviteeAddress_ == null) {
              inviteeAddress_ = new global::Netfox.Snoopers.SnooperHangouts.Models.OffnetworkAddress();
            }
            input.ReadMessage(inviteeAddress_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendOffnetworkInvitationResponse : pb::IMessage<SendOffnetworkInvitationResponse> {
    private static readonly pb::MessageParser<SendOffnetworkInvitationResponse> _parser = new pb::MessageParser<SendOffnetworkInvitationResponse>(() => new SendOffnetworkInvitationResponse());
    public static pb::MessageParser<SendOffnetworkInvitationResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[114]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SendOffnetworkInvitationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SendOffnetworkInvitationResponse(SendOffnetworkInvitationResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
    }

    public SendOffnetworkInvitationResponse Clone() {
      return new SendOffnetworkInvitationResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SendOffnetworkInvitationResponse);
    }

    public bool Equals(SendOffnetworkInvitationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      return size;
    }

    public void MergeFrom(SendOffnetworkInvitationResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetActiveClientRequest : pb::IMessage<SetActiveClientRequest> {
    private static readonly pb::MessageParser<SetActiveClientRequest> _parser = new pb::MessageParser<SetActiveClientRequest>(() => new SetActiveClientRequest());
    public static pb::MessageParser<SetActiveClientRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[115]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetActiveClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetActiveClientRequest(SetActiveClientRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      isActive_ = other.isActive_;
      fullJid_ = other.fullJid_;
      timeoutSecs_ = other.timeoutSecs_;
    }

    public SetActiveClientRequest Clone() {
      return new SetActiveClientRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 2;
    private bool isActive_;
    /// <summary>
    ///  Whether to set the client as active or inactive.
    /// </summary>
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "full_jid" field.</summary>
    public const int FullJidFieldNumber = 3;
    private string fullJid_ = "";
    /// <summary>
    ///  'email/resource'.
    /// </summary>
    public string FullJid {
      get { return fullJid_; }
      set {
        fullJid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout_secs" field.</summary>
    public const int TimeoutSecsFieldNumber = 4;
    private ulong timeoutSecs_;
    /// <summary>
    ///  Timeout in seconds for client to remain active.
    /// </summary>
    public ulong TimeoutSecs {
      get { return timeoutSecs_; }
      set {
        timeoutSecs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetActiveClientRequest);
    }

    public bool Equals(SetActiveClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (IsActive != other.IsActive) return false;
      if (FullJid != other.FullJid) return false;
      if (TimeoutSecs != other.TimeoutSecs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (FullJid.Length != 0) hash ^= FullJid.GetHashCode();
      if (TimeoutSecs != 0UL) hash ^= TimeoutSecs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (IsActive != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsActive);
      }
      if (FullJid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FullJid);
      }
      if (TimeoutSecs != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(TimeoutSecs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (FullJid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullJid);
      }
      if (TimeoutSecs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutSecs);
      }
      return size;
    }

    public void MergeFrom(SetActiveClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.FullJid.Length != 0) {
        FullJid = other.FullJid;
      }
      if (other.TimeoutSecs != 0UL) {
        TimeoutSecs = other.TimeoutSecs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 16: {
            IsActive = input.ReadBool();
            break;
          }
          case 26: {
            FullJid = input.ReadString();
            break;
          }
          case 32: {
            TimeoutSecs = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetActiveClientResponse : pb::IMessage<SetActiveClientResponse> {
    private static readonly pb::MessageParser<SetActiveClientResponse> _parser = new pb::MessageParser<SetActiveClientResponse>(() => new SetActiveClientResponse());
    public static pb::MessageParser<SetActiveClientResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[116]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetActiveClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetActiveClientResponse(SetActiveClientResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
    }

    public SetActiveClientResponse Clone() {
      return new SetActiveClientResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetActiveClientResponse);
    }

    public bool Equals(SetActiveClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      return size;
    }

    public void MergeFrom(SetActiveClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationLevelRequest : pb::IMessage<SetConversationLevelRequest> {
    private static readonly pb::MessageParser<SetConversationLevelRequest> _parser = new pb::MessageParser<SetConversationLevelRequest>(() => new SetConversationLevelRequest());
    public static pb::MessageParser<SetConversationLevelRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[117]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetConversationLevelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetConversationLevelRequest(SetConversationLevelRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
    }

    public SetConversationLevelRequest Clone() {
      return new SetConversationLevelRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetConversationLevelRequest);
    }

    public bool Equals(SetConversationLevelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      return size;
    }

    public void MergeFrom(SetConversationLevelRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationLevelResponse : pb::IMessage<SetConversationLevelResponse> {
    private static readonly pb::MessageParser<SetConversationLevelResponse> _parser = new pb::MessageParser<SetConversationLevelResponse>(() => new SetConversationLevelResponse());
    public static pb::MessageParser<SetConversationLevelResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[118]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetConversationLevelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetConversationLevelResponse(SetConversationLevelResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
    }

    public SetConversationLevelResponse Clone() {
      return new SetConversationLevelResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetConversationLevelResponse);
    }

    public bool Equals(SetConversationLevelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      return size;
    }

    public void MergeFrom(SetConversationLevelResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationNotificationLevelRequest : pb::IMessage<SetConversationNotificationLevelRequest> {
    private static readonly pb::MessageParser<SetConversationNotificationLevelRequest> _parser = new pb::MessageParser<SetConversationNotificationLevelRequest>(() => new SetConversationNotificationLevelRequest());
    public static pb::MessageParser<SetConversationNotificationLevelRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[119]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetConversationNotificationLevelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetConversationNotificationLevelRequest(SetConversationNotificationLevelRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      level_ = other.level_;
    }

    public SetConversationNotificationLevelRequest Clone() {
      return new SetConversationNotificationLevelRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel level_ = global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetConversationNotificationLevelRequest);
    }

    public bool Equals(SetConversationNotificationLevelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (Level != other.Level) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) hash ^= Level.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Level);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      return size;
    }

    public void MergeFrom(SetConversationNotificationLevelRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.Level != global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN) {
        Level = other.Level;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 24: {
            level_ = (global::Netfox.Snoopers.SnooperHangouts.Models.NotificationLevel) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationNotificationLevelResponse : pb::IMessage<SetConversationNotificationLevelResponse> {
    private static readonly pb::MessageParser<SetConversationNotificationLevelResponse> _parser = new pb::MessageParser<SetConversationNotificationLevelResponse>(() => new SetConversationNotificationLevelResponse());
    public static pb::MessageParser<SetConversationNotificationLevelResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[120]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetConversationNotificationLevelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetConversationNotificationLevelResponse(SetConversationNotificationLevelResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      timestamp_ = other.timestamp_;
    }

    public SetConversationNotificationLevelResponse Clone() {
      return new SetConversationNotificationLevelResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private ulong timestamp_;
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetConversationNotificationLevelResponse);
    }

    public bool Equals(SetConversationNotificationLevelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (Timestamp != other.Timestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      return size;
    }

    public void MergeFrom(SetConversationNotificationLevelResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetFocusRequest : pb::IMessage<SetFocusRequest> {
    private static readonly pb::MessageParser<SetFocusRequest> _parser = new pb::MessageParser<SetFocusRequest>(() => new SetFocusRequest());
    public static pb::MessageParser<SetFocusRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[121]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetFocusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetFocusRequest(SetFocusRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      type_ = other.type_;
      timeoutSecs_ = other.timeoutSecs_;
    }

    public SetFocusRequest Clone() {
      return new SetFocusRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.FocusType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.FocusType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "timeout_secs" field.</summary>
    public const int TimeoutSecsFieldNumber = 4;
    private uint timeoutSecs_;
    public uint TimeoutSecs {
      get { return timeoutSecs_; }
      set {
        timeoutSecs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetFocusRequest);
    }

    public bool Equals(SetFocusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (Type != other.Type) return false;
      if (TimeoutSecs != other.TimeoutSecs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      if (TimeoutSecs != 0) hash ^= TimeoutSecs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (TimeoutSecs != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimeoutSecs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (TimeoutSecs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeoutSecs);
      }
      return size;
    }

    public void MergeFrom(SetFocusRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.FocusType.FOCUS_TYPE_UNKNOWN) {
        Type = other.Type;
      }
      if (other.TimeoutSecs != 0) {
        TimeoutSecs = other.TimeoutSecs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 24: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.FocusType) input.ReadEnum();
            break;
          }
          case 32: {
            TimeoutSecs = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetFocusResponse : pb::IMessage<SetFocusResponse> {
    private static readonly pb::MessageParser<SetFocusResponse> _parser = new pb::MessageParser<SetFocusResponse>(() => new SetFocusResponse());
    public static pb::MessageParser<SetFocusResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[122]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetFocusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetFocusResponse(SetFocusResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      timestamp_ = other.timestamp_;
    }

    public SetFocusResponse Clone() {
      return new SetFocusResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private ulong timestamp_;
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetFocusResponse);
    }

    public bool Equals(SetFocusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (Timestamp != other.Timestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      return size;
    }

    public void MergeFrom(SetFocusResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Allows setting one or more of the included presence-related settings.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetPresenceRequest : pb::IMessage<SetPresenceRequest> {
    private static readonly pb::MessageParser<SetPresenceRequest> _parser = new pb::MessageParser<SetPresenceRequest>(() => new SetPresenceRequest());
    public static pb::MessageParser<SetPresenceRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[123]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetPresenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetPresenceRequest(SetPresenceRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      PresenceStateSetting = other.presenceStateSetting_ != null ? other.PresenceStateSetting.Clone() : null;
      DndSetting = other.dndSetting_ != null ? other.DndSetting.Clone() : null;
      DesktopOffSetting = other.desktopOffSetting_ != null ? other.DesktopOffSetting.Clone() : null;
      MoodSetting = other.moodSetting_ != null ? other.MoodSetting.Clone() : null;
    }

    public SetPresenceRequest Clone() {
      return new SetPresenceRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "presence_state_setting" field.</summary>
    public const int PresenceStateSettingFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.PresenceStateSetting presenceStateSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.PresenceStateSetting PresenceStateSetting {
      get { return presenceStateSetting_; }
      set {
        presenceStateSetting_ = value;
      }
    }

    /// <summary>Field number for the "dnd_setting" field.</summary>
    public const int DndSettingFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DndSetting dndSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DndSetting DndSetting {
      get { return dndSetting_; }
      set {
        dndSetting_ = value;
      }
    }

    /// <summary>Field number for the "desktop_off_setting" field.</summary>
    public const int DesktopOffSettingFieldNumber = 5;
    private global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting desktopOffSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting DesktopOffSetting {
      get { return desktopOffSetting_; }
      set {
        desktopOffSetting_ = value;
      }
    }

    /// <summary>Field number for the "mood_setting" field.</summary>
    public const int MoodSettingFieldNumber = 8;
    private global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting moodSetting_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting MoodSetting {
      get { return moodSetting_; }
      set {
        moodSetting_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetPresenceRequest);
    }

    public bool Equals(SetPresenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(PresenceStateSetting, other.PresenceStateSetting)) return false;
      if (!object.Equals(DndSetting, other.DndSetting)) return false;
      if (!object.Equals(DesktopOffSetting, other.DesktopOffSetting)) return false;
      if (!object.Equals(MoodSetting, other.MoodSetting)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (presenceStateSetting_ != null) hash ^= PresenceStateSetting.GetHashCode();
      if (dndSetting_ != null) hash ^= DndSetting.GetHashCode();
      if (desktopOffSetting_ != null) hash ^= DesktopOffSetting.GetHashCode();
      if (moodSetting_ != null) hash ^= MoodSetting.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (presenceStateSetting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PresenceStateSetting);
      }
      if (dndSetting_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DndSetting);
      }
      if (desktopOffSetting_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DesktopOffSetting);
      }
      if (moodSetting_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MoodSetting);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (presenceStateSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PresenceStateSetting);
      }
      if (dndSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DndSetting);
      }
      if (desktopOffSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesktopOffSetting);
      }
      if (moodSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoodSetting);
      }
      return size;
    }

    public void MergeFrom(SetPresenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.presenceStateSetting_ != null) {
        if (presenceStateSetting_ == null) {
          presenceStateSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PresenceStateSetting();
        }
        PresenceStateSetting.MergeFrom(other.PresenceStateSetting);
      }
      if (other.dndSetting_ != null) {
        if (dndSetting_ == null) {
          dndSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DndSetting();
        }
        DndSetting.MergeFrom(other.DndSetting);
      }
      if (other.desktopOffSetting_ != null) {
        if (desktopOffSetting_ == null) {
          desktopOffSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting();
        }
        DesktopOffSetting.MergeFrom(other.DesktopOffSetting);
      }
      if (other.moodSetting_ != null) {
        if (moodSetting_ == null) {
          moodSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting();
        }
        MoodSetting.MergeFrom(other.MoodSetting);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (presenceStateSetting_ == null) {
              presenceStateSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.PresenceStateSetting();
            }
            input.ReadMessage(presenceStateSetting_);
            break;
          }
          case 26: {
            if (dndSetting_ == null) {
              dndSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DndSetting();
            }
            input.ReadMessage(dndSetting_);
            break;
          }
          case 42: {
            if (desktopOffSetting_ == null) {
              desktopOffSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.DesktopOffSetting();
            }
            input.ReadMessage(desktopOffSetting_);
            break;
          }
          case 66: {
            if (moodSetting_ == null) {
              moodSetting_ = new global::Netfox.Snoopers.SnooperHangouts.Models.MoodSetting();
            }
            input.ReadMessage(moodSetting_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetPresenceResponse : pb::IMessage<SetPresenceResponse> {
    private static readonly pb::MessageParser<SetPresenceResponse> _parser = new pb::MessageParser<SetPresenceResponse>(() => new SetPresenceResponse());
    public static pb::MessageParser<SetPresenceResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[124]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetPresenceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetPresenceResponse(SetPresenceResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
    }

    public SetPresenceResponse Clone() {
      return new SetPresenceResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetPresenceResponse);
    }

    public bool Equals(SetPresenceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      return size;
    }

    public void MergeFrom(SetPresenceResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetTypingRequest : pb::IMessage<SetTypingRequest> {
    private static readonly pb::MessageParser<SetTypingRequest> _parser = new pb::MessageParser<SetTypingRequest>(() => new SetTypingRequest());
    public static pb::MessageParser<SetTypingRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[125]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetTypingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetTypingRequest(SetTypingRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      type_ = other.type_;
    }

    public SetTypingRequest Clone() {
      return new SetTypingRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Netfox.Snoopers.SnooperHangouts.Models.TypingType type_ = global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN;
    public global::Netfox.Snoopers.SnooperHangouts.Models.TypingType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetTypingRequest);
    }

    public bool Equals(SetTypingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (Type != other.Type) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) hash ^= Type.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    public void MergeFrom(SetTypingRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.Type != global::Netfox.Snoopers.SnooperHangouts.Models.TypingType.TYPING_TYPE_UNKNOWN) {
        Type = other.Type;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 24: {
            type_ = (global::Netfox.Snoopers.SnooperHangouts.Models.TypingType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetTypingResponse : pb::IMessage<SetTypingResponse> {
    private static readonly pb::MessageParser<SetTypingResponse> _parser = new pb::MessageParser<SetTypingResponse>(() => new SetTypingResponse());
    public static pb::MessageParser<SetTypingResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[126]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SetTypingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SetTypingResponse(SetTypingResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      timestamp_ = other.timestamp_;
    }

    public SetTypingResponse Clone() {
      return new SetTypingResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private ulong timestamp_;
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SetTypingResponse);
    }

    public bool Equals(SetTypingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (Timestamp != other.Timestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      return size;
    }

    public void MergeFrom(SetTypingResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncAllNewEventsRequest : pb::IMessage<SyncAllNewEventsRequest> {
    private static readonly pb::MessageParser<SyncAllNewEventsRequest> _parser = new pb::MessageParser<SyncAllNewEventsRequest>(() => new SyncAllNewEventsRequest());
    public static pb::MessageParser<SyncAllNewEventsRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[127]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SyncAllNewEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SyncAllNewEventsRequest(SyncAllNewEventsRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      lastSyncTimestamp_ = other.lastSyncTimestamp_;
      maxResponseSizeBytes_ = other.maxResponseSizeBytes_;
    }

    public SyncAllNewEventsRequest Clone() {
      return new SyncAllNewEventsRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "last_sync_timestamp" field.</summary>
    public const int LastSyncTimestampFieldNumber = 2;
    private ulong lastSyncTimestamp_;
    /// <summary>
    ///  Timestamp after which to return all new events.
    /// </summary>
    public ulong LastSyncTimestamp {
      get { return lastSyncTimestamp_; }
      set {
        lastSyncTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "max_response_size_bytes" field.</summary>
    public const int MaxResponseSizeBytesFieldNumber = 8;
    private ulong maxResponseSizeBytes_;
    public ulong MaxResponseSizeBytes {
      get { return maxResponseSizeBytes_; }
      set {
        maxResponseSizeBytes_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SyncAllNewEventsRequest);
    }

    public bool Equals(SyncAllNewEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (LastSyncTimestamp != other.LastSyncTimestamp) return false;
      if (MaxResponseSizeBytes != other.MaxResponseSizeBytes) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (LastSyncTimestamp != 0UL) hash ^= LastSyncTimestamp.GetHashCode();
      if (MaxResponseSizeBytes != 0UL) hash ^= MaxResponseSizeBytes.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (LastSyncTimestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(LastSyncTimestamp);
      }
      if (MaxResponseSizeBytes != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(MaxResponseSizeBytes);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (LastSyncTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastSyncTimestamp);
      }
      if (MaxResponseSizeBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxResponseSizeBytes);
      }
      return size;
    }

    public void MergeFrom(SyncAllNewEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.LastSyncTimestamp != 0UL) {
        LastSyncTimestamp = other.LastSyncTimestamp;
      }
      if (other.MaxResponseSizeBytes != 0UL) {
        MaxResponseSizeBytes = other.MaxResponseSizeBytes;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 16: {
            LastSyncTimestamp = input.ReadUInt64();
            break;
          }
          case 64: {
            MaxResponseSizeBytes = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncAllNewEventsResponse : pb::IMessage<SyncAllNewEventsResponse> {
    private static readonly pb::MessageParser<SyncAllNewEventsResponse> _parser = new pb::MessageParser<SyncAllNewEventsResponse>(() => new SyncAllNewEventsResponse());
    public static pb::MessageParser<SyncAllNewEventsResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[128]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SyncAllNewEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SyncAllNewEventsResponse(SyncAllNewEventsResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      syncTimestamp_ = other.syncTimestamp_;
      conversationState_ = other.conversationState_.Clone();
    }

    public SyncAllNewEventsResponse Clone() {
      return new SyncAllNewEventsResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "sync_timestamp" field.</summary>
    public const int SyncTimestampFieldNumber = 2;
    private ulong syncTimestamp_;
    public ulong SyncTimestamp {
      get { return syncTimestamp_; }
      set {
        syncTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "conversation_state" field.</summary>
    public const int ConversationStateFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState> _repeated_conversationState_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState> conversationState_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState> ConversationState {
      get { return conversationState_; }
    }

    public override bool Equals(object other) {
      return Equals(other as SyncAllNewEventsResponse);
    }

    public bool Equals(SyncAllNewEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (SyncTimestamp != other.SyncTimestamp) return false;
      if(!conversationState_.Equals(other.conversationState_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (SyncTimestamp != 0UL) hash ^= SyncTimestamp.GetHashCode();
      hash ^= conversationState_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (SyncTimestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SyncTimestamp);
      }
      conversationState_.WriteTo(output, _repeated_conversationState_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (SyncTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SyncTimestamp);
      }
      size += conversationState_.CalculateSize(_repeated_conversationState_codec);
      return size;
    }

    public void MergeFrom(SyncAllNewEventsResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.SyncTimestamp != 0UL) {
        SyncTimestamp = other.SyncTimestamp;
      }
      conversationState_.Add(other.conversationState_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 16: {
            SyncTimestamp = input.ReadUInt64();
            break;
          }
          case 26: {
            conversationState_.AddEntriesFrom(input, _repeated_conversationState_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncRecentConversationsRequest : pb::IMessage<SyncRecentConversationsRequest> {
    private static readonly pb::MessageParser<SyncRecentConversationsRequest> _parser = new pb::MessageParser<SyncRecentConversationsRequest>(() => new SyncRecentConversationsRequest());
    public static pb::MessageParser<SyncRecentConversationsRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[129]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SyncRecentConversationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SyncRecentConversationsRequest(SyncRecentConversationsRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      maxConversations_ = other.maxConversations_;
      maxEventsPerConversation_ = other.maxEventsPerConversation_;
      syncFilter_ = other.syncFilter_.Clone();
    }

    public SyncRecentConversationsRequest Clone() {
      return new SyncRecentConversationsRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "max_conversations" field.</summary>
    public const int MaxConversationsFieldNumber = 3;
    private ulong maxConversations_;
    public ulong MaxConversations {
      get { return maxConversations_; }
      set {
        maxConversations_ = value;
      }
    }

    /// <summary>Field number for the "max_events_per_conversation" field.</summary>
    public const int MaxEventsPerConversationFieldNumber = 4;
    private ulong maxEventsPerConversation_;
    public ulong MaxEventsPerConversation {
      get { return maxEventsPerConversation_; }
      set {
        maxEventsPerConversation_ = value;
      }
    }

    /// <summary>Field number for the "sync_filter" field.</summary>
    public const int SyncFilterFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.SyncFilter> _repeated_syncFilter_codec
        = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::Netfox.Snoopers.SnooperHangouts.Models.SyncFilter) x);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.SyncFilter> syncFilter_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.SyncFilter>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.SyncFilter> SyncFilter {
      get { return syncFilter_; }
    }

    public override bool Equals(object other) {
      return Equals(other as SyncRecentConversationsRequest);
    }

    public bool Equals(SyncRecentConversationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (MaxConversations != other.MaxConversations) return false;
      if (MaxEventsPerConversation != other.MaxEventsPerConversation) return false;
      if(!syncFilter_.Equals(other.syncFilter_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (MaxConversations != 0UL) hash ^= MaxConversations.GetHashCode();
      if (MaxEventsPerConversation != 0UL) hash ^= MaxEventsPerConversation.GetHashCode();
      hash ^= syncFilter_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (MaxConversations != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MaxConversations);
      }
      if (MaxEventsPerConversation != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(MaxEventsPerConversation);
      }
      syncFilter_.WriteTo(output, _repeated_syncFilter_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (MaxConversations != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxConversations);
      }
      if (MaxEventsPerConversation != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxEventsPerConversation);
      }
      size += syncFilter_.CalculateSize(_repeated_syncFilter_codec);
      return size;
    }

    public void MergeFrom(SyncRecentConversationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.MaxConversations != 0UL) {
        MaxConversations = other.MaxConversations;
      }
      if (other.MaxEventsPerConversation != 0UL) {
        MaxEventsPerConversation = other.MaxEventsPerConversation;
      }
      syncFilter_.Add(other.syncFilter_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 24: {
            MaxConversations = input.ReadUInt64();
            break;
          }
          case 32: {
            MaxEventsPerConversation = input.ReadUInt64();
            break;
          }
          case 42:
          case 40: {
            syncFilter_.AddEntriesFrom(input, _repeated_syncFilter_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncRecentConversationsResponse : pb::IMessage<SyncRecentConversationsResponse> {
    private static readonly pb::MessageParser<SyncRecentConversationsResponse> _parser = new pb::MessageParser<SyncRecentConversationsResponse>(() => new SyncRecentConversationsResponse());
    public static pb::MessageParser<SyncRecentConversationsResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[130]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SyncRecentConversationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SyncRecentConversationsResponse(SyncRecentConversationsResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
      syncTimestamp_ = other.syncTimestamp_;
      conversationState_ = other.conversationState_.Clone();
    }

    public SyncRecentConversationsResponse Clone() {
      return new SyncRecentConversationsResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    /// <summary>Field number for the "sync_timestamp" field.</summary>
    public const int SyncTimestampFieldNumber = 2;
    private ulong syncTimestamp_;
    public ulong SyncTimestamp {
      get { return syncTimestamp_; }
      set {
        syncTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "conversation_state" field.</summary>
    public const int ConversationStateFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState> _repeated_conversationState_codec
        = pb::FieldCodec.ForMessage(26, global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState.Parser);
    private readonly pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState> conversationState_ = new pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState>();
    public pbc::RepeatedField<global::Netfox.Snoopers.SnooperHangouts.Models.ConversationState> ConversationState {
      get { return conversationState_; }
    }

    public override bool Equals(object other) {
      return Equals(other as SyncRecentConversationsResponse);
    }

    public bool Equals(SyncRecentConversationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      if (SyncTimestamp != other.SyncTimestamp) return false;
      if(!conversationState_.Equals(other.conversationState_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      if (SyncTimestamp != 0UL) hash ^= SyncTimestamp.GetHashCode();
      hash ^= conversationState_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
      if (SyncTimestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SyncTimestamp);
      }
      conversationState_.WriteTo(output, _repeated_conversationState_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      if (SyncTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SyncTimestamp);
      }
      size += conversationState_.CalculateSize(_repeated_conversationState_codec);
      return size;
    }

    public void MergeFrom(SyncRecentConversationsResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
      if (other.SyncTimestamp != 0UL) {
        SyncTimestamp = other.SyncTimestamp;
      }
      conversationState_.Add(other.conversationState_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
          case 16: {
            SyncTimestamp = input.ReadUInt64();
            break;
          }
          case 26: {
            conversationState_.AddEntriesFrom(input, _repeated_conversationState_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateWatermarkRequest : pb::IMessage<UpdateWatermarkRequest> {
    private static readonly pb::MessageParser<UpdateWatermarkRequest> _parser = new pb::MessageParser<UpdateWatermarkRequest>(() => new UpdateWatermarkRequest());
    public static pb::MessageParser<UpdateWatermarkRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[131]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UpdateWatermarkRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UpdateWatermarkRequest(UpdateWatermarkRequest other) : this() {
      RequestHeader = other.requestHeader_ != null ? other.RequestHeader.Clone() : null;
      ConversationId = other.conversationId_ != null ? other.ConversationId.Clone() : null;
      lastReadTimestamp_ = other.lastReadTimestamp_;
    }

    public UpdateWatermarkRequest Clone() {
      return new UpdateWatermarkRequest(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader requestHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "conversation_id" field.</summary>
    public const int ConversationIdFieldNumber = 2;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId conversationId_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId ConversationId {
      get { return conversationId_; }
      set {
        conversationId_ = value;
      }
    }

    /// <summary>Field number for the "last_read_timestamp" field.</summary>
    public const int LastReadTimestampFieldNumber = 3;
    private ulong lastReadTimestamp_;
    public ulong LastReadTimestamp {
      get { return lastReadTimestamp_; }
      set {
        lastReadTimestamp_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UpdateWatermarkRequest);
    }

    public bool Equals(UpdateWatermarkRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(ConversationId, other.ConversationId)) return false;
      if (LastReadTimestamp != other.LastReadTimestamp) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (conversationId_ != null) hash ^= ConversationId.GetHashCode();
      if (LastReadTimestamp != 0UL) hash ^= LastReadTimestamp.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (conversationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationId);
      }
      if (LastReadTimestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LastReadTimestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (conversationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationId);
      }
      if (LastReadTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastReadTimestamp);
      }
      return size;
    }

    public void MergeFrom(UpdateWatermarkRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.conversationId_ != null) {
        if (conversationId_ == null) {
          conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
        }
        ConversationId.MergeFrom(other.ConversationId);
      }
      if (other.LastReadTimestamp != 0UL) {
        LastReadTimestamp = other.LastReadTimestamp;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (requestHeader_ == null) {
              requestHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.RequestHeader();
            }
            input.ReadMessage(requestHeader_);
            break;
          }
          case 18: {
            if (conversationId_ == null) {
              conversationId_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ConversationId();
            }
            input.ReadMessage(conversationId_);
            break;
          }
          case 24: {
            LastReadTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateWatermarkResponse : pb::IMessage<UpdateWatermarkResponse> {
    private static readonly pb::MessageParser<UpdateWatermarkResponse> _parser = new pb::MessageParser<UpdateWatermarkResponse>(() => new UpdateWatermarkResponse());
    public static pb::MessageParser<UpdateWatermarkResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Netfox.Snoopers.SnooperHangouts.Models.HangoutsProtocolReflection.Descriptor.MessageTypes[132]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UpdateWatermarkResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UpdateWatermarkResponse(UpdateWatermarkResponse other) : this() {
      ResponseHeader = other.responseHeader_ != null ? other.ResponseHeader.Clone() : null;
    }

    public UpdateWatermarkResponse Clone() {
      return new UpdateWatermarkResponse(this);
    }

    /// <summary>Field number for the "response_header" field.</summary>
    public const int ResponseHeaderFieldNumber = 1;
    private global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader responseHeader_;
    public global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader ResponseHeader {
      get { return responseHeader_; }
      set {
        responseHeader_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UpdateWatermarkResponse);
    }

    public bool Equals(UpdateWatermarkResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHeader, other.ResponseHeader)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (responseHeader_ != null) hash ^= ResponseHeader.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHeader);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (responseHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeader);
      }
      return size;
    }

    public void MergeFrom(UpdateWatermarkResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHeader_ != null) {
        if (responseHeader_ == null) {
          responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
        }
        ResponseHeader.MergeFrom(other.ResponseHeader);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (responseHeader_ == null) {
              responseHeader_ = new global::Netfox.Snoopers.SnooperHangouts.Models.ResponseHeader();
            }
            input.ReadMessage(responseHeader_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
